CREATE PROCEDURE DM_CB.GET_F_LOAN_PORTFOLIO (@PFLAG INT DEFAULT 0, @PDATESTART DATE DEFAULT '2022-01-01',@PDATEEND DATE DEFAULT  CAST(NOW() AS DATE)) 
/*
  œŒ–“‘≈À‹ ¬ƒ ¡ Õ¿ CORE: DWHPLN-9272
  –¿«–¿¡Œ“◊»  : »–¡¿»≈¬ Ã.
*/

SQL SECURITY INVOKER 

BEGIN 

DECLARE V_LOG_ID BIGINT
;
DECLARE @CNT1 INT
;
DECLARE @CNT2 INT
;
DECLARE @CNT3 INT
;

SET V_LOG_ID = (SELECT MAX(RUN_ID)+1 FROM DM_CB.LOG_F_LOAN_PORTFOLIO)
;

--Õ≈ «¿¡€“‹ ”¡–¿“‹ 2020 √Œƒ À≈“ŒÃ (œŒ —Œ√À¿—Œ¬¿Õ»ﬁ — ¬. ∆≈À¿ÕŒ¬€Ã)

IF (@PFLAG = 1) 
 THEN
  SET @PDATESTART = '2021-01-01';
  SET @PDATEEND   = '2021-12-31';
ELSE 
 IF (@PFLAG = 2)
  THEN 
   SET @PDATESTART = DATEADD(YY, -1, NOW());
   SET @PDATEEND   = CAST(NOW() AS DATE);
  ELSE
   SET @PDATESTART = CAST(NOW() AS DATE)-5;
   SET @PDATEEND   = CAST(NOW() AS DATE);
  ENDIF;  
ENDIF;


UPDATE DM_CB.DA_CLASSIFIER 
SET VALUE = NOW()
WHERE CLASSIFIER_ID = 2;


DROP TABLE IF EXISTS TMP_F_LOAN_PORTFOLIO;
DROP TABLE IF EXISTS TMP_BALANCE;
DROP TABLE IF EXISTS TMP_BALANCE_VALUE;
DROP TABLE IF EXISTS TMP_CNTRIND;
DROP TABLE IF EXISTS TMP_INTEREST_RATE;
DROP TABLE IF EXISTS #TMP_NOT_DEPT;
DROP TABLE IF EXISTS #TMP_MATURITY_DATE;
DROP TABLE IF EXISTS #TMP_MATURITY_DATE2;
DROP TABLE IF EXISTS #TMP_BNF300;
DROP TABLE IF EXISTS #TMP_OVERDUE;
DROP TABLE IF EXISTS #TMP_OVERDUE_PRC;
DROP TABLE IF EXISTS #TMP_AMT;
DROP TABLE IF EXISTS #TMP_SADKO_AGR_REST;
DROP TABLE IF EXISTS #TMP_AGREEMENT_ALL_SUM;
DROP TABLE IF EXISTS #TMP_RESERVE_BALANCE;
DROP TABLE IF EXISTS #TMP_RESERVE_VALUE;
DROP TABLE IF EXISTS #TMP_RESEVE_DEF_BALANCE_ALL_SUM;
DROP TABLE IF EXISTS #TMP_RESEVE_DEF_BALANCE;
DROP TABLE IF EXISTS #TMP_LIMIT_BALANCE_ALL_SUM;
DROP TABLE IF EXISTS #TMP_LIMIT_BALANCE;
DROP TABLE IF EXISTS #TMP_LOAN_FACILITY;
DROP TABLE IF EXISTS #TMP_SUBSIDY_RATE;
DROP TABLE IF EXISTS #TMP_SUBSIDY_SMOSZ;
DROP TABLE IF EXISTS #TMP_MANAGEMENT_RATE;
DROP TABLE IF EXISTS #TMP_S;
DROP TABLE IF EXISTS #TMP_COMISS;
DROP TABLE IF EXISTS #TMP_ISSUE;
DROP TABLE IF EXISTS #TMP_COM_RATE;
DROP TABLE IF EXISTS #TMP_BASE_RATE;
DROP TABLE IF EXISTS #TMP_OFFICER;
DROP TABLE IF EXISTS #TMP_INITIATOR;
DROP TABLE IF EXISTS #TMP_GROUP_KRED;
DROP TABLE IF EXISTS #TMP_GROUP_KRED1;
DROP TABLE IF EXISTS #TMP_LOAN_GROUP_LIMIT_HIS;
DROP TABLE IF EXISTS #TMP_MSFO_LOAN_PERCENT;
DROP TABLE IF EXISTS #TMP_MSFO_UNUSED_PERCENT;
DROP TABLE IF EXISTS #TMP_DEPARTMENT_OFFICER;
DROP TABLE IF EXISTS TMP_AGMT_LIM;
DROP TABLE IF EXISTS #TMP_PORTFOLIO_LIAB_POS;
DROP TABLE IF EXISTS #TMP_PORTFOLIO_POT;


CREATE LOCAL TEMPORARY TABLE TMP_F_LOAN_PORTFOLIO (  
    T_RAW_STATUS                CHAR(1)        NOT NULL,
	REPORT_DATE                	DATE           NOT NULL,
	ACCOUNT_ID                 	INTEGER        NULL,
	ACCOUNT_DETAIL_ID          	INTEGER        NULL,
	ACCOUNT_TYPE_ID            	INTEGER        NULL,
	AGREEMENT_ID               	INTEGER        NULL,
	LOAN_FCLY_ID               	INTEGER        NULL IQ UNIQUE (1024) ,
	LOAN_CLASSIFIER_ID         	INTEGER        NULL,
	INTERNAL_ACCOUNT_ID        	INTEGER        NULL,
	CUSTOMER_ID                	INTEGER        NOT NULL,
	INTL_PTFLO_ID              	INTEGER        NOT NULL DEFAULT 0,--INTEGER NULL,
	CUS_PTFLO_ID               	INTEGER        NULL,
	COR_RPT_STRC_ID            	INTEGER        NOT NULL,
	DOMC_CHNL_STRC_ID          	INTEGER        NULL,
	INITIATOR_ID               	INTEGER        NULL,
	COUNTERPARTY_ID            	INTEGER        NOT NULL,
	IDSTY_CLS_ID               	INTEGER        NULL,
	PRODUCT_ID                 	INTEGER        NULL,
	GEO_ID                     	INTEGER        NULL,
	FUND_SOURCE_ID             	INTEGER        NULL,
	ISO_CRCY_ID                	INTEGER        NOT NULL,
	REF_ISO_CRCY_ID            	INTEGER        NOT NULL,
	CUS_PTFLO_MGR_ID           	INTEGER        NULL,
	INTL_PTFLO_MGR_ID          	INTEGER        NULL,
	SYNDICATE_ID               	INTEGER        NULL,
	SYNDICATE_ID2              	INTEGER        NULL,
	APPEAR_DATE                	DATE           NULL,
	CONTINUES_DATE             	DATE           NULL,
	RENEWAL_DATE               	DATE           NULL,
	CLOSING_DATE               	DATE           NULL,
	MATURITY_DATE              	DATE           NULL,
	DEFAULT_DATE               	DATE           NULL,
	DEFAULT_COUNT              	SMALLINT       NULL,
	DEFAULT_VALUE              	NUMERIC(28,6)  NULL,
	DEFAULT_VALUE_REF          	NUMERIC(28,6)  NULL,
	VALUE                      	NUMERIC(28,6)  NULL,
	VALUE_REF                  	NUMERIC(28,6)  NULL,
	QUALITY_CATEGORY           	CHAR(2)        NULL,
	RESERVE_RATE               	NUMERIC(5,2)   NULL,
	RESERVE_VALUE              	NUMERIC(28,6)  NULL,
	INTEREST_RATE              	NUMERIC(28,10) NULL,
	INTEREST_RATE_TYPE         	SMALLINT       NULL,
	BASIS_RATE                 	NUMERIC(28,10) NULL,
	BASIS_RATE_MARGIN          	NUMERIC(28,10) NULL,
	MANAGEMENT_RATE            	NUMERIC(28,10) NULL,
	TRANSFERT_RATE             	NUMERIC(28,10) NULL,
	TOT_LOAN_VALUE             	NUMERIC(28,6)  NULL,
	REF_TOT_LOAN_VALUE         	NUMERIC(28,6)  NULL,
	MULT_CLTRL_IND             	CHAR(1)        NULL,
	TOT_CLTRL_VALUE            	NUMERIC(28,6)  NULL,
	TOT_CLTRL_PCT              	NUMERIC(4,2)   NULL,
	SYND_SHARE_AMT             	NUMERIC(28,6)  NULL,
	SYND_SHARE_PCT             	NUMERIC(4,2)   NULL,
	CRCY_EXCH_RATE             	NUMERIC(18,6)  NULL,
	FIRST_CLTRL_VALUE          	NUMERIC(28,6)  NULL,
	SECOND_CLTRL_VALUE         	NUMERIC(28,6)  NULL,
	TOT_CLTRL_FAIR_VALUE       	NUMERIC(28,6)  NULL,
	REF_TOT_CLTRL_VALUE        	NUMERIC(26,6)  NULL,
	TRANCHE_ISSUE_DATE         	DATE           NULL,
	TRANCHE_MATURITY_DATE      	DATE           NULL,
	TRANCHE_VALUE              	NUMERIC(28,6)  NULL,
	TRANCHE_VALUE_REF          	NUMERIC(28,6)  NULL,
	CHANGE_TIME                	DATETIME       NULL,
	MICRO_TRANCHE_IND          	TINYINT        NULL,
	INSTRUMENT_ID_NK           	VARCHAR(45)    NULL,
	ACCOUNT_ID_NK              	VARCHAR(45)    NULL,
	ACCOUNT_DETAIL_ID_NK       	VARCHAR(45)    NULL,
	LOAN_TYPE                  	VARCHAR(50)    NULL,
    T_DATETIME                  TIMESTAMP      NULL DEFAULT CURRENT TIMESTAMP,	
	BASE_RATE                  	VARCHAR(50)    NULL,
	MANAGEMENT_PORTFOLIO_FLAG  	TINYINT        NOT NULL DEFAULT 0,
	UCLOANRATE                 	NUMERIC(15,5)  NULL,
	LOAN_CLASS                 	VARCHAR(50)    NULL,
	OFFICER                    	VARCHAR(100)   NULL DEFAULT '',
	HEAD_MATURITY_DATE         	DATE           NULL,
	UNDERWRITER                	VARCHAR(100)   NULL,
	OFFICERID                  	BIGINT         NULL,
	UNDERWRITERID              	BIGINT         NULL,
	IDSTY_GRP_CSL_ID           	INTEGER        NULL,
	PERCENT_BALANCE            	NUMERIC(37,6)  NOT NULL DEFAULT 0,
	INTEREST_ACCRUED           	NUMERIC(28,10) NOT NULL DEFAULT 0,
	INTEREST_PAID              	NUMERIC(28,10) NOT NULL DEFAULT 0,
	INTEREST_ARREARS           	NUMERIC(28,10) NOT NULL DEFAULT 0,
	RESERVE_BALANCE            	NUMERIC(28,6)  NOT NULL DEFAULT 0,
	LIMIT_BALANCE              	NUMERIC(28,6)  NOT NULL DEFAULT 0,
	RESEVE_DEF_BALANCE         	NUMERIC(28,6)  NOT NULL DEFAULT 0,
	RESEVE_INT_BALANCE         	NUMERIC(28,6)  NOT NULL DEFAULT 0,
	RESEVE_DEF_INT_BALANCE     	NUMERIC(28,6)  NOT NULL DEFAULT 0,
	RESERVE_LIM_BALANCE        	NUMERIC(28,6)  NOT NULL DEFAULT 0,
	DEFAULT_PERCENT_BALANCE    	NUMERIC(37,6)  NOT NULL DEFAULT 0,
	DEFAULT_PERCENT_OUT_BALANCE	NUMERIC(37,6)  NOT NULL DEFAULT 0,
	LIMIT_BALANCE_REF          	NUMERIC(37,6)  NOT NULL DEFAULT 0,
	SUBSIDY_RATE               	NUMERIC(28,10) NULL,
	DEFAULT_PERCENT_DATE       	DATE           NULL,
    SRS_CD                      D_CODE         NULL,
    T_DATETIME_STAGE            DATE           NOT NULL,
    DEPARTMENT_OFFICER          VARCHAR(254)   NULL,
    DEPARTMENT_OFFICER_DATE     DATE           NULL,
    MSFO_LOAN_PERCENT           NUMERIC(28,6)  NULL,
    MSFO_LOAN_RUR               NUMERIC(28,6)  NOT NULL DEFAULT 0,
    MSFO_UNUSED_PERCENT         NUMERIC(28,6)  NULL,
    MSFO_UNUSED_PERCENT_RUR     NUMERIC(28,6)  NOT NULL DEFAULT 0,
    MSFO_PERCENT_RUR            NUMERIC(28,6)  NOT NULL DEFAULT 0,
    EXCEPTION_MICROTRANCHE_FLAG INTEGER        NOT NULL DEFAULT 0,
    CLIMRWADEALID               VARCHAR(256)   NULL,   
    CLIMRWAPORT                 VARCHAR(256)   NULL,
    MAIN_AGMT_NUMBER            VARCHAR(512)   NULL,
    MAIN_OPEN_DT                DATE           NULL,
    MAIN_FACT_CLOSE_DT          DATE           NULL,
    MAIN_PLAN_CLOSE_DT          DATE           NULL,
    C0017_VALUE                 VARCHAR(256)   NULL,
    F_AGMT_LIM_AMT              NUMERIC(28,6)  NULL,
    F_AGMT_CURRENCY             VARCHAR(5)     NULL,
    F_AGMT_REST                 NUMERIC(28,6)  NULL,
    M_AGMT_LIM_AMT              NUMERIC(28,6)  NULL,
    M_AGMT_CURRENCY             VARCHAR(5)     NULL,
    BANK_PRINCIPAL              VARCHAR(512)   NULL,
    BANK_PRINCIPAL_INN          VARCHAR(32)    NULL,
    LIMIT_TYPE_NM               VARCHAR(256)   NULL,
    AGENT_COMMISSION_RATE       NUMERIC(28,10) NULL,
    MSFO_LOAN_PERCENT_OVERDUE   NUMERIC(28,6)  NULL,
    PORTFOLIO_LIAB_POS          VARCHAR(64)    NULL,
    RESERVE_RATE_POT            NUMERIC(32,12) NULL,
    PODR_TYPE                   VARCHAR(256)   NULL,
    PODR_NAME                   VARCHAR(256)   NULL,
    PAYM_LAST_DT                DATE           NULL,
    AMOUNT                      NUMERIC(32,8)  NULL,
    PRINC_PERIOD_TERM           SMALLINT       NULL,
    TRANCHE_MAX_TERM            INTEGER        NULL,
    BANK_PRINCIPAL_ENTITY_ID    UNSIGNED INTEGER   NULL,
    C0016_VALUE                 VARCHAR(256)       NULL,
    C0016_BEGIN_DATE            DATE               NULL,
    C0137_VALUE                 VARCHAR(256)       NULL,
    C0137_BEGIN_DATE            DATE               NULL,
    CLS_MSP_BEGIN_DATE          DATE               NULL
    ) ON COMMIT PRESERVE ROWS;
    
CREATE LOCAL TEMPORARY TABLE TMP_BALANCE (
     AGREEMENT_ID       INTEGER       NOT NULL,
     REPORT_DATE        DATE          NOT NULL,
     BALANCE_OUT 	    NUMERIC(28,6) NULL,
     BALANCE_OUT_EQV 	NUMERIC(28,6) NULL,
     ACCT_BAL_BASE_TYPE VARCHAR(45)   NULL,
     ACCT_BAL_BASE_CODE VARCHAR(45)   NULL
     ) ON COMMIT PRESERVE ROWS;
	 
CREATE LOCAL TEMPORARY TABLE TMP_BALANCE_VALUE (
     AGREEMENT_ID       INTEGER       NOT NULL,
     REPORT_DATE        DATE          NOT NULL,
     BALANCE_OUT 	    NUMERIC(28,6) NULL,
     BALANCE_OUT_EQV 	NUMERIC(28,6) NULL,
     ACCT_BAL_BASE_TYPE VARCHAR(45)   NULL,
     ACCT_BAL_BASE_CODE VARCHAR(45)   NULL,
     BAL_ACCT_2LVL_NBR  VARCHAR(5)    NULL
     ) ON COMMIT PRESERVE ROWS;	 
     
CREATE LOCAL TEMPORARY TABLE TMP_CNTRIND ( 
     ENTITY_ID   	UNSIGNED INT NOT NULL,
     INDUSTRY_ID 	UNSIGNED INT NOT NULL,
	 AGREEMENT_ID	UNSIGNED INT NOT NULL,
	 ENTITY_ASN_ROLE_CD	G_CD64 NOT NULL,	 
	 BEGIN_DATE  	DATE  NULL,
	 END_DATE    	DATETIME  NULL 
     ) ON COMMIT PRESERVE ROWS;
     
CREATE LOCAL TEMPORARY TABLE TMP_INTEREST_RATE ( 
	LOAN_FCLY_ID	INTEGER        NOT NULL,
	BEGIN_DATE  	DATE           NULL,
	END_DATE    	DATE           NULL,
	RATE        	NUMERIC(34,12) NULL,
	FLOAT_BASE      NUMERIC(34,12) NULL,
	) ON COMMIT PRESERVE ROWS;

CREATE LOCAL TEMPORARY TABLE TMP_AGMT_LIM (
     LOAN_FCLY_ID       INTEGER       NOT NULL,
     AGREEMENT_1_ID       INTEGER     NOT NULL
     ) ON COMMIT PRESERVE ROWS
;
 
CREATE LOCAL TEMPORARY TABLE TMP_CLASSIFIER (  
   AGREEMENT_ID          INTEGER            NOT NULL,
   VALUE                 VARCHAR(256)       NULL,
   CLASSIFIER_NM         VARCHAR(256)       NULL,
   START_DATE            DATE               NULL,
   FINAL_DATE            DATE               NULL
   )ON COMMIT PRESERVE ROWS 
;

CREATE LOCAL TEMPORARY TABLE TMP_RISK_GROUP (
     AGREEMENT_ID       INTEGER        NOT NULL,
     RISK_GROUP_NM      VARCHAR(512)   NULL,
     RESERVE_RATE 	    NUMERIC(32,12) NULL,
     START_DATE 	    DATE           NULL,
     FINAL_DATE         DATE           NULL
     ) ON COMMIT PRESERVE ROWS
;	 
CREATE HG INDEX IDX_HG_TMP_RISK_GROUP_AGREEMENT_ID ON TMP_RISK_GROUP (AGREEMENT_ID)
;
CREATE HG INDEX IDX_HG_TMP_CLASSIFIER_AGREEMENT_ID ON TMP_CLASSIFIER (AGREEMENT_ID)
;     
CREATE HG INDEX IDX_HG_TMP_F_LOAN_PORTFOLIO_AGREEMENT_ID ON TMP_F_LOAN_PORTFOLIO (AGREEMENT_ID)
;
CREATE HG INDEX IDX_HG_TMP_F_LOAN_PORTFOLIO_LOAN_FCLY_ID ON TMP_F_LOAN_PORTFOLIO (LOAN_FCLY_ID)
;
CREATE HG INDEX IDX_HG_TMP_F_LOAN_PORTFOLIO_REPORT_DATE  ON TMP_F_LOAN_PORTFOLIO (REPORT_DATE)
;
CREATE HG INDEX IDX_HG_TMP_F_LOAN_PORTFOLIO_COUNTERPARTY_ID  ON TMP_F_LOAN_PORTFOLIO (COUNTERPARTY_ID)
;

CREATE HG INDEX IDX_HG_TMP_BALANCE_AGREEMENT_ID ON TMP_BALANCE   (AGREEMENT_ID)
;
CREATE HG INDEX IDX_HG_TMP_BALANCE_REPORT_DATE  ON TMP_BALANCE   (REPORT_DATE)
;

CREATE HG INDEX IDX_HG_TMP_BALANCE_VALUE_AGREEMENT_ID ON TMP_BALANCE_VALUE   (AGREEMENT_ID)
;
CREATE HG INDEX IDX_HG_TMP_BALANCE_VALUE_REPORT_DATE  ON TMP_BALANCE_VALUE   (REPORT_DATE)
;

CREATE HG INDEX IX_TMP_CNTRIND_ENTITY_ID ON  TMP_CNTRIND(ENTITY_ID)
;
CREATE HG INDEX IX_TMP_CNTRIND_AGREEMENT_ID ON  TMP_CNTRIND(AGREEMENT_ID  )
;

CREATE HG INDEX IDX_HG_TMP_INTEREST_RATE_LOAN_FCLY_ID ON TMP_INTEREST_RATE (LOAN_FCLY_ID)
;
   
CREATE HG INDEX IDX_HG_LOAN_FCLY_ID_TMP_AGMT_LIM ON TMP_AGMT_LIM (LOAN_FCLY_ID)
;
CREATE HG INDEX IDX_HG_LOAN_FCLY_ID_TMP_AGREEMENT_1_ID ON TMP_AGMT_LIM (AGREEMENT_1_ID)
;	  
	     
COMMIT;   


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT TMP_F_LOAN_PORTFOLIO',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

INSERT INTO TMP_F_LOAN_PORTFOLIO
SELECT  DISTINCT 
        CAST('L' AS CHAR(1))                               AS T_RAW_STATUS,
        C.DT                                               AS REPORT_DATE,
        NULL                                               AS ACCOUNT_ID,
        NULL                                               AS ACCOUNT_DETAIL_ID,
        NULL                                               AS ACCOUNT_TYPE_ID,
        CASE WHEN ISNULL(AGR_ASN.AGREEMENT_1_ID,0) = 0 
          THEN AGR.AGREEMENT_ID
          ELSE AGR_ASN.AGREEMENT_1_ID END                  AS AGREEMENT_ID,
        AGR.AGREEMENT_ID                                   AS LOAN_FCLY_ID, 
        NULL                                               AS LOAN_CLASSIFIER_ID,
        NULL                                               AS INTERNAL_ACCOUNT_ID,
        --AGR.CNTR_ENTITY_ID CUSTOMER_ID,
        0                                                  AS CUSTOMER_ID,
        0                                                  AS INTL_PTFLO_ID,
        NULL                                               AS CUS_PTFLO_ID,
        AGR.BRNCH_ENTITY_ID                                AS COR_RPT_STRC_ID,
        CASE WHEN ISNULL(DEP.BRNCH_ENTITY_ID,0) = 0 
          THEN AGR.BRNCH_ENTITY_ID
          ELSE DEP.BRNCH_ENTITY_ID END                     AS DOMC_CHNL_STRC_ID,
        NULL                                               AS INITIATOR_ID,
        0                                                  AS COUNTERPARTY_ID,
        NULL                                               AS IDSTY_CLS_ID,
        AGR.PRODUCT_ID,
        NULL                                               AS GEO_ID,
        NULL                                               AS FUND_SOURCE_ID,
        AGR.CURRENCY_ID                                    AS ISO_CRCY_ID, 
        CUR.CURRENCY_ID                                    AS REF_ISO_CRCY_ID,
        NULL                                               AS CUS_PTFLO_MGR_ID,
        NULL                                               AS INTL_PTFLO_MGR_ID, 
        NULL                                               AS SYNDICATE_ID, 
        NULL                                               AS SYNDICATE_ID2,
        AGR.VALUE_DT                                       AS APPEAR_DATE,
        NULL                                               AS CONTINUES_DATE,
        NULL                                               AS RENEWAL_DATE,
        CASE WHEN AGR.FACT_CLOSE_DT > '2050-01-01'
         THEN CAST('2050-01-01' AS DATE)
             WHEN AGR.FACT_CLOSE_DT < AP.PAYMENT_DT
         THEN AP.PAYMENT_DT
        ELSE AGR.FACT_CLOSE_DT END                         AS CLOSING_DATE,
        NULL                                               AS MATURITY_DATE,
        NULL                                               AS DEFAULT_DATE,
        NULL                                               AS DEFAULT_COUNT,
        0                                                  AS DEFAULT_VALUE,
        0                                                  AS DEFAULT_VALUE_REF,
        0                                                  AS [VALUE], 
        0                                                  AS VALUE_REF,
        NULL                                               AS QUALITY_CATEGORY,
        NULL                                               AS RESERVE_RATE,
        NULL                                               AS RESERVE_VALUE,
        0                                                  AS INTEREST_RATE,
        NULL                                               AS INTEREST_RATE_TYPE,
        NULL /*(AGR.INTEREST_RATE-DFR.MARGIN)/ NULLIF(DFR.FACTOR,0)*/ AS BASIS_RATE,
        NULL/*DFR.MARGIN*/                                         AS BASIS_RATE_MARGIN,
        NULL                                               AS MANAGEMENT_RATE,
        NULL                                               AS TRANSFERT_RATE,
        NULL                                               AS TOT_LOAN_VALUE,
        NULL                                               AS REF_TOT_LOAN_VALUE,
        NULL                                               AS MULT_CLTRL_IND,
        NULL                                               AS TOT_CLTRL_VALUE,
        NULL                                               AS TOT_CLTRL_PCT,
        NULL                                               AS SYND_SHARE_AMT,
        NULL                                               AS YND_SHARE_PCT,
        RATE.PRICE                                         AS CRCY_EXCH_RATE,
        NULL                                               AS FIRST_CLTRL_VALUE,
        NULL                                               AS SECOND_CLTRL_VALUE,
        NULL                                               AS TOT_CLTRL_FAIR_VALUE,
        NULL                                               AS REF_TOT_CLTRL_VALUE,
        NULL                                               AS TRANCHE_ISSUE_DATE,
        NULL                                               AS TRANCHE_MATURITY_DATE,
        NULL                                               AS TRANCHE_VALUE,
        NULL                                               AS TRANCHE_VALUE_REF,
        NULL                                               AS CHANGE_TIME,
        NULL                                               AS MICRO_TRANCHE_IND,
        AGR.ABS_ID                                         AS INSTRUMENT_ID_NK,
        NULL                                               AS ACCOUNT_ID_NK,
        NULL                                               AS ACCOUNT_DETAIL_ID_NK,
        AGR.PRDCT_KIND_CD                                  AS LOAN_TYPE,
        NOW()                                              AS T_DATETIME,
        NULL/*DFR.[NAME]*/                                         AS BASE_RATE,
        0                                                  AS MANAGEMENT_PORTFOLIO_FLAG,
        NULL                                               AS UCLOANRATE,
        /*AGR.PRDCT_KIND_CD*/ 
        CASE WHEN AGR.AGREEMENT_CLASS_NM LIKE '%›¡√%'
         THEN AGR.AGREEMENT_CLASS_NM
             WHEN AGR.PRDCT_KIND_CD =' –≈ƒ»“'
         THEN NULL
        ELSE AGR.AGREEMENT_CLASS_CD END                    AS LOAN_CLASS,
        NULL                                               AS OFFICER,
        NULL                                               AS HEAD_MATURITY_DATE,
        NULL                                               AS UNDERWRITER,
        NULL                                               AS OFFICERID,
        NULL                                               AS UNDERWRITERID,
        NULL                                               AS IDSTY_GRP_CSL_ID,
        0                                                  AS PERCENT_BALANCE,
        0                                                  AS INTEREST_ACCRUED,
        0                                                  AS INTEREST_PAID,
        0                                                  AS IINTEREST_ARREARS,
        0                                                  AS IRESERVE_BALANCE,
        0                                                  AS ILIMIT_BALANCE,
        0                                                  AS RESEVE_DEF_BALANCE,
        0                                                  AS RESEVE_INT_BALANCE,
        0                                                  AS RESEVE_DEF_INT_BALANCE,
        0                                                  AS RESERVE_LIM_BALANCE,
        0                                                  AS DEFAULT_PERCENT_BALANCE,
        0                                                  AS EFAULT_PERCENT_OUT_BALANCE,
        0                                                  AS LIMIT_BALANCE_REF,
        0 /*ISNULL(AGMT_RT_S.RATE,0)*/                     AS SUBSIDY_RATE,
        NULL                                               AS DEFAULT_PERCENT_DATE,
        AGR.OWNER_SRS_CD                                   AS SRS_CD,
        AGR.T_DATETIME_STAGE                               AS T_DATETIME_STAGE,
        NULL                                               AS DEPARTMENT_OFFICER,
        NULL                                               AS DEPARTMENT_OFFICER_DATE,
        NULL                                               AS MSFO_LOAN_PERCENT,
        0                                                  AS MSFO_LOAN_RUR,
        NULL                                               AS MSFO_UNUSED_PERCENT,
        0                                                  AS MSFO_UNUSED_PERCENT_RUR,
        0                                                  AS MSFO_PERCENT_RUR,
        0                                                  AS EXCEPTION_MICROTRANCHE_FLAG,--“≈’Õ»◊≈— Œ≈ œŒÀ≈
        NULL                                               AS CLIMRWADEALID,   
        NULL                                               AS CLIMRWAPORT,
        NULL                                               AS MAIN_AGMT_NUMBER,
        NULL                                               AS MAIN_OPEN_DT,
        NULL                                               AS MAIN_FACT_CLOSE_DT,
        NULL                                               AS MAIN_PLAN_CLOSE_DT,
        NULL AS C0017_VALUE,
        NULL AS F_AGMT_LIM_AMT,
        NULL AS F_AGMT_CURRENCY,
        NULL AS F_AGMT_REST,
        NULL AS M_AGMT_LIM_AMT,
        NULL AS M_AGMT_CURRENCY,
        NULL AS BANK_PRINCIPAL,
        NULL AS BANK_PRINCIPAL_INN,
        NULL AS LIMIT_TYPE_NM,
        NULL AS AGENT_COMMISSION_RATE,
        NULL AS MSFO_LOAN_PERCENT_OVERDUE,
        NULL AS PORTFOLIO_LIAB_POS,
        NULL AS RESERVE_RATE_POT,
        NULL AS PODR_TYPE,
        NULL AS PODR_NAME,
        NULL AS PAYM_LAST_DT,
        NULL AS AMOUNT,
        NULL AS PRINC_PERIOD_TERM,
        NULL AS TRANCHE_MAX_TERM,
        NULL AS BANK_PRINCIPAL_ENTITY_ID,
        NULL AS C0016_VALUE,
        NULL AS C0016_BEGIN_DATE,
        NULL AS C0137_VALUE,
        NULL AS C0137_BEGIN_DATE,
        NULL AS CLS_MSP_BEGIN_DATE
FROM CORE.D_AGREEMENT AGR 
JOIN CORE.D_CALENDAR C ON AGR.OPEN_DT /*AGR.VALUE_DT*/<=C.DT 
 AND AGR.FACT_CLOSE_DT>=C.DT-- (CASE WHEN AGR.FACT_CLOSE_DT< AGR.PLAN_CLOSE_DT THEN AGR.PLAN_CLOSE_DT ELSE AGR.FACT_CLOSE_DT END) >=C.DT
 AND C.DT <> '2050-01-01'
JOIN CORE.D_CURRENCY AS CUR ON CUR.SHORT_NM = 'RUB' 
 AND CUR.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.F_CURRENCY_RATE AS RATE ON RATE.BASE_CRCY_ID = AGR.CURRENCY_ID 
 AND RATE.RATE_DT = C.DT 
 AND RATE.QUOTE_CRCY_NUM_CD IN ('643','810')
 AND RATE.T_RAW_STATUS NOT IN ('X','W','D')
LEFT  JOIN (
            SELECT ENTITY_ID AS BRNCH_ENTITY_ID,0 AS DEPT_ENTITY_ID
            FROM CORE.V_D_BRANCH
            UNION
            SELECT BRNCH_ENTITY_ID,ENTITY_ID AS DEPT_ENTITY_ID
            FROM CORE.V_D_DEPT
            WHERE BRNCH_ENTITY_ID IS NOT NULL
           ) DEP ON AGR.DEPT_ENTITY_ID = (CASE WHEN DEP.DEPT_ENTITY_ID  = 0 THEN DEP.BRNCH_ENTITY_ID ELSE DEP.DEPT_ENTITY_ID END)

LEFT JOIN CORE.F_AGMT_ASN AGR_ASN ON AGR.AGREEMENT_ID = AGR_ASN.AGREEMENT_2_ID 
 AND AGR_ASN.AGMT_1_ROLE_CD = 'MAIN_INSTRUMENT' 
 AND AGR_ASN.AGMT_2_ROLE_CD  = 'TRANCHE_INSTRUMENT'
 AND AGR_ASN.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.V_F_AGMT_RATE_PERIOD ARP ON AGR.AGREEMENT_ID = ARP.AGREEMENT_ID 
 AND C.DT>= ARP.BEGIN_DATE 
 AND C.DT <= ARP.END_DATE 
 AND ARP.FLOAT_RATE_ID <> 0 
 AND ARP.RATE_TYPE_KIND_CD = '%% œŒ Œ—Õ. —◊≈“”' 
 AND ARP.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.V_D_FLOAT_RATE DFR ON ARP.FLOAT_RATE_ID = DFR.FLOAT_RATE_ID 
 AND DFR.T_RAW_STATUS  NOT IN ('X','W','D') 
LEFT JOIN (
           SELECT AGR.AGREEMENT_ID,MAX(AP.PAYMENT_DT) PAYMENT_DT 
           FROM CORE.V_D_AGREEMENT AGR
           JOIN CORE.V_F_AGMT_PAYMENTS AP ON AGR.AGREEMENT_ID = AP.AGREEMENT_ID
           JOIN CORE.V_D_ACCOUNT A ON AP.ACCOUNT_ID  = A.ACCOUNT_ID
            AND A.ACCOUNT_NBR LIKE '706%'
           WHERE 1 = 1
           AND AP.PAYMENT_DT > AGR.FACT_CLOSE_DT
            AND (
                  (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') 
                    AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
                OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  
               AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
                 )  
            AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) 
            AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
            AND AP.PAYMENT_DT >= @PDATESTART
            AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
           GROUP BY AGR.AGREEMENT_ID 
         ) AP ON AGR.AGREEMENT_ID = AP.AGREEMENT_ID
WHERE AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND C.DT >= @PDATESTART 
 AND C.DT <= @PDATEEND  
 AND ( 
      (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
       OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
      ) 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) --ƒŒ¡¿¬À≈ÕŒ »— Àﬁ◊≈Õ»≈ œŒ —¿ƒ Œ
 AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%' --DWHPLN-19447
 AND AGR.PRDCT_SUBTYPE_CD <> 'DSL_LIM_DEBT'
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT TMP_F_LOAN_PORTFOLIO (COMISSION)',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
--¬—“¿¬Àﬂ≈Ã  ŒÃ»——»,  Œ“Œ–€≈ ¡€À» œŒ—À≈ «¿ –€“»ﬂ ƒŒ√Œ¬Œ–¿:
INSERT INTO TMP_F_LOAN_PORTFOLIO  
SELECT  DISTINCT 
        CAST('L' AS CHAR(1))                               AS T_RAW_STATUS,
        C.DT                                               AS REPORT_DATE,
        NULL                                               AS ACCOUNT_ID,
        NULL                                               AS ACCOUNT_DETAIL_ID,
        NULL                                               AS ACCOUNT_TYPE_ID,
        CASE WHEN ISNULL(AGR_ASN.AGREEMENT_1_ID,0) = 0 
          THEN AGR.AGREEMENT_ID
          ELSE AGR_ASN.AGREEMENT_1_ID END                  AS AGREEMENT_ID,
        AGR.AGREEMENT_ID                                   AS LOAN_FCLY_ID, 
        NULL                                               AS LOAN_CLASSIFIER_ID,
        NULL                                               AS INTERNAL_ACCOUNT_ID,
        --AGR.CNTR_ENTITY_ID CUSTOMER_ID,
        0                                                  AS CUSTOMER_ID,
        0                                                  AS INTL_PTFLO_ID,
        NULL                                               AS CUS_PTFLO_ID,
        AGR.BRNCH_ENTITY_ID                                AS COR_RPT_STRC_ID,
        CASE WHEN ISNULL(DEP.BRNCH_ENTITY_ID,0) = 0 
          THEN AGR.BRNCH_ENTITY_ID
          ELSE DEP.BRNCH_ENTITY_ID END                     AS DOMC_CHNL_STRC_ID,
        NULL                                               AS INITIATOR_ID,
        0                                                  AS COUNTERPARTY_ID,
        NULL                                               AS IDSTY_CLS_ID,
        AGR.PRODUCT_ID,
        NULL                                               AS GEO_ID,
        NULL                                               AS FUND_SOURCE_ID,
        AGR.CURRENCY_ID                                    AS ISO_CRCY_ID, 
        CUR.CURRENCY_ID                                    AS REF_ISO_CRCY_ID,
        NULL                                               AS CUS_PTFLO_MGR_ID,
        NULL                                               AS INTL_PTFLO_MGR_ID, 
        NULL                                               AS SYNDICATE_ID, 
        NULL                                               AS SYNDICATE_ID2,
        AGR.VALUE_DT                                       AS APPEAR_DATE,
        NULL                                               AS CONTINUES_DATE,
        NULL                                               AS RENEWAL_DATE,
        CASE WHEN AGR.FACT_CLOSE_DT > '2050-01-01'
         THEN CAST('2050-01-01' AS DATE)
             WHEN AGR.FACT_CLOSE_DT < AP.PAYMENT_DT
         THEN AP.PAYMENT_DT
        ELSE AGR.FACT_CLOSE_DT END                         AS CLOSING_DATE,
        NULL                                               AS MATURITY_DATE,
        NULL                                               AS DEFAULT_DATE,
        NULL                                               AS DEFAULT_COUNT,
        0                                                  AS DEFAULT_VALUE,
        0                                                  AS DEFAULT_VALUE_REF,
        0                                                  AS [VALUE], 
        0                                                  AS VALUE_REF,
        NULL                                               AS QUALITY_CATEGORY,
        NULL                                               AS RESERVE_RATE,
        NULL                                               AS RESERVE_VALUE,
        0                                                  AS INTEREST_RATE,
        NULL                                               AS INTEREST_RATE_TYPE,
        NULL                                               AS BASIS_RATE,
        NULL                                               AS BASIS_RATE_MARGIN,
        NULL                                               AS MANAGEMENT_RATE,
        NULL                                               AS TRANSFERT_RATE,
        NULL                                               AS TOT_LOAN_VALUE,
        NULL                                               AS REF_TOT_LOAN_VALUE,
        NULL                                               AS MULT_CLTRL_IND,
        NULL                                               AS TOT_CLTRL_VALUE,
        NULL                                               AS TOT_CLTRL_PCT,
        NULL                                               AS SYND_SHARE_AMT,
        NULL                                               AS YND_SHARE_PCT,
        RATE.PRICE                                         AS CRCY_EXCH_RATE,
        NULL                                               AS FIRST_CLTRL_VALUE,
        NULL                                               AS SECOND_CLTRL_VALUE,
        NULL                                               AS TOT_CLTRL_FAIR_VALUE,
        NULL                                               AS REF_TOT_CLTRL_VALUE,
        NULL                                               AS TRANCHE_ISSUE_DATE,
        NULL                                               AS TRANCHE_MATURITY_DATE,
        NULL                                               AS TRANCHE_VALUE,
        NULL                                               AS TRANCHE_VALUE_REF,
        NULL                                               AS CHANGE_TIME,
        NULL                                               AS MICRO_TRANCHE_IND,
        AGR.ABS_ID                                         AS INSTRUMENT_ID_NK,
        NULL                                               AS ACCOUNT_ID_NK,
        NULL                                               AS ACCOUNT_DETAIL_ID_NK,
        AGR.PRDCT_KIND_CD                                  AS LOAN_TYPE,
        NOW()                                              AS T_DATETIME,
        NULL/*DFR.[NAME]*/                                 AS BASE_RATE,
        0                                                  AS MANAGEMENT_PORTFOLIO_FLAG,
        NULL                                               AS UCLOANRATE,

        CASE WHEN AGR.AGREEMENT_CLASS_NM LIKE '%›¡√%'
         THEN AGR.AGREEMENT_CLASS_NM
             WHEN AGR.PRDCT_KIND_CD =' –≈ƒ»“'
         THEN NULL
        ELSE AGR.AGREEMENT_CLASS_CD END                    AS LOAN_CLASS,
        NULL                                               AS OFFICER,
        NULL                                               AS HEAD_MATURITY_DATE,
        NULL                                               AS UNDERWRITER,
        NULL                                               AS OFFICERID,
        NULL                                               AS UNDERWRITERID,
        NULL                                               AS IDSTY_GRP_CSL_ID,
        0                                                  AS PERCENT_BALANCE,
        0                                                  AS INTEREST_ACCRUED,
        0                                                  AS INTEREST_PAID,
        0                                                  AS IINTEREST_ARREARS,
        0                                                  AS IRESERVE_BALANCE,
        0                                                  AS ILIMIT_BALANCE,
        0                                                  AS RESEVE_DEF_BALANCE,
        0                                                  AS RESEVE_INT_BALANCE,
        0                                                  AS RESEVE_DEF_INT_BALANCE,
        0                                                  AS RESERVE_LIM_BALANCE,
        0                                                  AS DEFAULT_PERCENT_BALANCE,
        0                                                  AS EFAULT_PERCENT_OUT_BALANCE,
        0                                                  AS LIMIT_BALANCE_REF,
        0                                                  AS SUBSIDY_RATE,
        NULL                                               AS DEFAULT_PERCENT_DATE,
        AGR.OWNER_SRS_CD                                   AS SRS_CD,
        AGR.T_DATETIME_STAGE                               AS T_DATETIME_STAGE,
        NULL                                               AS DEPARTMENT_OFFICER,
        NULL                                               AS DEPARTMENT_OFFICER_DATE,
        NULL                                               AS MSFO_LOAN_PERCENT,
        0                                                  AS MSFO_LOAN_RUR,
        NULL                                               AS MSFO_UNUSED_PERCENT,
        0                                                  AS MSFO_UNUSED_PERCENT_RUR, 
        0                                                  AS MSFO_PERCENT_RUR,
        0                                                  AS EXCEPTION_MICROTRANCHE_FLAG,--“≈’Õ»◊≈— Œ≈ œŒÀ≈
        NULL                                               AS CLIMRWADEALID,   
        NULL                                               AS CLIMRWAPORT,
        NULL                                               AS MAIN_AGMT_NUMBER,
        NULL                                               AS MAIN_OPEN_DT,
        NULL                                               AS MAIN_FACT_CLOSE_DT,
        NULL                                               AS MAIN_PLAN_CLOSE_DT,
        NULL AS C0017_VALUE,        
        NULL AS F_AGMT_LIM_AMT,
        NULL AS F_AGMT_CURRENCY,
        NULL AS F_AGMT_REST,
        NULL AS M_AGMT_LIM_AMT,
        NULL AS M_AGMT_CURRENCY,
        NULL AS BANK_PRINCIPAL,
        NULL AS BANK_PRINCIPAL_INN,
        NULL AS LIMIT_TYPE_NM,
        NULL AS AGENT_COMMISSION_RATE,
        NULL AS MSFO_LOAN_PERCENT_OVERDUE,
        NULL AS PORTFOLIO_LIAB_POS,
        NULL AS RESERVE_RATE_POT,
        NULL AS PODR_TYPE,
        NULL AS PODR_NAME,
        NULL AS PAYM_LAST_DT,
        NULL AS AMOUNT,
        NULL AS PRINC_PERIOD_TERM,
        NULL AS TRANCHE_MAX_TERM,
        NULL AS BANK_PRINCIPAL_ENTITY_ID,
        NULL AS C0016_VALUE,
        NULL AS C0016_BEGIN_DATE,
        NULL AS C0137_VALUE,
        NULL AS C0137_BEGIN_DATE,
        NULL AS CLS_MSP_BEGIN_DATE
FROM CORE.D_AGREEMENT AGR 
JOIN (
           SELECT AGR.AGREEMENT_ID,MAX(AP.PAYMENT_DT) PAYMENT_DT 
           FROM CORE.V_D_AGREEMENT AGR
           JOIN CORE.V_F_AGMT_PAYMENTS AP ON AGR.AGREEMENT_ID = AP.AGREEMENT_ID
           JOIN CORE.V_D_ACCOUNT A ON AP.ACCOUNT_ID  = A.ACCOUNT_ID
            AND A.ACCOUNT_NBR LIKE '706%'
           WHERE 1 = 1
           AND AP.PAYMENT_DT > AGR.FACT_CLOSE_DT
            AND (
                  (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') 
                    AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
                OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  
               AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
                 )  
            AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) 
            AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
            AND AP.PAYMENT_DT >= @PDATESTART
            AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
           GROUP BY AGR.AGREEMENT_ID 
         ) AP ON AGR.AGREEMENT_ID = AP.AGREEMENT_ID
JOIN CORE.D_CALENDAR C ON AGR.OPEN_DT <=C.DT 
 AND (CASE WHEN AGR.FACT_CLOSE_DT < AP.PAYMENT_DT 
       THEN AP.PAYMENT_DT 
      ELSE AGR.FACT_CLOSE_DT END) >=C.DT
  AND C.DT <> '2050-01-01'
JOIN CORE.D_CURRENCY AS CUR ON CUR.SHORT_NM = 'RUB' 
 AND CUR.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.F_CURRENCY_RATE AS RATE ON RATE.BASE_CRCY_ID = AGR.CURRENCY_ID 
 AND RATE.RATE_DT = C.DT 
 AND RATE.QUOTE_CRCY_NUM_CD IN ('643','810')
 AND RATE.T_RAW_STATUS NOT IN ('X','W','D')
LEFT  JOIN (
            SELECT ENTITY_ID AS BRNCH_ENTITY_ID,0 AS DEPT_ENTITY_ID
            FROM CORE.V_D_BRANCH
      
            UNION
            SELECT BRNCH_ENTITY_ID,ENTITY_ID AS DEPT_ENTITY_ID
            FROM CORE.V_D_DEPT
            WHERE BRNCH_ENTITY_ID IS NOT NULL
           ) DEP ON AGR.DEPT_ENTITY_ID = (CASE WHEN DEP.DEPT_ENTITY_ID  = 0 THEN DEP.BRNCH_ENTITY_ID ELSE DEP.DEPT_ENTITY_ID END)
LEFT JOIN CORE.F_AGMT_ASN AGR_ASN ON AGR.AGREEMENT_ID = AGR_ASN.AGREEMENT_2_ID 
 AND AGR_ASN.AGMT_1_ROLE_CD = 'MAIN_INSTRUMENT' 
 AND AGR_ASN.AGMT_2_ROLE_CD  = 'TRANCHE_INSTRUMENT'
 AND AGR_ASN.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.V_F_AGMT_RATE_PERIOD ARP ON AGR.AGREEMENT_ID = ARP.AGREEMENT_ID 
 AND C.DT>= ARP.BEGIN_DATE 
 AND C.DT <= ARP.END_DATE 
 AND ARP.FLOAT_RATE_ID <> 0 
 AND ARP.RATE_TYPE_KIND_CD = '%% œŒ Œ—Õ. —◊≈“”' 
 AND ARP.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.V_D_FLOAT_RATE DFR ON ARP.FLOAT_RATE_ID = DFR.FLOAT_RATE_ID 
 AND DFR.T_RAW_STATUS  NOT IN ('X','W','D') 
WHERE AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND C.DT >= @PDATESTART 
 AND C.DT <= @PDATEEND  
 AND ( 
      (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
       OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
      ) 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) --ƒŒ¡¿¬À≈ÕŒ »— Àﬁ◊≈Õ»≈ œŒ —¿ƒ Œ
 AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
 AND NOT EXISTS (SELECT 1 
                 FROM TMP_F_LOAN_PORTFOLIO T 
                 WHERE T.LOAN_FCLY_ID = AGR.AGREEMENT_ID
                  AND T.REPORT_DATE = C.DT)
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'        
 AND AGR.PRDCT_SUBTYPE_CD <> 'DSL_LIM_DEBT'         
;
                  
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT TMP_F_LOAN_PORTFOLIO (Ã≈Õﬂ≈Ã ƒ¿“” «¿ –€“»ﬂ —ƒ≈À » Œ“ ƒ¿“€ Œ—“¿“ ¿ œŒ —◊≈“¿Ã 91315 — Õ”À≈¬€Ã Œ—“¿“ ŒÃ)',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
--Ã≈Õﬂ≈Ã ƒ¿“” «¿ –€“»ﬂ —ƒ≈À » Œ“ ƒ¿“€ Œ—“¿“ ¿ œŒ —◊≈“¿Ã 91315 — Õ”À≈¬€Ã Œ—“¿“ ŒÃ:
INSERT INTO TMP_F_LOAN_PORTFOLIO  
SELECT  DISTINCT 
        CAST('L' AS CHAR(1))                               AS T_RAW_STATUS,
        C.DT                                               AS REPORT_DATE,
        NULL                                               AS ACCOUNT_ID,
        NULL                                               AS ACCOUNT_DETAIL_ID,
        NULL                                               AS ACCOUNT_TYPE_ID,
        CASE WHEN ISNULL(AGR_ASN.AGREEMENT_1_ID,0) = 0 
          THEN AGR.AGREEMENT_ID
          ELSE AGR_ASN.AGREEMENT_1_ID END                  AS AGREEMENT_ID,
        AGR.AGREEMENT_ID                                   AS LOAN_FCLY_ID, 
        NULL                                               AS LOAN_CLASSIFIER_ID,
        NULL                                               AS INTERNAL_ACCOUNT_ID,
        --AGR.CNTR_ENTITY_ID CUSTOMER_ID,
        0                                                  AS CUSTOMER_ID,
        0                                                  AS INTL_PTFLO_ID,
        NULL                                               AS CUS_PTFLO_ID,
        AGR.BRNCH_ENTITY_ID                                AS COR_RPT_STRC_ID,
        CASE WHEN ISNULL(DEP.BRNCH_ENTITY_ID,0) = 0 
          THEN AGR.BRNCH_ENTITY_ID
          ELSE DEP.BRNCH_ENTITY_ID END                     AS DOMC_CHNL_STRC_ID,
        NULL                                               AS INITIATOR_ID,
        0                                                  AS COUNTERPARTY_ID,
        NULL                                               AS IDSTY_CLS_ID,
        AGR.PRODUCT_ID,
        NULL                                               AS GEO_ID,
        NULL                                               AS FUND_SOURCE_ID,
        AGR.CURRENCY_ID                                    AS ISO_CRCY_ID, 
        CUR.CURRENCY_ID                                    AS REF_ISO_CRCY_ID,
        NULL                                               AS CUS_PTFLO_MGR_ID,
        NULL                                               AS INTL_PTFLO_MGR_ID, 
        NULL                                               AS SYNDICATE_ID, 
        NULL                                               AS SYNDICATE_ID2,
        AGR.VALUE_DT                                       AS APPEAR_DATE,
        NULL                                               AS CONTINUES_DATE,
        NULL                                               AS RENEWAL_DATE,
        CASE WHEN AGR.FACT_CLOSE_DT > '2050-01-01'
         THEN CAST('2050-01-01' AS DATE)
             WHEN AGR.FACT_CLOSE_DT < AP.FINAL_DATE
         THEN AP.FINAL_DATE
        ELSE AGR.FACT_CLOSE_DT END                         AS CLOSING_DATE,
        NULL                                               AS MATURITY_DATE,
        NULL                                               AS DEFAULT_DATE,
        NULL                                               AS DEFAULT_COUNT,
        0                                                  AS DEFAULT_VALUE,
        0                                                  AS DEFAULT_VALUE_REF,
        0                                                  AS [VALUE], 
        0                                                  AS VALUE_REF,
        NULL                                               AS QUALITY_CATEGORY,
        NULL                                               AS RESERVE_RATE,
        NULL                                               AS RESERVE_VALUE,
        0                                                  AS INTEREST_RATE,
        NULL                                               AS INTEREST_RATE_TYPE,
        NULL                                               AS BASIS_RATE,
        NULL                                               AS BASIS_RATE_MARGIN,
        NULL                                               AS MANAGEMENT_RATE,
        NULL                                               AS TRANSFERT_RATE,
        NULL                                               AS TOT_LOAN_VALUE,
        NULL                                               AS REF_TOT_LOAN_VALUE,
        NULL                                               AS MULT_CLTRL_IND,
        NULL                                               AS TOT_CLTRL_VALUE,
        NULL                                               AS TOT_CLTRL_PCT,
        NULL                                               AS SYND_SHARE_AMT,
        NULL                                               AS YND_SHARE_PCT,
        RATE.PRICE                                         AS CRCY_EXCH_RATE,
        NULL                                               AS FIRST_CLTRL_VALUE,
        NULL                                               AS SECOND_CLTRL_VALUE,
        NULL                                               AS TOT_CLTRL_FAIR_VALUE,
        NULL                                               AS REF_TOT_CLTRL_VALUE,
        NULL                                               AS TRANCHE_ISSUE_DATE,
        NULL                                               AS TRANCHE_MATURITY_DATE,
        NULL                                               AS TRANCHE_VALUE,
        NULL                                               AS TRANCHE_VALUE_REF,
        NULL                                               AS CHANGE_TIME,
        NULL                                               AS MICRO_TRANCHE_IND,
        AGR.ABS_ID                                         AS INSTRUMENT_ID_NK,
        NULL                                               AS ACCOUNT_ID_NK,
        NULL                                               AS ACCOUNT_DETAIL_ID_NK,
        AGR.PRDCT_KIND_CD                                  AS LOAN_TYPE,
        NOW()                                              AS T_DATETIME,
        NULL/*DFR.[NAME]*/                                 AS BASE_RATE,
        0                                                  AS MANAGEMENT_PORTFOLIO_FLAG,
        NULL                                               AS UCLOANRATE,

        CASE WHEN AGR.AGREEMENT_CLASS_NM LIKE '%›¡√%'
         THEN AGR.AGREEMENT_CLASS_NM
             WHEN AGR.PRDCT_KIND_CD =' –≈ƒ»“'
         THEN NULL
        ELSE AGR.AGREEMENT_CLASS_CD END                    AS LOAN_CLASS,
        NULL                                               AS OFFICER,
        NULL                                               AS HEAD_MATURITY_DATE,
        NULL                                               AS UNDERWRITER,
        NULL                                               AS OFFICERID,
        NULL                                               AS UNDERWRITERID,
        NULL                                               AS IDSTY_GRP_CSL_ID,
        0                                                  AS PERCENT_BALANCE,
        0                                                  AS INTEREST_ACCRUED,
        0                                                  AS INTEREST_PAID,
        0                                                  AS IINTEREST_ARREARS,
        0                                                  AS IRESERVE_BALANCE,
        0                                                  AS ILIMIT_BALANCE,
        0                                                  AS RESEVE_DEF_BALANCE,
        0                                                  AS RESEVE_INT_BALANCE,
        0                                                  AS RESEVE_DEF_INT_BALANCE,
        0                                                  AS RESERVE_LIM_BALANCE,
        0                                                  AS DEFAULT_PERCENT_BALANCE,
        0                                                  AS EFAULT_PERCENT_OUT_BALANCE,
        0                                                  AS LIMIT_BALANCE_REF,
        0                                                  AS SUBSIDY_RATE,
        NULL                                               AS DEFAULT_PERCENT_DATE,
        AGR.OWNER_SRS_CD                                   AS SRS_CD,
        AGR.T_DATETIME_STAGE                               AS T_DATETIME_STAGE,
        NULL                                               AS DEPARTMENT_OFFICER,
        NULL                                               AS DEPARTMENT_OFFICER_DATE,
        NULL                                               AS MSFO_LOAN_PERCENT,
        0                                                  AS MSFO_LOAN_RUR,
        NULL                                               AS MSFO_UNUSED_PERCENT,
        0                                                  AS MSFO_UNUSED_PERCENT_RUR, 
        0                                                  AS MSFO_PERCENT_RUR,
        0                                                  AS EXCEPTION_MICROTRANCHE_FLAG,--“≈’Õ»◊≈— Œ≈ œŒÀ≈
        NULL                                               AS CLIMRWADEALID,   
        NULL                                               AS CLIMRWAPORT,
        NULL                                               AS MAIN_AGMT_NUMBER,
        NULL                                               AS MAIN_OPEN_DT,
        NULL                                               AS MAIN_FACT_CLOSE_DT,
        NULL                                               AS MAIN_PLAN_CLOSE_DT,
        NULL AS C0017_VALUE,        
        NULL AS F_AGMT_LIM_AMT,
        NULL AS F_AGMT_CURRENCY,
        NULL AS F_AGMT_REST,
        NULL AS M_AGMT_LIM_AMT,
        NULL AS M_AGMT_CURRENCY,
        NULL AS BANK_PRINCIPAL,
        NULL AS BANK_PRINCIPAL_INN,
        NULL AS LIMIT_TYPE_NM,
        NULL AS AGENT_COMMISSION_RATE,
        NULL AS MSFO_LOAN_PERCENT_OVERDUE,
        NULL AS PORTFOLIO_LIAB_POS,
        NULL AS RESERVE_RATE_POT,
        NULL AS PODR_TYPE,
        NULL AS PODR_NAME,
        NULL AS PAYM_LAST_DT,
        NULL AS AMOUNT,
        NULL AS PRINC_PERIOD_TERM,
        NULL AS TRANCHE_MAX_TERM,
        NULL AS BANK_PRINCIPAL_ENTITY_ID,
        NULL AS C0016_VALUE,
        NULL AS C0016_BEGIN_DATE,
        NULL AS C0137_VALUE,
        NULL AS C0137_BEGIN_DATE,
        NULL AS CLS_MSP_BEGIN_DATE         
FROM CORE.D_AGREEMENT AGR 
JOIN (
		SELECT DISTINCT AR.AGREEMENT_ID,
			   A.CLOSE_DT AS FINAL_DATE
		FROM CORE.V_F_AGMT_REST AR
		JOIN CORE.V_D_ACCOUNT A ON AR.ACCOUNT_ID = A.ACCOUNT_ID
		JOIN CORE.V_D_AGREEMENT AGR ON AR.AGREEMENT_ID = AGR.AGREEMENT_ID
		 AND AR.FINAL_DATE > AGR.FACT_CLOSE_DT
		WHERE 1 = 1--AR.AGREEMENT_ID = 65457588
		 AND AR.ACCT_BAL_BASE_TYPE = 'LIABILITY'
		 AND AR.ACCT_BAL_BASE_CODE = 'PRNC_OFFB'
		 AND AR.BALANCE_OUT = 0
		 AND (
			   ( AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') 
				 AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ'
				) 
				OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  
				AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
			 )  
		 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) 
		 AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
	     AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
         ) AP ON AGR.AGREEMENT_ID = AP.AGREEMENT_ID AND AP.FINAL_DATE >= @PDATESTART
JOIN CORE.D_CALENDAR C ON AGR.OPEN_DT <=C.DT 
 AND (CASE WHEN AGR.FACT_CLOSE_DT < AP.FINAL_DATE 
       THEN AP.FINAL_DATE 
      ELSE AGR.FACT_CLOSE_DT END) >=C.DT
  AND C.DT <> '2050-01-01'     
JOIN CORE.D_CURRENCY AS CUR ON CUR.SHORT_NM = 'RUB' 
 AND CUR.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.F_CURRENCY_RATE AS RATE ON RATE.BASE_CRCY_ID = AGR.CURRENCY_ID 
 AND RATE.RATE_DT = C.DT 
 AND RATE.QUOTE_CRCY_NUM_CD IN ('643','810')
 AND RATE.T_RAW_STATUS NOT IN ('X','W','D')
LEFT  JOIN (
            SELECT ENTITY_ID AS BRNCH_ENTITY_ID,0 AS DEPT_ENTITY_ID
            FROM CORE.V_D_BRANCH
            UNION
            SELECT BRNCH_ENTITY_ID,ENTITY_ID AS DEPT_ENTITY_ID
            FROM CORE.V_D_DEPT
            WHERE BRNCH_ENTITY_ID IS NOT NULL
           ) DEP ON AGR.DEPT_ENTITY_ID = (CASE WHEN DEP.DEPT_ENTITY_ID  = 0 THEN DEP.BRNCH_ENTITY_ID ELSE DEP.DEPT_ENTITY_ID END)
LEFT JOIN CORE.F_AGMT_ASN AGR_ASN ON AGR.AGREEMENT_ID = AGR_ASN.AGREEMENT_2_ID 
 AND AGR_ASN.AGMT_1_ROLE_CD = 'MAIN_INSTRUMENT' 
 AND AGR_ASN.AGMT_2_ROLE_CD  = 'TRANCHE_INSTRUMENT'
 AND AGR_ASN.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.V_F_AGMT_RATE_PERIOD ARP ON AGR.AGREEMENT_ID = ARP.AGREEMENT_ID 
 AND C.DT>= ARP.BEGIN_DATE 
 AND C.DT <= ARP.END_DATE 
 AND ARP.FLOAT_RATE_ID <> 0 
 AND ARP.RATE_TYPE_KIND_CD = '%% œŒ Œ—Õ. —◊≈“”' 
 AND ARP.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.V_D_FLOAT_RATE DFR ON ARP.FLOAT_RATE_ID = DFR.FLOAT_RATE_ID 
 AND DFR.T_RAW_STATUS  NOT IN ('X','W','D') 
WHERE AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND C.DT >= @PDATESTART 
 AND C.DT <= @PDATEEND  
 AND ( 
      (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
       OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
      ) 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) --ƒŒ¡¿¬À≈ÕŒ »— Àﬁ◊≈Õ»≈ œŒ —¿ƒ Œ
 AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
 --AND AGR.AGREEMENT_ID = 187017800
 AND NOT EXISTS (SELECT 1 
                 FROM TMP_F_LOAN_PORTFOLIO T 
                 WHERE T.LOAN_FCLY_ID = AGR.AGREEMENT_ID
                  AND T.REPORT_DATE = C.DT)
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'           
 AND AGR.PRDCT_SUBTYPE_CD <> 'DSL_LIM_DEBT'      
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT TMP_F_LOAN_PORTFOLIO (MICRO_TRANCHE)',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
--Ã» –Œ“–¿Õÿ»:
INSERT INTO TMP_F_LOAN_PORTFOLIO 
SELECT  DISTINCT 
        CAST('L' AS CHAR(1))                               AS T_RAW_STATUS,
        C.DT                                               AS REPORT_DATE,
        NULL                                               AS ACCOUNT_ID,
        NULL                                               AS ACCOUNT_DETAIL_ID,
        NULL                                               AS ACCOUNT_TYPE_ID,
        CASE WHEN ISNULL(AGR_ASN.AGREEMENT_1_ID,0) = 0 
          THEN AGR.AGREEMENT_ID
          ELSE AGR_ASN.AGREEMENT_1_ID END                  AS AGREEMENT_ID,
        AGR.AGREEMENT_ID                                   AS LOAN_FCLY_ID, 
        NULL                                               AS LOAN_CLASSIFIER_ID,
        NULL                                               AS INTERNAL_ACCOUNT_ID,
        0                                                  AS CUSTOMER_ID,
        0                                                  AS INTL_PTFLO_ID,
        NULL                                               AS CUS_PTFLO_ID,
        AGR.BRNCH_ENTITY_ID                                AS COR_RPT_STRC_ID,
        CASE WHEN ISNULL(DEP.BRNCH_ENTITY_ID,0) = 0 
          THEN AGR.BRNCH_ENTITY_ID
          ELSE DEP.BRNCH_ENTITY_ID END                     AS DOMC_CHNL_STRC_ID,
        NULL                                               AS INITIATOR_ID,
        0                                                  AS COUNTERPARTY_ID,
        NULL                                               AS IDSTY_CLS_ID,
        AGR.PRODUCT_ID,
        NULL                                               AS GEO_ID,
        NULL                                               AS FUND_SOURCE_ID,
        AGR.CURRENCY_ID                                    AS ISO_CRCY_ID, 
        CUR.CURRENCY_ID                                    AS REF_ISO_CRCY_ID,
        NULL                                               AS CUS_PTFLO_MGR_ID,
        NULL                                               AS INTL_PTFLO_MGR_ID, 
        NULL                                               AS SYNDICATE_ID, 
        NULL                                               AS SYNDICATE_ID2,
        AGR.VALUE_DT                                       AS APPEAR_DATE,
        NULL                                               AS CONTINUES_DATE,
        NULL                                               AS RENEWAL_DATE,
        CASE WHEN AGR.FACT_CLOSE_DT > '2050-01-01'
         THEN CAST('2050-01-01' AS DATE)
             WHEN AGR.FACT_CLOSE_DT < AP.PAYMENT_DT
         THEN AP.PAYMENT_DT
        ELSE AGR.FACT_CLOSE_DT END                         AS CLOSING_DATE,
        NULL                                               AS MATURITY_DATE,
        NULL                                               AS DEFAULT_DATE,
        NULL                                               AS DEFAULT_COUNT,
        0                                                  AS DEFAULT_VALUE,
        0                                                  AS DEFAULT_VALUE_REF,
        0                                                  AS [VALUE], 
        0                                                  AS VALUE_REF,
        NULL                                               AS QUALITY_CATEGORY,
        NULL                                               AS RESERVE_RATE,
        NULL                                               AS RESERVE_VALUE,
        0                                                  AS INTEREST_RATE,
        NULL                                               AS INTEREST_RATE_TYPE,
        NULL                                               AS BASIS_RATE,
        NULL                                               AS BASIS_RATE_MARGIN,
        NULL                                               AS MANAGEMENT_RATE,
        NULL                                               AS TRANSFERT_RATE,
        NULL                                               AS TOT_LOAN_VALUE,
        NULL                                               AS REF_TOT_LOAN_VALUE,
        NULL                                               AS MULT_CLTRL_IND,
        NULL                                               AS TOT_CLTRL_VALUE,
        NULL                                               AS TOT_CLTRL_PCT,
        NULL                                               AS SYND_SHARE_AMT,
        NULL                                               AS YND_SHARE_PCT,
        RATE.PRICE                                         AS CRCY_EXCH_RATE,
        NULL                                               AS FIRST_CLTRL_VALUE,
        NULL                                               AS SECOND_CLTRL_VALUE,
        NULL                                               AS TOT_CLTRL_FAIR_VALUE,
        NULL                                               AS REF_TOT_CLTRL_VALUE,
        MTI.TERMS                                          AS TRANCHE_ISSUE_DATE,
        MTI.TERMF                                          AS TRANCHE_MATURITY_DATE,
        MTI.TRANCHE                                        AS TRANCHE_VALUE,
        MTI.TRANCHE*RATE.PRICE                             AS TRANCHE_VALUE_REF,
        NULL                                               AS CHANGE_TIME,
        1                                                  AS MICRO_TRANCHE_IND,
        AGR.ABS_ID                                         AS INSTRUMENT_ID_NK,
        NULL                                               AS ACCOUNT_ID_NK,
        NULL                                               AS ACCOUNT_DETAIL_ID_NK,
        AGR.PRDCT_KIND_CD                                  AS LOAN_TYPE,
        NOW()                                              AS T_DATETIME,
        NULL                                               AS BASE_RATE,
        0                                                  AS MANAGEMENT_PORTFOLIO_FLAG,
        NULL                                               AS UCLOANRATE,
        CASE WHEN AGR.AGREEMENT_CLASS_NM LIKE '%›¡√%'
         THEN AGR.AGREEMENT_CLASS_NM
             WHEN AGR.PRDCT_KIND_CD =' –≈ƒ»“'
         THEN NULL
        ELSE AGR.AGREEMENT_CLASS_CD END                    AS LOAN_CLASS,
        NULL                                               AS OFFICER,
        NULL                                               AS HEAD_MATURITY_DATE,
        NULL                                               AS UNDERWRITER,
        NULL                                               AS OFFICERID,
        NULL                                               AS UNDERWRITERID,
        NULL                                               AS IDSTY_GRP_CSL_ID,
        0                                                  AS PERCENT_BALANCE,
        0                                                  AS INTEREST_ACCRUED,
        0                                                  AS INTEREST_PAID,
        0                                                  AS IINTEREST_ARREARS,
        0                                                  AS IRESERVE_BALANCE,
        0                                                  AS ILIMIT_BALANCE,
        0                                                  AS RESEVE_DEF_BALANCE,
        0                                                  AS RESEVE_INT_BALANCE,
        0                                                  AS RESEVE_DEF_INT_BALANCE,
        0                                                  AS RESERVE_LIM_BALANCE,
        0                                                  AS DEFAULT_PERCENT_BALANCE,
        0                                                  AS EFAULT_PERCENT_OUT_BALANCE,
        0                                                  AS LIMIT_BALANCE_REF,
        0                                                  AS SUBSIDY_RATE,
        NULL                                               AS DEFAULT_PERCENT_DATE,
        AGR.OWNER_SRS_CD                                   AS SRS_CD,
        AGR.T_DATETIME_STAGE                               AS T_DATETIME_STAGE,
        NULL                                               AS DEPARTMENT_OFFICER,
        NULL                                               AS DEPARTMENT_OFFICER_DATE,
        NULL                                               AS MSFO_LOAN_PERCENT,
        0                                                  AS MSFO_LOAN_RUR,
        NULL                                               AS MSFO_UNUSED_PERCENT,
        0                                                  AS MSFO_UNUSED_PERCENT_RUR,
        0                                                  AS MSFO_PERCENT_RUR,
        0                                                  AS EXCEPTION_MICROTRANCHE_FLAG,--“≈’Õ»◊≈— Œ≈ œŒÀ≈
        NULL                                               AS CLIMRWADEALID,   
        NULL                                               AS CLIMRWAPORT,
        NULL                                               AS MAIN_AGMT_NUMBER,
        NULL                                               AS MAIN_OPEN_DT,
        NULL                                               AS MAIN_FACT_CLOSE_DT,
        NULL                                               AS MAIN_PLAN_CLOSE_DT,
        NULL AS C0017_VALUE,
        NULL AS F_AGMT_LIM_AMT,
        NULL AS F_AGMT_CURRENCY,
        NULL AS F_AGMT_REST,
        NULL AS M_AGMT_LIM_AMT,
        NULL AS M_AGMT_CURRENCY,
        NULL AS BANK_PRINCIPAL,
        NULL AS BANK_PRINCIPAL_INN,
        NULL AS LIMIT_TYPE_NM,
        NULL AS AGENT_COMMISSION_RATE,
        NULL AS MSFO_LOAN_PERCENT_OVERDUE,
        NULL AS PORTFOLIO_LIAB_POS,
        NULL AS RESERVE_RATE_POT,
        NULL AS PODR_TYPE,
        NULL AS PODR_NAME,
        NULL AS PAYM_LAST_DT,
        NULL AS AMOUNT,
        NULL AS PRINC_PERIOD_TERM,
        NULL AS TRANCHE_MAX_TERM,
        NULL AS BANK_PRINCIPAL_ENTITY_ID,
        NULL AS C0016_VALUE,
        NULL AS C0016_BEGIN_DATE,
        NULL AS C0137_VALUE,
        NULL AS C0137_BEGIN_DATE,
        NULL AS CLS_MSP_BEGIN_DATE
FROM  DM_CB.MICRO_TRANCHE_HISTORY MTI 
JOIN CORE.D_AGREEMENT AGR ON AGR.AGREEMENT_ID = MTI.AGREEMENT_ID 
JOIN CORE.D_CALENDAR C ON AGR.OPEN_DT <=C.DT 
 AND AGR.FACT_CLOSE_DT>=C.DT
 AND C.DT <> '2050-01-01'
JOIN CORE.D_CURRENCY AS CUR ON CUR.SHORT_NM = 'RUB' 
 AND CUR.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.F_CURRENCY_RATE AS RATE ON RATE.BASE_CRCY_ID = AGR.CURRENCY_ID 
 AND RATE.RATE_DT = C.DT 
 AND RATE.QUOTE_CRCY_NUM_CD IN ('643','810')
 AND RATE.T_RAW_STATUS NOT IN ('X','W','D')
LEFT  JOIN (
            SELECT ENTITY_ID AS BRNCH_ENTITY_ID,0 AS DEPT_ENTITY_ID
            FROM CORE.V_D_BRANCH
            UNION
            SELECT BRNCH_ENTITY_ID,ENTITY_ID AS DEPT_ENTITY_ID
            FROM CORE.V_D_DEPT
            WHERE BRNCH_ENTITY_ID IS NOT NULL
           ) DEP ON AGR.DEPT_ENTITY_ID = (CASE WHEN DEP.DEPT_ENTITY_ID  = 0 THEN DEP.BRNCH_ENTITY_ID ELSE DEP.DEPT_ENTITY_ID END)
LEFT JOIN CORE.F_AGMT_ASN AGR_ASN ON AGR.AGREEMENT_ID = AGR_ASN.AGREEMENT_2_ID 
 AND AGR_ASN.AGMT_1_ROLE_CD = 'MAIN_INSTRUMENT' 
 AND AGR_ASN.AGMT_2_ROLE_CD  = 'TRANCHE_INSTRUMENT'
 AND AGR_ASN.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.V_F_AGMT_RATE_PERIOD ARP ON AGR.AGREEMENT_ID = ARP.AGREEMENT_ID 
 AND C.DT>= ARP.BEGIN_DATE 
 AND C.DT <= ARP.END_DATE 
 AND ARP.FLOAT_RATE_ID <> 0 
 AND ARP.RATE_TYPE_KIND_CD = '%% œŒ Œ—Õ. —◊≈“”' 
 AND ARP.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.V_D_FLOAT_RATE DFR ON ARP.FLOAT_RATE_ID = DFR.FLOAT_RATE_ID 
 AND DFR.T_RAW_STATUS  NOT IN ('X','W','D') 
LEFT JOIN (
           SELECT AGR.AGREEMENT_ID,MAX(AP.PAYMENT_DT) PAYMENT_DT 
           FROM CORE.V_D_AGREEMENT AGR
           JOIN CORE.V_F_AGMT_PAYMENTS AP ON AGR.AGREEMENT_ID = AP.AGREEMENT_ID
           JOIN CORE.V_D_ACCOUNT A ON AP.ACCOUNT_ID  = A.ACCOUNT_ID
            AND A.ACCOUNT_NBR LIKE '706%'
           WHERE 1 = 1
           AND AP.PAYMENT_DT > AGR.FACT_CLOSE_DT
            AND (
                  (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') 
                    AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
                OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  
               AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
                 )  
            AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) 
            AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
            AND AP.PAYMENT_DT >= @PDATESTART
            AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
           GROUP BY AGR.AGREEMENT_ID 
         ) AP ON AGR.AGREEMENT_ID = AP.AGREEMENT_ID
WHERE AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND ( 
      (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
       OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
      ) 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) 
 AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
 AND MTI.ACTUAL_DATE = C.DT 
 AND MTI.TERMF > MTI.ACTUAL_DATE 
 AND MTI.TERMS <= MTI.ACTUAL_DATE
 AND C.DT >= @PDATESTART 
 AND C.DT <= @PDATEEND  
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
 AND AGR.PRDCT_SUBTYPE_CD <> 'DSL_LIM_DEBT'
 ;          
         
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT TMP_F_LOAN_PORTFOLIO (EXCEPTION_MICROTRANCHE)',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

INSERT INTO TMP_F_LOAN_PORTFOLIO
      (REPORT_DATE, ACCOUNT_ID, ACCOUNT_DETAIL_ID, ACCOUNT_TYPE_ID, AGREEMENT_ID, LOAN_FCLY_ID, LOAN_CLASSIFIER_ID, INTERNAL_ACCOUNT_ID, CUSTOMER_ID, INTL_PTFLO_ID, CUS_PTFLO_ID, COR_RPT_STRC_ID, DOMC_CHNL_STRC_ID, INITIATOR_ID, COUNTERPARTY_ID, IDSTY_CLS_ID, PRODUCT_ID, GEO_ID, FUND_SOURCE_ID, ISO_CRCY_ID, REF_ISO_CRCY_ID, CUS_PTFLO_MGR_ID, INTL_PTFLO_MGR_ID, SYNDICATE_ID, SYNDICATE_ID2, APPEAR_DATE, CONTINUES_DATE, RENEWAL_DATE, CLOSING_DATE, MATURITY_DATE, HEAD_MATURITY_DATE, DEFAULT_DATE, DEFAULT_COUNT, DEFAULT_VALUE, DEFAULT_VALUE_REF, VALUE, VALUE_REF, QUALITY_CATEGORY, RESERVE_RATE, RESERVE_VALUE, INTEREST_RATE, INTEREST_RATE_TYPE, BASIS_RATE, BASIS_RATE_MARGIN, MANAGEMENT_RATE, TRANSFERT_RATE, TOT_LOAN_VALUE, REF_TOT_LOAN_VALUE, MULT_CLTRL_IND, TOT_CLTRL_VALUE, TOT_CLTRL_PCT, SYND_SHARE_AMT, SYND_SHARE_PCT, CRCY_EXCH_RATE, FIRST_CLTRL_VALUE, SECOND_CLTRL_VALUE, TOT_CLTRL_FAIR_VALUE, REF_TOT_CLTRL_VALUE, TRANCHE_ISSUE_DATE, TRANCHE_MATURITY_DATE, TRANCHE_VALUE, TRANCHE_VALUE_REF, CHANGE_TIME, MICRO_TRANCHE_IND, INSTRUMENT_ID_NK, LOAN_TYPE, MANAGEMENT_PORTFOLIO_FLAG, UCLOANRATE, LOAN_CLASS, OFFICER, OFFICERID, UNDERWRITER, UNDERWRITERID, SUBSIDY_RATE, DEFAULT_PERCENT_DATE,EXCEPTION_MICROTRANCHE_FLAG,T_DATETIME_STAGE,T_RAW_STATUS,CLIMRWADEALID,CLIMRWAPORT, MAIN_AGMT_NUMBER, MAIN_OPEN_DT, MAIN_FACT_CLOSE_DT, MAIN_PLAN_CLOSE_DT, C0017_VALUE,F_AGMT_LIM_AMT,F_AGMT_CURRENCY,F_AGMT_REST,M_AGMT_LIM_AMT,M_AGMT_CURRENCY,BANK_PRINCIPAL,BANK_PRINCIPAL_INN,LIMIT_TYPE_NM,AGENT_COMMISSION_RATE,MSFO_LOAN_PERCENT_OVERDUE,PORTFOLIO_LIAB_POS,RESERVE_RATE_POT,PODR_TYPE,PODR_NAME,PAYM_LAST_DT,AMOUNT,PRINC_PERIOD_TERM,TRANCHE_MAX_TERM,BANK_PRINCIPAL_ENTITY_ID,C0016_VALUE,C0016_BEGIN_DATE,C0137_VALUE,C0137_BEGIN_DATE,CLS_MSP_BEGIN_DATE)
SELECT  PC.REPORT_DATE, 
        ACCOUNT_ID, 
        ACCOUNT_DETAIL_ID, 
        -1 AS ACCOUNT_TYPE_ID, 
        AGREEMENT_ID, 
        PC.LOAN_FCLY_ID, 
        LOAN_CLASSIFIER_ID, 
        NULL, 
        CUSTOMER_ID, 
        INTL_PTFLO_ID, 
        CUS_PTFLO_ID, 
        COR_RPT_STRC_ID, 
        DOMC_CHNL_STRC_ID, 
        INITIATOR_ID, 
        COUNTERPARTY_ID, 
        IDSTY_CLS_ID, 
        PRODUCT_ID, 
        GEO_ID, 
        FUND_SOURCE_ID, 
        ISO_CRCY_ID, 
        REF_ISO_CRCY_ID, 
        CUS_PTFLO_MGR_ID, 
        INTL_PTFLO_MGR_ID, 
        SYNDICATE_ID, 
        SYNDICATE_ID2, 
        APPEAR_DATE, 
        CONTINUES_DATE, 
        RENEWAL_DATE, 
        CLOSING_DATE, 
        MATURITY_DATE, 
        HEAD_MATURITY_DATE, 
        DEFAULT_DATE, 
        DEFAULT_COUNT, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        QUALITY_CATEGORY, 
        RESERVE_RATE, 
        RESERVE_VALUE, 
        INTEREST_RATE, 
        INTEREST_RATE_TYPE, 
        BASIS_RATE, 
        BASIS_RATE_MARGIN, 
        MANAGEMENT_RATE, 
        TRANSFERT_RATE, 
        TOT_LOAN_VALUE, 
        REF_TOT_LOAN_VALUE, 
        MULT_CLTRL_IND, 
        TOT_CLTRL_VALUE, 
        TOT_CLTRL_PCT, 
        SYND_SHARE_AMT, 
        SYND_SHARE_PCT, 
        CRCY_EXCH_RATE, 
        FIRST_CLTRL_VALUE, 
        SECOND_CLTRL_VALUE, 
        TOT_CLTRL_FAIR_VALUE, 
        REF_TOT_CLTRL_VALUE, 
        LF.ISSUE_DATE AS TRANCHE_ISSUE_DATE, 
        MATURITY_DATE AS TRANCHE_MATURITY_DATE, 
        ISNULL(DEFAULT_VALUE,0) + ISNULL(VALUE,0), 
        ISNULL(DEFAULT_VALUE_REF,0) + ISNULL(VALUE_REF,0), 
        CHANGE_TIME, 
        1 AS MICRO_TRANCHE_IND, 
        INSTRUMENT_ID_NK, 
        LOAN_TYPE, 
        ISNULL(MANAGEMENT_PORTFOLIO_FLAG,0), 
        UCLOANRATE, 
        LOAN_CLASS, 
        OFFICER, 
        OFFICERID, 
        UNDERWRITER, 
        UNDERWRITERID, 
        SUBSIDY_RATE, 
        DEFAULT_PERCENT_DATE,
        1 AS EXCEPTION_MICROTRANCHE_FLAG,
        PC.T_DATETIME_STAGE,
        T_RAW_STATUS,
        NULL AS CLIMRWADEALID,  
        NULL AS CLIMRWAPORT,
        NULL AS MAIN_AGMT_NUMBER,
        NULL AS MAIN_OPEN_DT,
        NULL AS MAIN_FACT_CLOSE_DT,
        NULL AS MAIN_PLAN_CLOSE_DT,
        NULL AS C0017_VALUE,
        NULL AS F_AGMT_LIM_AMT,
        NULL AS F_AGMT_CURRENCY,
        NULL AS F_AGMT_REST,
        NULL AS M_AGMT_LIM_AMT,
        NULL AS M_AGMT_CURRENCY,
        NULL AS BANK_PRINCIPAL,
        NULL AS BANK_PRINCIPAL_INN,
        NULL AS LIMIT_TYPE_NM,
        NULL AS AGENT_COMMISSION_RATE,
        NULL AS MSFO_LOAN_PERCENT_OVERDUE,
        NULL AS PORTFOLIO_LIAB_POS,
        NULL AS RESERVE_RATE_POT,
        NULL AS PODR_TYPE,
        NULL AS PODR_NAME,
        NULL AS PAYM_LAST_DT,
        NULL AS AMOUNT,
        NULL AS PRINC_PERIOD_TERM,
        NULL AS TRANCHE_MAX_TERM,
        NULL AS BANK_PRINCIPAL_ENTITY_ID,
        NULL AS C0016_VALUE,
        NULL AS C0016_BEGIN_DATE,
        NULL AS C0137_VALUE,
        NULL AS C0137_BEGIN_DATE,
        NULL AS CLS_MSP_BEGIN_DATE
FROM TMP_F_LOAN_PORTFOLIO PC
LEFT JOIN ( SELECT DISTINCT LOAN_FCLY_ID, REPORT_DATE 
            FROM TMP_F_LOAN_PORTFOLIO 
            WHERE MICRO_TRANCHE_IND = 1
          ) PM ON PM.LOAN_FCLY_ID = PC.LOAN_FCLY_ID AND PC.REPORT_DATE = PM.REPORT_DATE
LEFT JOIN DM_CREDPRFL.V_LOAN_FACILITY LF ON LF.LOAN_FCLY_ID = PC.LOAN_FCLY_ID
WHERE PC.MICRO_TRANCHE_IND IS NULL
AND PM.LOAN_FCLY_ID IS NULL
AND PC.REPORT_DATE >= @PDATESTART
;       
           
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT;
              
              
INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'DELETE NOT TRANSACTION GPS_PERFORMANCE_FZ44: ',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;              

DELETE FROM TMP_F_LOAN_PORTFOLIO TMP                                  
WHERE TMP.LOAN_TYPE  = '√¿–¿Õ“»ﬂ'                                   
AND  LOAN_FCLY_ID NOT IN  ( SELECT DISTINCT AGR.AGREEMENT_ID 
                            FROM CORE.V_D_AGREEMENT AGR           
                            JOIN CORE.V_F_AGMT_REST AR ON AGR.AGREEMENT_ID = AR.AGREEMENT_ID
                            WHERE AGR.PRDCT_KIND_CD  = '√¿–¿Õ“»ﬂ'
                            AND AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') 
                            AND AGR.AGREEMENT_CLASS_NM <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
                           )
;
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT;




SET @CNT1 = (SELECT COUNT(*) FROM DAK.TMP_PORTFOLIO_CLS_MD5);
SET @CNT2 = (SELECT COUNT(*) FROM DAK.TMP_PORTFOLIO_CLS);


IF (@CNT1 > 0 OR @CNT2 > 0  ) THEN



 BEGIN 
 
 INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
 SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE LOAN_CLASSIFIER_ID,INTL_PTFLO_ID',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
 ;
 COMMIT
 ;
    UPDATE  TMP_F_LOAN_PORTFOLIO
    SET P.LOAN_CLASSIFIER_ID = CLS.LOAN_CLASSIFIER_ID
    FROM 
        TMP_F_LOAN_PORTFOLIO P
        JOIN STAGE.INSTRUMENT I ON ( I.INSTRUMENT_CORE_ID = P.LOAN_FCLY_ID )
        JOIN DAK.TMP_PORTFOLIO_CLS_MD5 CLS ON ( CLS.INSTRUMENT_ID = I.INSTRUMENT_ID AND P.REPORT_DATE >= CLS.START_DATE AND P.REPORT_DATE <= CLS.END_DATE AND CLS.LOAN_CLASSIFIER_ID IS NOT NULL AND ISNULL(P.LOAN_CLASSIFIER_ID,0) <> ISNULL(CLS.LOAN_CLASSIFIER_ID,0))
        WHERE I.SOURCE_SYSTEM_ID = 201
        AND P.REPORT_DATE >= @PDATESTART;
    COMMIT;   
    
    UPDATE  TMP_F_LOAN_PORTFOLIO
    SET P.LOAN_CLASSIFIER_ID = CLS.LOAN_CLASSIFIER_ID
    FROM 
        TMP_F_LOAN_PORTFOLIO P
        JOIN STAGE.INSTRUMENT I ON ( I.INSTRUMENT_CORE_ID = P.LOAN_FCLY_ID )
        JOIN DAK.TMP_PORTFOLIO_CLS_MD5 CLS ON ( CLS.INSTRUMENT_ID = I.INSTRUMENT_ID AND P.REPORT_DATE >= CLS.START_DATE AND P.REPORT_DATE <= CLS.END_DATE AND CLS.LOAN_CLASSIFIER_ID IS NOT NULL AND ISNULL(P.LOAN_CLASSIFIER_ID,0) <> ISNULL(CLS.LOAN_CLASSIFIER_ID,0))
    WHERE I.SOURCE_SYSTEM_ID = 9 
     AND  ISNULL(P.LOAN_CLASSIFIER_ID,0) = 0
     AND P.REPORT_DATE >= @PDATESTART
     ;
    COMMIT;   
    
    UPDATE  TMP_F_LOAN_PORTFOLIO P
    SET P.INTL_PTFLO_ID = DP.PORTFOLIO_ID
    FROM TMP_F_LOAN_PORTFOLIO P
    JOIN CORE.V_D_AGREEMENT AGR ON P.LOAN_FCLY_ID = AGR.AGREEMENT_ID
    JOIN STAGE.INSTRUMENT I ON ( I.INSTRUMENT_CORE_ID = AGR.AGREEMENT_ID ) 
     AND I.CHANGED < 3 
     AND I.SOURCE_SYSTEM_ID IN (9,201)
     AND I.SOURCE_SYSTEM_ID = (CASE WHEN AGR.OWNER_SRS_CD = 'RKOF1' THEN 201 WHEN AGR.OWNER_SRS_CD = 'CUSTODY' THEN 9 ELSE NULL END)
    JOIN DAK.TMP_PORTFOLIO_CLS CLS ON ( CLS.INSTRUMENT_ID = I.INSTRUMENT_ID AND P.REPORT_DATE >= CLS.START_DATE AND P.REPORT_DATE <= CLS.END_DATE )
    JOIN IWS.D_PORTFOLIO DP ON ( DP.PORTFOLIO_NAME = CLS.PORTFOLIONAME AND DP.PORTFOLIO_TYPE = '' )
    WHERE  1= 1
     AND ISNULL(P.INTL_PTFLO_ID, 0) <> ISNULL(DP.PORTFOLIO_ID, 0)
     AND P.REPORT_DATE >= @PDATESTART
    ;
    
--»— Àﬁ◊≈Õ»≈: ≈—À» —ƒ≈À ¿ Ã»√–»–Œ¬¿À¿ ¬ – Œ-‘1 » ¬ ¬»“–»Õ≈  À¿——»‘» ¿“Œ–Œ¬ ≈≈ Õ≈“, “Œ “»œ œŒ–“‘≈Àﬂ ¬—≈ –¿¬ÕŒ œ–Œ—“¿¬Àﬂ“‹ ≈—À» —ƒ≈À ¿ –¿Õ≈≈ ¡€À¿ ¬ CUSTODY.     
    UPDATE  TMP_F_LOAN_PORTFOLIO P
    SET P.INTL_PTFLO_ID = DP.PORTFOLIO_ID
    FROM TMP_F_LOAN_PORTFOLIO P
    JOIN CORE.V_D_AGREEMENT AGR ON P.LOAN_FCLY_ID = AGR.AGREEMENT_ID
    JOIN STAGE.INSTRUMENT I ON ( I.INSTRUMENT_CORE_ID = AGR.AGREEMENT_ID ) 
     AND I.CHANGED < 3 
     AND I.SOURCE_SYSTEM_ID =9
     AND AGR.OWNER_SRS_CD = 'RKOF1'
    JOIN DAK.TMP_PORTFOLIO_CLS CLS ON ( CLS.INSTRUMENT_ID = I.INSTRUMENT_ID AND P.REPORT_DATE >= CLS.START_DATE AND P.REPORT_DATE <= CLS.END_DATE )
    JOIN IWS.D_PORTFOLIO DP ON ( DP.PORTFOLIO_NAME = CLS.PORTFOLIONAME AND DP.PORTFOLIO_TYPE = '' )
    WHERE  1= 1
     AND ISNULL(P.INTL_PTFLO_ID, 0) = 0
     AND ISNULL(DP.PORTFOLIO_ID, 0) <> 0
     AND P.REPORT_DATE >= @PDATESTART  
    ;
    COMMIT
    ;   
       
    --¬Õ≈—»—“ —ƒ≈À » 
    UPDATE TMP_F_LOAN_PORTFOLIO LP
    SET LP.INTL_PTFLO_ID = PD.PORTFOLIO_ID
    FROM
    (
        SELECT AGR.AGREEMENT_ID AS LOAN_FCLY_ID,
        CASE WHEN D.SHORT_NAME LIKE '%ƒ    %'    THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%ƒ ¡Œ›%'    THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%ƒ  %'      THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%ƒ ¡Œ›%'    THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%ƒ—¡%'      THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%”‘%'       THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%ƒƒŒ“‘%'    THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%ƒƒŒ»“‘%'   THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%ƒ¿»” œ  %' THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%ƒÃ—¡%'     THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%ƒƒŒ»“‘%'   THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
             WHEN D.SHORT_NAME LIKE '%ƒ—Ã‘%'     THEN '—»Õƒ» ¿÷»» » —“–. ‘»Õ.'
             WHEN D.SHORT_NAME LIKE '%ƒŒ—‘»œ%'   THEN 'ƒŒ—»‘»œ'
             WHEN D.SHORT_NAME LIKE '%ƒœ—‘%'     THEN '»Õ¬≈—“»÷»ŒÕÕ€…'
             WHEN D.SHORT_NAME LIKE '%LUXEMBOURG%'     THEN NULL
             WHEN D.SHORT_NAME LIKE '%SWITZERLAND%'    THEN NULL
             ELSE ' –≈ƒ»“Õ€… ¡ÀŒ ' END AS PORTFOLIONAME 
    
        FROM CORE.V_D_AGREEMENT AGR
        JOIN CORE.V_D_DEPT D ON AGR.DEPT_ENTITY_ID = D.ENTITY_ID
        WHERE AGR.OWNER_SRS_CD  = '—¿ƒ Œ' 
        AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'
    ) TMP
    JOIN DM_CREDPRFL.V_PORTFOLIO_DAKO PD ON (PD.PORTFOLIO_NAME = TMP.PORTFOLIONAME )
    WHERE LP.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
      AND ISNULL(LP.INTL_PTFLO_ID,0) <> ISNULL(PD.PORTFOLIO_ID, 0)
      AND LP.REPORT_DATE >= @PDATESTART
    ;
      
    COMMIT
    ;     
    --»— Àﬁ◊≈Õ»ﬂ (œ–≈ƒ—“¿¬»“≈À‹—“¬¿ œŒ ¿ Õ≈“ ¬ CORE, Õ≈ «¿¡€“‹ «¿√–”«»“‹!!!)   
    SELECT AGR.AGREEMENT_ID INTO #TMP_NOT_DEPT FROM CORE.V_D_AGREEMENT AGR
    JOIN STAGE.INSTRUMENT I ON AGR.AGREEMENT_ID = I.INSTRUMENT_CORE_ID
     AND I.SOURCE_SYSTEM_ID = 300
    JOIN STAGE.INSTRUMENT_CONTRACTOR IC ON  I.INSTRUMENT_ID = IC.INSTRUMENT_ID
     AND IC.CONTRACTOR_ID IN (42384950,42384956)
     AND IC.CHANGED < 3
    ;
    COMMIT
    ;    
     
    UPDATE TMP_F_LOAN_PORTFOLIO LP
    SET LP.INTL_PTFLO_ID = 0
    WHERE LP.LOAN_FCLY_ID IN (SELECT AGREEMENT_ID FROM #TMP_NOT_DEPT)
     AND LP.REPORT_DATE >= @PDATESTART
    ;
    UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
    SET END_DATETIME = NOW()
    WHERE RUN_ID = V_LOG_ID
    AND END_DATETIME IS NULL
     ;
    COMMIT
    ;  
 END
 ;
ENDIF
;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE MATURITY_DATE,HEAD_MATURITY_DATE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
--Œ¡ÕŒ¬Àﬂ≈Ã “≈  Œ“Œ–€≈ œŒœ¿À» ¬ Œ“◊≈“Õ”ﬁ ƒ¿“”
 SELECT AGR.AGREEMENT_ID,
        AGMT_RN.RENEWAL_DT AS  BEGIN_DATE,
        --ISNULL(LEAD(AGMT_RN.RENEWAL_DT) OVER (PARTITION BY AGR.AGREEMENT_ID ORDER BY AGMT_RN.RENEWAL_DT)-1,AGMT_RN.RENEWAL_FINAL_DT)AS END_DATE,
            COALESCE(LEAD (AGMT_RN.RENEWAL_DT,1,'2050-01-01') OVER(PARTITION BY AGMT_RN.AGREEMENT_1_ID ORDER BY AGMT_RN.RENEWAL_DT) - 1, AGMT_RN.RENEWAL_FINAL_DT) AS END_DATE,
        AGMT_RN.RENEWAL_FINAL_DT AS PLAN_CLOSE_DT
INTO #TMP_MATURITY_DATE
FROM CORE.D_AGREEMENT AGR   
 JOIN CORE.F_AGMT_RENEWAL AGMT_RN ON AGMT_RN.AGREEMENT_1_ID = AGR.AGREEMENT_ID 
 AND AGMT_RN.T_RAW_STATUS NOT IN ('X','W','D')  
WHERE  ( 
       (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
       OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
       ) 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) 
 AND AGR.T_RAW_STATUS NOT IN ('X','W','D')
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
 ;
 
COMMIT;   
         
--Œ¡ÕŒ¬Àﬂ≈Ã “≈  Œ“Œ–€≈ œŒœ¿À» ¬ Œ“◊≈“Õ”ﬁ ƒ¿“”                      
UPDATE  TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MATURITY_DATE = TMP.PLAN_CLOSE_DT
FROM #TMP_MATURITY_DATE TMP  
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
;
COMMIT;   

SELECT TMP.AGREEMENT_ID,
       FP.REPORT_DATE,
       CASE WHEN TMP.PLAN_CLOSE_DT <  FP.REPORT_DATE
          THEN CAST('2050-01-01' AS DATE)
       ELSE TMP.PLAN_CLOSE_DT END AS PLAN_CLOSE_DT
   INTO #TMP_MATURITY_DATE2
FROM #TMP_MATURITY_DATE TMP
JOIN TMP_F_LOAN_PORTFOLIO FP ON TMP.AGREEMENT_ID = FP.LOAN_FCLY_ID
WHERE  FP.MATURITY_DATE IS NULL
 AND FP.MICRO_TRANCHE_IND IS NULL
;
COMMIT;    

--œŒ  Œ“Œ–€Ã ¡€À¿ œ–ŒÀŒÕ√¿÷»ﬂ,ÕŒ Õ≈ œŒœ¿À» ¬ Œ“◊≈“Õ€… œ≈–»Œƒ (—“¿¬»Ã 5000-01-01)    
UPDATE  TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MATURITY_DATE = TMP.PLAN_CLOSE_DT
FROM #TMP_MATURITY_DATE2 TMP  
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID
 AND UPD.REPORT_DATE = TMP.REPORT_DATE   
 AND MATURITY_DATE IS NULL
;

COMMIT;    
 
-- Õ≈ ¡€ÀŒ œ–ŒÀŒÕ√¿÷»», ¡≈–≈Ã œÀ¿ÕŒ¬”ﬁ ƒ¿“” 
UPDATE  TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MATURITY_DATE = AGR.PLAN_CLOSE_DT
FROM CORE.V_D_AGREEMENT AGR
LEFT JOIN #TMP_MATURITY_DATE TMP ON AGR.AGREEMENT_ID = TMP.AGREEMENT_ID
WHERE UPD.LOAN_FCLY_ID = AGR.AGREEMENT_ID
 AND TMP.AGREEMENT_ID IS NULL
 ;
 
COMMIT;    

UPDATE  TMP_F_LOAN_PORTFOLIO UPD
SET UPD.HEAD_MATURITY_DATE = TMP.PLAN_CLOSE_DT
FROM #TMP_MATURITY_DATE TMP  
WHERE UPD.AGREEMENT_ID = TMP.AGREEMENT_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
;

COMMIT;

UPDATE  TMP_F_LOAN_PORTFOLIO UPD
SET UPD.HEAD_MATURITY_DATE = AGR.PLAN_CLOSE_DT
FROM CORE.D_AGREEMENT  AGR  
WHERE UPD.AGREEMENT_ID = AGR.AGREEMENT_ID
 AND UPD.HEAD_MATURITY_DATE IS NULL
 AND AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) 
 AND AGR.T_RAW_STATUS NOT IN ('X','W','D')
;

COMMIT;  

--»«-«¿ Œ√–¿Õ»◊≈Õ»… ﬁÕ»¬≈–—¿   
UPDATE  TMP_F_LOAN_PORTFOLIO UPD
SET 
    CLOSING_DATE  =      CASE WHEN CLOSING_DATE       > '2050-01-01' THEN CONVERT(DATE,'2050-01-01') ELSE CLOSING_DATE END ,
    HEAD_MATURITY_DATE = CASE WHEN HEAD_MATURITY_DATE > '2050-01-01' THEN CONVERT(DATE,'2050-01-01') ELSE HEAD_MATURITY_DATE END ,
    MATURITY_DATE      = CASE WHEN MATURITY_DATE      > '2050-01-01' THEN CONVERT(DATE,'2050-01-01') ELSE MATURITY_DATE END 
;
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT; 


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'COUNTERPARTY_ID,CUSTOMER_ID',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
; 
-- COUNTERPARTY_ID 
SELECT AGR.AGREEMENT_ID, 
       AE.ENTITY_ID,
       LEAD(ISNULL(AE.BEGIN_DATE,'19000101')) OVER (PARTITION BY AGR.AGREEMENT_ID ORDER BY AE.BEGIN_DATE DESC) AS DD,       
       CASE WHEN DD IS NULL 
         THEN 
          CASE WHEN ISNULL(AE.BEGIN_DATE,'19000101') > AGR.OPEN_DT 
            THEN AGR.OPEN_DT 
            ELSE ISNULL(AE.BEGIN_DATE,'19000101') 
           END
          ELSE ISNULL(AE.BEGIN_DATE,'19000101') 
       END BEGIN_DATE, 
       ISNULL( LEAD(AE.BEGIN_DATE) OVER (PARTITION BY AGR.AGREEMENT_ID ORDER BY AE.BEGIN_DATE ) - 1, '20500101' ) END_DATE 
INTO #TMP_BNF300          
FROM CORE.D_AGREEMENT AGR
JOIN CORE.F_AGMT_ENTITY_ASN  AE ON AGR.AGREEMENT_ID = AE.AGREEMENT_ID
 AND AE.T_RAW_STATUS NOT IN ('X','W','D')
WHERE AE.ENTITY_ASN_ROLE_CD = '¡≈Õ≈‘»÷»¿–_”œ–Œ“◊'
 AND AGR.T_RAW_STATUS NOT IN ('X','W','D');

COMMIT;  

UPDATE TMP_F_LOAN_PORTFOLIO TMP
    SET TMP.COUNTERPARTY_ID = T.COUNTERPARTY_ID,
        TMP.CUSTOMER_ID = T.CUSTOMER_ID
FROM (
     SELECT COALESCE(AGMT_BEN_S.ENTITY_ID,AGMT_BEN_O.ENTITY_ID,  AGMT_CNT.ENTITY_ID,0) AS COUNTERPARTY_ID,
           TMP.LOAN_FCLY_ID,
           TMP.REPORT_DATE,
           CASE WHEN ISNULL(AGMT_CNT.ENTITY_ID,0) = 0 
             THEN COUNTERPARTY_ID 
           ELSE  AGMT_CNT.ENTITY_ID END AS CUSTOMER_ID
      FROM TMP_F_LOAN_PORTFOLIO  TMP
      JOIN CORE.D_AGREEMENT AGR ON TMP.LOAN_FCLY_ID = AGR.AGREEMENT_ID  
       AND AGR.T_RAW_STATUS NOT IN ('X','W','D')
      LEFT JOIN CORE.F_AGMT_ENTITY_ASN AGMT_CNT ON AGR.AGREEMENT_ID = AGMT_CNT.AGREEMENT_ID 
       AND AGMT_CNT.ENTITY_ID >0 AND AGMT_CNT.T_RAW_STATUS NOT IN ('X','W','D')
       AND AGMT_CNT.ENTITY_ASN_ROLE_CD = (CASE WHEN AGR.PRDCT_KIND_CD  = '¿  –≈ƒ»“»¬' AND AGR.PRODUCT_NM <> '¿  –≈ƒ»“»¬ › —œŒ–“Õ€…'  
                                                 THEN 'œ–» ¿«Œƒ¿“≈À‹'
                                               WHEN AGR.PRDCT_KIND_CD  = '¿  –≈ƒ»“»¬' AND AGR.PRODUCT_NM =  '¿  –≈ƒ»“»¬ › —œŒ–“Õ€…' 
                                                 THEN '¡¿Õ -›Ã»“≈Õ“'
                                               WHEN AGR.PRDCT_KIND_CD = '√¿–¿Õ“»ﬂ' 
                                                 THEN  'œ–»Õ÷»œ¿À' 
                                               ELSE ' ŒÕ“–¿√≈Õ“'  
                                           END
                                          )
      LEFT JOIN #TMP_BNF300 AGMT_BEN_S ON AGMT_BEN_S.AGREEMENT_ID = TMP.LOAN_FCLY_ID  
       AND AGMT_BEN_S.ENTITY_ID > 0 
       AND AGMT_BEN_S.BEGIN_DATE <= TMP.REPORT_DATE 
       AND AGMT_BEN_S.END_DATE >= TMP.REPORT_DATE 
      LEFT JOIN CORE.F_AGMT_ENTITY_ASN AGMT_BEN_O ON AGMT_BEN_O.AGREEMENT_ID = TMP.LOAN_FCLY_ID  
       AND AGMT_BEN_O.ENTITY_ID > 0 
       AND AGMT_BEN_O.BEGIN_DATE <= TMP.REPORT_DATE 
       AND AGMT_BEN_O.END_DATE >= TMP.REPORT_DATE 
       AND AGMT_BEN_O.ENTITY_ASN_ROLE_CD ='¡≈Õ≈‘»÷»¿–' 
       AND AGMT_BEN_O.T_RAW_STATUS NOT IN ('X','W','D')
      ) T
WHERE T.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
AND T.REPORT_DATE = TMP.REPORT_DATE;
COMMIT;  


--TMP_CNT (DAK)
UPDATE TMP_F_LOAN_PORTFOLIO TMP
    SET COUNTERPARTY_ID = CUSTOMER_ID,
        CUSTOMER_ID = COUNTERPARTY_ID
WHERE  LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ')
AND COUNTERPARTY_ID <> CUSTOMER_ID
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE ISO_CRCY_ID',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
 --Œ¡ÕŒ¬Àﬂ≈Ã œŒ ——”ƒÕ€Ã —◊≈“¿Ã
UPDATE TMP_F_LOAN_PORTFOLIO
SET TMP_F_LOAN_PORTFOLIO.ISO_CRCY_ID  = TMP.CURRENCY_ID
FROM
   (
    SELECT DISTINCT A.CURRENCY_ID,TMP.LOAN_FCLY_ID,TMP.REPORT_DATE
    FROM TMP_F_LOAN_PORTFOLIO TMP
    JOIN  CORE.F_AGMT_ACCT_ASN AGMT_ACC ON TMP.LOAN_FCLY_ID = AGMT_ACC.AGREEMENT_ID AND AGMT_ACC.ACCOUNT_ROLE_ID IN (6688,6727)
        AND TMP.REPORT_DATE>= AGMT_ACC.BEGIN_DATE AND TMP.REPORT_DATE<=AGMT_ACC.END_DATE AND AGMT_ACC.T_RAW_STATUS NOT IN ('X','W','D')
    JOIN CORE.V_F_AGMT_REST AGMT_R ON AGMT_ACC.AGREEMENT_ID = AGMT_R.AGREEMENT_ID AND AGMT_R.ACCOUNT_ID = AGMT_ACC.ACCOUNT_ID AND BALANCE_OUT <> 0
        AND TMP.REPORT_DATE>=AGMT_R.START_DATE AND TMP.REPORT_DATE<=AGMT_R.FINAL_DATE  AND AGMT_R.T_RAW_STATUS NOT IN ('X','W','D')
    JOIN CORE.D_ACCOUNT A ON AGMT_R.ACCOUNT_ID = A.ACCOUNT_ID AND A.T_RAW_STATUS NOT IN ('X','W','D')
    WHERE TMP.MICRO_TRANCHE_IND IS NULL
    )TMP
WHERE TMP_F_LOAN_PORTFOLIO.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
AND TMP_F_LOAN_PORTFOLIO.REPORT_DATE = TMP.REPORT_DATE;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;
INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT #TMP_OVERDUE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

--——”ƒÕ€≈ —◊≈“¿
 -- DEFAULT_DATE
SELECT MIN(AR.START_DATE) AS START_DATE, AR.AGREEMENT_ID
 INTO #TMP_OVERDUE
 FROM CORE.V_F_AGMT_REST AR
 JOIN CORE.V_D_ACCOUNT A ON AR.ACCOUNT_ID = A.ACCOUNT_ID
 WHERE AR.ACCT_BAL_DET_TYPE = 'ASSET'
 AND AR.ACCT_BAL_DET_CODE = 'PRNC_OVRD'
 AND AR.T_RAW_STATUS NOT IN ('X','W','D')
 AND (A.ACCOUNT_NBR NOT LIKE '8%' AND A.ACCOUNT_NBR NOT LIKE '9%')
 GROUP BY  AR.AGREEMENT_ID;
 
COMMIT;  
 
 --œ–Œ—–Œ◊≈ÕÕ€≈ œ–Œ÷≈Õ“€
 SELECT MIN(AR.START_DATE) AS START_DATE, AR.AGREEMENT_ID
 INTO #TMP_OVERDUE_PRC
 FROM CORE.V_F_AGMT_REST AR
 JOIN CORE.V_D_ACCOUNT A ON AR.ACCOUNT_ID = A.ACCOUNT_ID
 WHERE AR.ACCT_BAL_DET_TYPE = 'ASSET'
 AND AR.ACCT_BAL_DET_CODE IN ('INT_OVRD','INT_OVRD_PRNC','INT_OVRD_OFFB')
 AND AR.T_RAW_STATUS NOT IN ('X','W','D')
 AND (A.ACCOUNT_NBR NOT LIKE '8%' AND A.ACCOUNT_NBR NOT LIKE '9%')
 GROUP BY  AR.AGREEMENT_ID;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;
INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE DEFAULT_DATE,DEFAULT_PERCENT_DATE,APPEAR_DATE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

--AMT   
SELECT AGREEMENT_ID, MIN(START_DATE) AS APPEAR_DATE 
 INTO #TMP_AMT
FROM CORE.V_F_AGMT_REST
WHERE (ACCT_BAL_DET_TYPE = 'ASSET'
 AND ACCT_BAL_DET_CODE IN ('PRNC')
 OR
      ACCT_BAL_DET_TYPE = 'LIABILITY'
  AND ACCT_BAL_DET_CODE IN ('PRNC_OFFB'))
AND BALANCE_OUT <> 0 
AND T_RAW_STATUS NOT IN ('X','W','D')
GROUP BY AGREEMENT_ID
;
   
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET DEFAULT_DATE = OVERDUE.START_DATE
FROM #TMP_OVERDUE AS OVERDUE
WHERE   OVERDUE.AGREEMENT_ID = UPD.LOAN_FCLY_ID
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET DEFAULT_PERCENT_DATE = OVERDUE.START_DATE
FROM #TMP_OVERDUE_PRC AS OVERDUE
WHERE   OVERDUE.AGREEMENT_ID = UPD.LOAN_FCLY_ID
 AND UPD.MICRO_TRANCHE_IND IS NULL
;
   
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET APPEAR_DATE = TMP.APPEAR_DATE
FROM #TMP_AMT AS TMP
WHERE   TMP.AGREEMENT_ID = UPD.LOAN_FCLY_ID
;
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT ¿  –≈ƒ»“»¬,√¿–¿Õ“»ﬂ TMP_BALANCE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
--
/* Œœ»—¿Õ»≈ “»œ»«¿÷»» 
SELECT DISTINCT A.ACCOUNT_NBR,AR.START_DATE,AR.FINAL_DATE,AR.BALANCE_OUT,NSI.*
FROM CORE.V_F_AGMT_REST AR
JOIN CORE.V_D_ACCOUNT A ON AR.ACCOUNT_ID = A.ACCOUNT_ID
JOIN ( SELECT MP.ACCT_ROLE_SHORT_NM                       --–ŒÀ‹ —◊≈“¿
             ,MP.ACCT_NUM_MASK                           --Ã¿— ¿
             ,R.ACCT_BAL_DET_TYPE ,R.ACCT_BAL_DET_CODE
             ,R.ACCT_BAL_DET_NAME
             ,R.ACCT_BAL_BASE_CODE
        FROM NSI_LOADER.ACCT_BAL_TYPE_REF_MAP MP
        JOIN NSI_LOADER.ACCT_BAL_TYPE_REF R ON R.ACCT_BAL_TYPE_REF_ID = MP.ACCT_BAL_TYPE_REF_ID
      ) NSI ON NSI.ACCT_BAL_BASE_CODE = AR.ACCT_BAL_BASE_CODE
WHERE AGREEMENT_ID IN (222634574)
AND '20211001'  BETWEEN START_DATE AND FINAL_DATE

*/

INSERT INTO TMP_BALANCE (AGREEMENT_ID,REPORT_DATE,BALANCE_OUT,BALANCE_OUT_EQV,ACCT_BAL_BASE_TYPE,ACCT_BAL_BASE_CODE)

SELECT * FROM 
(
SELECT  AREST.AGREEMENT_ID,
        C.DT AS REPORT_DATE,
        SUM(AREST.BALANCE_OUT) AS BALANCE_OUT,
        CASE WHEN ISNULL(A.CURRENCY_ID,0) = 0 
         THEN SUM(AREST.BALANCE_OUT)
        ELSE ISNULL(ROUND(SUM(AREST.BALANCE_OUT*FCR.RATE_DIRECT_VALUE/*FCR.PRICE*/),2),SUM(AREST.BALANCE_OUT)) END AS BALANCE_OUT_EQV,
        AREST.ACCT_BAL_BASE_TYPE,
        AREST.ACCT_BAL_BASE_CODE
FROM CORE.D_AGREEMENT AGR 
JOIN CORE.D_CALENDAR C ON AGR.OPEN_DT/*AGR.VALUE_DT*/<=C.DT 
 AND AGR.FACT_CLOSE_DT>=C.DT -- (CASE WHEN AGR.FACT_CLOSE_DT< AGR.PLAN_CLOSE_DT THEN AGR.PLAN_CLOSE_DT ELSE AGR.FACT_CLOSE_DT END) >= C.DT 
 AND C.T_RAW_STATUS NOT IN ('X','W','D')
  AND C.DT <> '2050-01-01'
JOIN CORE.V_F_AGMT_REST AREST ON AGR.AGREEMENT_ID = AREST.AGREEMENT_ID AND C.DT>= AREST.START_DATE AND C.DT <= AREST.FINAL_DATE
JOIN CORE.V_D_ACCOUNT A ON AREST.ACCOUNT_ID = A.ACCOUNT_ID AND A.T_RAW_STATUS NOT IN ('X','W','D')  
LEFT JOIN CORE.F_CURRENCY_RATE FCR ON A.CURRENCY_ID = FCR.BASE_CRCY_ID AND FCR.RATE_DT = C.DT
 AND FCR.T_RAW_STATUS NOT IN ('X','W','D')  AND FCR.QUOTE_CRCY_ALPHA_CD='RUB'
WHERE AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND C.DT >= @PDATESTART 
 AND C.DT <= @PDATEEND  
 AND AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ')
 AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ'
 AND AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE')
 AND ISNULL(AREST.ACCT_BAL_BASE_TYPE,'') IN ('LIABILITY','ASSET','N/A','')
 AND AREST.ACCT_BAL_BASE_CODE IN ('PRNC','PRNC_OFFB_PROV','PRNC_PROV','PRNC_OVRD','PRNC_OVRD_PROV')
 AND AREST.BALANCE_OUT <> 0  
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%' 
GROUP BY  AREST.AGREEMENT_ID,
          C.DT,
          A.CURRENCY_ID,
          AREST.ACCT_BAL_BASE_TYPE,
          AREST.ACCT_BAL_BASE_CODE
) T
WHERE ISNULL(T.BALANCE_OUT,0) <> 0;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT  –≈ƒ»“ TMP_BALANCE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

--«¿œŒÀÕﬂ≈Ã œŒ  –≈ƒ»“¿Ã
INSERT INTO TMP_BALANCE (AGREEMENT_ID,REPORT_DATE,BALANCE_OUT,BALANCE_OUT_EQV,ACCT_BAL_BASE_TYPE,ACCT_BAL_BASE_CODE)

SELECT * FROM 
(
SELECT  AREST.AGREEMENT_ID,
        C.DT AS REPORT_DATE,
        SUM(AREST.BALANCE_OUT) AS BALANCE_OUT,
        CASE WHEN ISNULL(A.CURRENCY_ID,0) = 0 
         THEN SUM(AREST.BALANCE_OUT)
        ELSE ISNULL(ROUND(SUM(AREST.BALANCE_OUT*FCR.RATE_DIRECT_VALUE /*FCR.PRICE*/),2),SUM(AREST.BALANCE_OUT)) END AS BALANCE_OUT_EQV,
        AREST.ACCT_BAL_BASE_TYPE,
        AREST.ACCT_BAL_BASE_CODE
FROM CORE.D_AGREEMENT AGR 
JOIN CORE.D_CALENDAR C ON AGR.OPEN_DT/*AGR.VALUE_DT*/<=C.DT 
 AND AGR.FACT_CLOSE_DT>=C.DT -- (CASE WHEN AGR.FACT_CLOSE_DT< AGR.PLAN_CLOSE_DT THEN AGR.PLAN_CLOSE_DT ELSE AGR.FACT_CLOSE_DT END) >= C.DT  
 AND C.T_RAW_STATUS NOT IN ('X','W','D')
JOIN CORE.V_F_AGMT_REST AREST ON AGR.AGREEMENT_ID = AREST.AGREEMENT_ID 
 AND C.DT>= AREST.START_DATE 
 AND C.DT <= AREST.FINAL_DATE
  AND C.DT <> '2050-01-01'
JOIN CORE.V_D_ACCOUNT A ON AREST.ACCOUNT_ID = A.ACCOUNT_ID 
 AND A.T_RAW_STATUS NOT IN ('X','W','D')  
LEFT JOIN CORE.F_CURRENCY_RATE FCR ON A.CURRENCY_ID = FCR.BASE_CRCY_ID 
 AND FCR.RATE_DT = C.DT
 AND FCR.T_RAW_STATUS NOT IN ('X','W','D')  AND FCR.QUOTE_CRCY_ALPHA_CD='RUB'
WHERE AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND C.DT >= @PDATESTART 
 AND C.DT <= @PDATEEND  
 AND ((AGR.PRDCT_KIND_CD IN (' –≈ƒ»“'))  OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ') 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'))
 AND ISNULL(AREST.ACCT_BAL_BASE_TYPE,'') IN ('ASSET','N/A','LIABILITY','')
 AND ISNULL(AREST.ACCT_BAL_BASE_CODE,'') IN ('PRNC','PRNC_PROV','PRNC_OVRD','PRNC_OVRD_PROV','INT','INT_PROV','LIM','LIM_PROV','INT_OVRD','INT_OVRD_PROV','INT_OVRD_OFFB','DSC','PREM','N/A','' )
 AND AREST.BALANCE_OUT <> 0  
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%' 
 AND AGR.PRDCT_SUBTYPE_CD <> 'DSL_LIM_DEBT'
GROUP BY  AREST.AGREEMENT_ID,
          C.DT,
          A.CURRENCY_ID,
          AREST.ACCT_BAL_BASE_TYPE,
          AREST.ACCT_BAL_BASE_CODE
) T
WHERE ISNULL(T.BALANCE_OUT,0) <> 0;


UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT TMP_BALANCE_VALUE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

INSERT INTO TMP_BALANCE_VALUE (AGREEMENT_ID,REPORT_DATE,BALANCE_OUT,BALANCE_OUT_EQV,ACCT_BAL_BASE_TYPE,ACCT_BAL_BASE_CODE,BAL_ACCT_2LVL_NBR)

SELECT * FROM 
(
SELECT  AREST.AGREEMENT_ID,
        C.DT AS REPORT_DATE,
        SUM(AREST.BALANCE_OUT) AS BALANCE_OUT,
        CASE WHEN ISNULL(A.CURRENCY_ID,0) = 0 
         THEN SUM(AREST.BALANCE_OUT)
        ELSE ISNULL(ROUND(SUM(AREST.BALANCE_OUT*FCR.RATE_DIRECT_VALUE/*FCR.PRICE*/),2),SUM(AREST.BALANCE_OUT)) END AS BALANCE_OUT_EQV,
        AREST.ACCT_BAL_BASE_TYPE,
        AREST.ACCT_BAL_BASE_CODE,
        A.BAL_ACCT_2LVL_NBR
FROM CORE.D_AGREEMENT AGR 
JOIN CORE.D_CALENDAR C ON AGR.OPEN_DT/*AGR.VALUE_DT*/<=C.DT 
 AND AGR.FACT_CLOSE_DT>=C.DT -- (CASE WHEN AGR.FACT_CLOSE_DT< AGR.PLAN_CLOSE_DT THEN AGR.PLAN_CLOSE_DT ELSE AGR.FACT_CLOSE_DT END) >= C.DT 
 AND C.T_RAW_STATUS NOT IN ('X','W','D')
  AND C.DT <> '2050-01-01'
JOIN CORE.V_F_AGMT_REST AREST ON AGR.AGREEMENT_ID = AREST.AGREEMENT_ID AND C.DT>= AREST.START_DATE AND C.DT <= AREST.FINAL_DATE
JOIN CORE.V_D_ACCOUNT A ON AREST.ACCOUNT_ID = A.ACCOUNT_ID AND A.T_RAW_STATUS NOT IN ('X','W','D')  
LEFT JOIN CORE.F_CURRENCY_RATE FCR ON A.CURRENCY_ID = FCR.BASE_CRCY_ID AND FCR.RATE_DT = C.DT
 AND FCR.T_RAW_STATUS NOT IN ('X','W','D')  AND FCR.QUOTE_CRCY_ALPHA_CD='RUB'
WHERE AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND C.DT >= @PDATESTART 
 AND C.DT <= @PDATEEND  
 AND AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ')
 AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ'
 AND AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE')
 AND ISNULL(AREST.ACCT_BAL_BASE_TYPE,'') IN ('LIABILITY','ASSET','')
 AND AREST.ACCT_BAL_BASE_CODE IN ('PRNC_OFFB')
 AND AREST.BALANCE_OUT <> 0  
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%' 
 AND AGR.PRDCT_SUBTYPE_CD <> 'DSL_LIM_DEBT'
GROUP BY  AREST.AGREEMENT_ID,
          C.DT,
          A.CURRENCY_ID,
          AREST.ACCT_BAL_BASE_TYPE,
          AREST.ACCT_BAL_BASE_CODE,
          A.BAL_ACCT_2LVL_NBR
) T
WHERE ISNULL(T.BALANCE_OUT,0) <> 0
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE BALLANCE VALUE (œŒ ƒŒ ”Ã≈Õ“¿– ≈ —◊≈“¿:90908,90907)',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

--
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET VALUE = ABS(BAL.BALANCE_OUT), 
        VALUE_REF = ABS(BAL.BALANCE_OUT_EQV)
FROM TMP_BALANCE_VALUE AS BAL
WHERE   UPD.LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ')
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE  = UPD.REPORT_DATE
    AND BAL.ACCT_BAL_BASE_TYPE IN ('ASSET','LIABILITY')    AND BAL.ACCT_BAL_BASE_CODE = 'PRNC_OFFB'
    AND UPD.MICRO_TRANCHE_IND IS NULL
	AND BAL.BAL_ACCT_2LVL_NBR IN ('90908','90907')
	;

COMMIT;  
-- ≈—À» œ”—“Œ, “Œ 91315
 UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET VALUE = ABS(BAL.BALANCE_OUT), 
        VALUE_REF = ABS(BAL.BALANCE_OUT_EQV)
FROM TMP_BALANCE_VALUE AS BAL
WHERE   UPD.LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ')
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE  = UPD.REPORT_DATE
    AND BAL.ACCT_BAL_BASE_TYPE = 'LIABILITY'     AND BAL.ACCT_BAL_BASE_CODE = 'PRNC_OFFB'
    AND ISNULL(UPD.VALUE,0) = 0
    AND UPD.MICRO_TRANCHE_IND IS NULL
    AND BAL.BAL_ACCT_2LVL_NBR IN ('91315')
	 ;

COMMIT;  
--≈—À» œ”—“Œ, “Œ Œ—ÕŒ¬ÕŒ√Œ ƒŒÀ√¿
  UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET VALUE = ABS(BAL.BALANCE_OUT), 
        VALUE_REF = ABS(BAL.BALANCE_OUT_EQV)
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ')
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE  = UPD.REPORT_DATE
    AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET'     AND BAL.ACCT_BAL_BASE_CODE = 'PRNC'
    AND ISNULL(UPD.VALUE,0) = 0
     AND UPD.MICRO_TRANCHE_IND IS NULL;
 
COMMIT;   
-- –≈ƒ»“
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET VALUE = ABS(BAL.BALANCE_OUT), 
        VALUE_REF = ABS(BAL.BALANCE_OUT_EQV)
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
    AND BAL.ACCT_BAL_BASE_CODE = 'PRNC'
    AND UPD.MICRO_TRANCHE_IND IS NULL;

COMMIT;  

UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET VALUE = VALUE+ABS(BAL.BALANCE_OUT), 
        VALUE_REF = VALUE_REF+ABS(BAL.BALANCE_OUT_EQV)
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
    AND BAL.ACCT_BAL_BASE_CODE = 'DSC'
    AND UPD.MICRO_TRANCHE_IND IS NULL;

COMMIT;  
        
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET VALUE = VALUE+ABS(BAL.BALANCE_OUT), 
        VALUE_REF = VALUE_REF+ABS(BAL.BALANCE_OUT_EQV)
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
    AND BAL.ACCT_BAL_BASE_CODE = 'PREM'
    AND UPD.MICRO_TRANCHE_IND IS NULL;         

COMMIT;  
        
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET VALUE = ABS(BAL.BALANCE_OUT), 
        VALUE_REF = ABS(BAL.BALANCE_OUT_EQV)
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN ('ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND ISNULL(BAL.ACCT_BAL_BASE_TYPE,'') IN ('N/A','') 
    AND ISNULL(BAL.ACCT_BAL_BASE_CODE,'') IN ('N/A','')
    AND UPD.MICRO_TRANCHE_IND IS NULL;

--¬Õ≈—»—“≈ÃÕ€≈ —ƒ≈À » —¿ƒ Œ
COMMIT;  

SELECT AGR.AGREEMENT_ID,
       C.DT AS REPORT_DATE,
       SUM(AGR.AMOUNT-ISNULL(TMP.SCHED_PAY_AMT,0)) AS BALANCE_OUT,
       ISNULL(ROUND(SUM((AGR.AMOUNT-ISNULL(TMP.SCHED_PAY_AMT,0))*FCR.RATE_DIRECT_VALUE),2),0) AS BALANCE_OUT_EQV 
        INTO #TMP_SADKO_AGR_REST 
FROM CORE.V_D_AGREEMENT AGR 
JOIN CORE.D_CALENDAR C ON AGR.OPEN_DT/*AGR.VALUE_DT*/<=C.DT 
 AND AGR.FACT_CLOSE_DT>=C.DT 
 AND C.T_RAW_STATUS NOT IN ('X','W','D') 
  AND C.DT <> '2050-01-01'
JOIN CORE.F_CURRENCY_RATE FCR ON AGR.CURRENCY_ID = FCR.BASE_CRCY_ID  
 AND FCR.RATE_DT =C.DT  AND FCR.T_RAW_STATUS NOT IN ('X','W','D')  
 AND FCR.QUOTE_CRCY_ALPHA_CD='RUB' 
LEFT JOIN ( SELECT AGR.AGREEMENT_ID,C.DT,SUM(ASV.SCHED_PAY_AMT) AS SCHED_PAY_AMT 
            FROM CORE.D_AGREEMENT AGR
            JOIN CORE.D_CALENDAR C ON AGR.OPEN_DT<= C.DT 
             AND AGR.FACT_CLOSE_DT>=C.DT 
             AND C.T_RAW_STATUS NOT IN ('X','W','D')
              AND C.DT <> '2050-01-01'
            JOIN CORE.V_F_AGMT_SCHEDULE_VERT ASV ON AGR.AGREEMENT_ID = ASV.AGREEMENT_ID 
             AND ASV.SCHED_TYPE_CD = 'Œ—Õ. ƒŒÀ√ (Œƒ)'
             AND ASV.VERSION_CD = 'L' --œŒ—À≈ƒÕ»… √–¿‘» 
            WHERE AGR.OWNER_SRS_CD  = '—¿ƒ Œ'
             AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'
             AND ASV.SCHED_PAYED_DT <=C.DT
            GROUP BY AGR.AGREEMENT_ID,C.DT)  TMP ON AGR.AGREEMENT_ID = TMP.AGREEMENT_ID 
            AND C.DT = TMP.DT 
WHERE 1 = 1  
 AND AGR.OWNER_SRS_CD  = '—¿ƒ Œ'  
 AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'
 --AND AGR.AGREEMENT_ID = 141308113 
 --AND C.DT = '20200930' 
GROUP BY AGR.AGREEMENT_ID,C.DT;

COMMIT;  

UPDATE TMP_F_LOAN_PORTFOLIO UPD
  SET VALUE = ABS(BAL.BALANCE_OUT),
      VALUE_REF = ABS(BAL.BALANCE_OUT_EQV) 
FROM #TMP_SADKO_AGR_REST AS BAL 
WHERE BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID
    AND BAL.REPORT_DATE  = UPD.REPORT_DATE
     AND UPD.MICRO_TRANCHE_IND IS NULL;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE BALLANCE RESERVE_BALANCE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

/*
  œŒ ƒŒ√Œ¬Œ–” Õ≈ Œ“–¿∆¿≈“—ﬂ
  –≈«≈–¬ —– Œƒ, Œ—“¿“Œ  Õ¿ ƒŒ√Œ¬Œ–≈, –¿«¡»¬¿≈“—ﬂ œŒ “–¿Õÿ¿Ã œ–ŒœŒ–÷»ŒÕ¿À‹ÕŒ —– Œƒ. (VALUE) 
  ¿À√Œ–»“Ã Œ“ ∆≈À¿ÕŒ¬¿:C”ÃÃ¿ –≈«≈–¬¿ –¬œ— (“Œ ◊“Œ, Õ¿ —◊≈“≈ ¬ ”◊≈“ÕŒ… —»—“≈Ã≈) ƒ≈À»Ã Õ¿ —”ÃÃ” Œ—“¿“ ¿ œŒ √ŒÀŒ¬ÕŒÃ” ƒŒ√Œ¬Œ–” (—–Œ◊Õ¿ﬂ+œ–Œ—–Œ◊≈ÕÕ¿ﬂ) - ›“Œ œŒÀ”◊¿≈Ã œŒ —”“» —“¿¬ ” –≈«≈–¬¿. 
                       ƒ¿À≈≈ ƒÀﬂ “Œ√Œ, ◊“Œ¡€ –¿«Õ≈—“» –¬œ— œŒ “–¿Õÿ¿Ã, Õ≈Œ¡’Œƒ»ÃŒ Œ—“¿“Œ  Õ¿ “–¿Õÿ≈ (—–Œ◊Õ¿ﬂ+œ–Œ—–Œ◊≈ÕÕ¿ﬂ) ”ÃÕŒ∆»“‹ Õ¿ œŒÀ”◊≈ÕÕ”ﬁ —“¿¬ ”.
*/
SELECT TMP.AGREEMENT_ID,
       TMP.REPORT_DATE,
       SUM(BAL.BALANCE_OUT_EQV) SUM_ALL INTO #TMP_AGREEMENT_ALL_SUM
FROM TMP_F_LOAN_PORTFOLIO TMP
JOIN TMP_BALANCE BAL ON TMP.LOAN_FCLY_ID = BAL.AGREEMENT_ID
  AND BAL.REPORT_DATE  = TMP.REPORT_DATE
  AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
  AND BAL.ACCT_BAL_BASE_CODE = 'PRNC'
WHERE  1 = 1
 AND TMP.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
 AND TMP.MICRO_TRANCHE_IND IS NULL
GROUP BY TMP.AGREEMENT_ID,TMP.REPORT_DATE;

COMMIT;  

SELECT TMP.LOAN_FCLY_ID,
       TMP.REPORT_DATE,
       CAST(BAL.BALANCE_OUT_EQV/BAL_ALL.SUM_ALL*ABS(BAL_AGR.BALANCE_OUT) AS NUMERIC(28,2)) AS RESERVE_BALANCE
      INTO #TMP_RESERVE_BALANCE
       
FROM TMP_F_LOAN_PORTFOLIO TMP
JOIN TMP_BALANCE BAL ON TMP.LOAN_FCLY_ID = BAL.AGREEMENT_ID
  AND BAL.REPORT_DATE  = TMP.REPORT_DATE
  AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
  AND BAL.ACCT_BAL_BASE_CODE = 'PRNC'
JOIN #TMP_AGREEMENT_ALL_SUM BAL_ALL ON TMP.AGREEMENT_ID = BAL_ALL.AGREEMENT_ID
 AND BAL_ALL.REPORT_DATE = TMP.REPORT_DATE
JOIN TMP_BALANCE BAL_AGR ON BAL_AGR.AGREEMENT_ID = TMP.AGREEMENT_ID
  AND BAL_AGR.REPORT_DATE = TMP.REPORT_DATE
  AND ISNULL(BAL_AGR.ACCT_BAL_BASE_TYPE,'') IN ('N/A','') 
  AND BAL_AGR.ACCT_BAL_BASE_CODE = 'PRNC_PROV'
WHERE  1 = 1
 AND TMP.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
 AND TMP.MICRO_TRANCHE_IND IS NULL
 AND ISNULL(BAL.BALANCE_OUT_EQV,0) <> 0
 AND ISNULL(BAL_ALL.SUM_ALL,0) <> 0
 ;
 
COMMIT;  
 
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET RESERVE_BALANCE = BAL.RESERVE_BALANCE
FROM #TMP_RESERVE_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.LOAN_FCLY_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND ISNULL(BAL.RESERVE_BALANCE,0) <> 0
     AND UPD.MICRO_TRANCHE_IND IS NULL;
    ;
    
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;     


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE BALLANCE RESERVE_VALUE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

SELECT AGREEMENT_ID,
       REPORT_DATE,
       SUM(ISNULL(VALUE_REF,0)+ISNULL(DEFAULT_VALUE_REF,0)) SUM_ALL INTO #TMP_AGREEMENT_ALL_SUM_NEW
FROM TMP_F_LOAN_PORTFOLIO TMP
WHERE  1 = 1
 AND LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
 AND MICRO_TRANCHE_IND IS NULL
GROUP BY AGREEMENT_ID,REPORT_DATE
;

COMMIT;  

--–¿«¡»¬¿≈Ã œ–ŒœŒ–÷»ﬁ
SELECT TMP.LOAN_FCLY_ID,
       TMP.REPORT_DATE,
       CAST((ISNULL(TMP.VALUE_REF,0)+ISNULL(TMP.DEFAULT_VALUE_REF,0)) / BAL_ALL.SUM_ALL*ABS(BAL_AGR.BALANCE_OUT) AS NUMERIC(28,2)) AS RESERVE_VALUE
      INTO #TMP_RESERVE_VALUE
       
FROM TMP_F_LOAN_PORTFOLIO TMP
JOIN #TMP_AGREEMENT_ALL_SUM_NEW BAL_ALL ON TMP.AGREEMENT_ID = BAL_ALL.AGREEMENT_ID
 AND BAL_ALL.REPORT_DATE = TMP.REPORT_DATE
JOIN TMP_BALANCE BAL_AGR ON BAL_AGR.AGREEMENT_ID = TMP.AGREEMENT_ID
  AND BAL_AGR.REPORT_DATE = TMP.REPORT_DATE
  AND ISNULL(BAL_AGR.ACCT_BAL_BASE_TYPE,'') IN ('N/A','') 
  AND BAL_AGR.ACCT_BAL_BASE_CODE IN ('LIM_PROV','PRNC_OFFB_PROV')
WHERE  1 = 1
 AND TMP.LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
 AND TMP.MICRO_TRANCHE_IND IS NULL
 AND  (ISNULL(TMP.VALUE_REF,0) <> 0 OR  ISNULL(TMP.DEFAULT_VALUE_REF,0) <> 0)

;
COMMIT;  
 
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET RESERVE_VALUE = BAL.RESERVE_VALUE
FROM #TMP_RESERVE_VALUE AS BAL
WHERE   UPD.LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.LOAN_FCLY_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND ISNULL(BAL.RESERVE_VALUE,0) <> 0
     AND UPD.MICRO_TRANCHE_IND IS NULL;

COMMIT;   
-- Œ√ƒ¿ œŒ ƒŒ√Œ¬Œ–” Õ≈“ Œ—“¿“ ¿, ÕŒ –¬œ ≈—“‹. ¬ “¿ ŒÃ —À”◊¿≈ –¬œ Õ”∆ÕŒ œŒ ¿«¿“‹ œŒ ƒŒ√Œ¬Œ–”
--Õ¿ —ƒ≈À ≈ — Õ”À≈¬€Ã »À» œ”—“€Ã Œ—“¿“ ŒÃ
 UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.RESERVE_VALUE = ABS(BAL.BALANCE_OUT)
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.AGREEMENT_ID = UPD.AGREEMENT_ID             
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND ISNULL(BAL.ACCT_BAL_BASE_TYPE,'') IN ('N/A','') 
    AND BAL.ACCT_BAL_BASE_CODE IN ('LIM_PROV','PRNC_OFFB_PROV')
    AND UPD.MICRO_TRANCHE_IND IS NULL
    AND NOT EXISTS ( SELECT AGREEMENT_ID  FROM TMP_F_LOAN_PORTFOLIO  T
                     WHERE (ISNULL(T.VALUE_REF,0) <> 0 OR ISNULL(T.DEFAULT_VALUE_REF,0) <>0 )
                      AND T.AGREEMENT_ID  = UPD.AGREEMENT_ID
                      AND T.REPORT_DATE = UPD.REPORT_DATE
                    )
    AND UPD.RESERVE_VALUE IS NULL
    AND UPD.MICRO_TRANCHE_IND IS NULL
    ;

COMMIT
;    

 -- DEFAULT_VALUE, DEFAULT_VALUE_REF   
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET DEFAULT_VALUE = BAL.BALANCE_OUT, 
        DEFAULT_VALUE_REF = BAL.BALANCE_OUT_EQV
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID             
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
    AND ACCT_BAL_BASE_CODE = 'PRNC_OVRD'
     AND UPD.MICRO_TRANCHE_IND IS NULL;

    ;
    
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE BALLANCE RESEVE_DEF_BALANCE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

--—”ÃÃ¿ Œ—ÕŒ¬ÕŒ√Œ » œ–Œ—–Œ◊≈ÕÕŒ√Œ ƒŒÀ√¿ (¡≈–≈Ã »« TMP_F_LOAN_PORTFOLIO, ◊“Œ¡ Õ≈ œŒ¬“Œ–ﬂ“‹ “»œ€ —◊≈“Œ¬ )
SELECT AGREEMENT_ID,
       REPORT_DATE,
       SUM(ISNULL(VALUE_REF,0)+ISNULL(DEFAULT_VALUE_REF,0)) SUM_ALL INTO #TMP_RESEVE_DEF_BALANCE_ALL_SUM
FROM TMP_F_LOAN_PORTFOLIO TMP
WHERE  1 = 1
 AND LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
 AND MICRO_TRANCHE_IND IS NULL
GROUP BY AGREEMENT_ID,REPORT_DATE;

COMMIT;  
SELECT TMP.LOAN_FCLY_ID,
       TMP.REPORT_DATE,
       CAST((ISNULL(TMP.VALUE_REF,0)+ISNULL(TMP.DEFAULT_VALUE_REF,0)) / BAL_ALL.SUM_ALL * ABS(BAL_AGR.BALANCE_OUT_EQV) AS NUMERIC(28,2)) AS RESEVE_DEF_BALANCE
      INTO #TMP_RESEVE_DEF_BALANCE
       
FROM TMP_F_LOAN_PORTFOLIO TMP
JOIN #TMP_RESEVE_DEF_BALANCE_ALL_SUM BAL_ALL ON TMP.AGREEMENT_ID = BAL_ALL.AGREEMENT_ID
 AND BAL_ALL.REPORT_DATE = TMP.REPORT_DATE
JOIN TMP_BALANCE BAL_AGR ON BAL_AGR.AGREEMENT_ID = TMP.AGREEMENT_ID
  AND BAL_AGR.REPORT_DATE = TMP.REPORT_DATE
  AND ISNULL(BAL_AGR.ACCT_BAL_BASE_TYPE,'') IN ('N/A','') 
  AND BAL_AGR.ACCT_BAL_BASE_CODE = 'PRNC_OVRD_PROV'
WHERE TMP.MICRO_TRANCHE_IND IS NULL
 AND 1 = 1
 AND TMP.LOAN_TYPE  IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
 AND (ISNULL(TMP.VALUE_REF,0) <> 0 OR  ISNULL(TMP.DEFAULT_VALUE_REF,0) <> 0)
 AND ISNULL(BAL_ALL.SUM_ALL,0) <> 0

 ;
COMMIT;   

UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET RESEVE_DEF_BALANCE = BAL.RESEVE_DEF_BALANCE
FROM #TMP_RESEVE_DEF_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN ('¿  –≈ƒ»“»¬','√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.LOAN_FCLY_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
     AND UPD.MICRO_TRANCHE_IND IS NULL;

COMMIT;  
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET RESEVE_INT_BALANCE = ABS(BAL.BALANCE_OUT)
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID             
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND ISNULL(BAL.ACCT_BAL_BASE_TYPE,'') IN ('N/A','') 
    AND ACCT_BAL_BASE_CODE = 'INT_PROV'
     AND UPD.MICRO_TRANCHE_IND IS NULL;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE BALLANCE LIMIT_BALANCE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;


--À»Ã»“, Œ—“¿“Œ  Õ¿ ƒŒ√Œ¬Œ–≈, –¿«¡»¬¿≈“—ﬂ œŒ “–¿Õÿ¿Ã œ–ŒœŒ–÷»ŒÕ¿À‹ÕŒ —– Œƒ. œŒ ƒŒ√Œ¬Œ–” Õ≈ Œ“–¿∆¿≈“—ﬂ.ƒ≈…—“¬”ﬁŸ»’ √¿–¿Õ“»… — À»Ã»“¿Ã» Õ≈“, ÕŒ ¬ŒŒ¡Ÿ≈ —◊≈“¿ ≈—“‹.
--UPD: ¬ —À”◊¿» Œ“—”“—“¬»ﬂ “–¿Õÿ¿ (VALUE), “Œ —”ÃÃ»–”≈Ã — —”ÃÃ€ œ–Œ—–Œ◊ » (DEFAULT_VALUE)
SELECT TMP.AGREEMENT_ID,
       TMP.REPORT_DATE,
       SUM(ABS(BAL.BALANCE_OUT)) SUM_ALL,
       SUM(ABS(BAL.BALANCE_OUT_EQV)) SUM_ALL_EQV 
       INTO #TMP_LIMIT_BALANCE_ALL_SUM
FROM TMP_F_LOAN_PORTFOLIO TMP
JOIN TMP_BALANCE BAL ON TMP.LOAN_FCLY_ID = BAL.AGREEMENT_ID
  AND BAL.REPORT_DATE  = TMP.REPORT_DATE
  AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
  AND BAL.ACCT_BAL_BASE_CODE IN ('PRNC','PRNC_OVRD')
WHERE  1 = 1
 AND TMP.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
 AND TMP.MICRO_TRANCHE_IND IS NULL
GROUP BY TMP.AGREEMENT_ID,TMP.REPORT_DATE;

COMMIT;  
--œ–ŒœŒ–÷»ﬂ œŒ “–¿Õÿ¿Ã » œŒ —”ÃÃ≈ œ–Œ—œ–Œ◊ »
SELECT TMP.LOAN_FCLY_ID,
       TMP.REPORT_DATE,
       CAST(BAL.BALANCE_OUT_EQV/BAL_ALL.SUM_ALL_EQV*ABS(BAL_AGR.BALANCE_OUT) AS NUMERIC(28,2)) AS LIMIT_BALANCE,
       CAST(BAL.BALANCE_OUT_EQV/BAL_ALL.SUM_ALL_EQV*ABS(BAL_AGR.BALANCE_OUT_EQV) AS NUMERIC(28,2)) AS LIMIT_BALANCE_REF
      INTO #TMP_LIMIT_BALANCE
       
FROM TMP_F_LOAN_PORTFOLIO TMP
JOIN TMP_BALANCE BAL ON TMP.LOAN_FCLY_ID = BAL.AGREEMENT_ID
  AND BAL.REPORT_DATE  = TMP.REPORT_DATE
  AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
  AND BAL.ACCT_BAL_BASE_CODE IN ('PRNC','PRNC_OVRD')
  JOIN #TMP_LIMIT_BALANCE_ALL_SUM BAL_ALL ON TMP.AGREEMENT_ID = BAL_ALL.AGREEMENT_ID
 AND BAL_ALL.REPORT_DATE = TMP.REPORT_DATE
 JOIN TMP_BALANCE BAL_AGR ON BAL_AGR.AGREEMENT_ID = TMP.AGREEMENT_ID
  AND BAL_AGR.REPORT_DATE = TMP.REPORT_DATE
  AND BAL_AGR.ACCT_BAL_BASE_TYPE = 'LIABILITY' 
  AND BAL_AGR.ACCT_BAL_BASE_CODE = 'LIM'
  AND TMP.MICRO_TRANCHE_IND IS NULL
--  WHERE  TMP.AGREEMENT_ID = 42369619

WHERE  1 = 1
 AND TMP.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ');

 COMMIT;  
 
--œŒ “–¿Õÿ¿Ã 
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET LIMIT_BALANCE = BAL.LIMIT_BALANCE,
        LIMIT_BALANCE_REF = BAL.LIMIT_BALANCE_REF
FROM #TMP_LIMIT_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.LOAN_FCLY_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND BAL.LIMIT_BALANCE IS NOT NULL
     AND UPD.MICRO_TRANCHE_IND IS NULL;

COMMIT;  

--œŒ √ŒÀŒ¬ÕŒÃ” ƒŒ√Œ¬Œ–”    
 UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.LIMIT_BALANCE = ABS(BAL.BALANCE_OUT),
        UPD.LIMIT_BALANCE_REF = ABS(BAL.BALANCE_OUT_EQV)
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')  
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND BAL.AGREEMENT_ID = UPD.AGREEMENT_ID   
    AND UPD.AGREEMENT_ID = UPD.LOAN_FCLY_ID
    AND BAL.ACCT_BAL_BASE_TYPE = 'LIABILITY' 
    AND BAL.ACCT_BAL_BASE_CODE = 'LIM'
    AND UPD.LIMIT_BALANCE = 0
     AND UPD.MICRO_TRANCHE_IND IS NULL;
  
COMMIT;  

--Œ¡”ÕﬂÀ≈Ã Õ¿ √ŒÀŒ¬ÕŒÃ
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.LIMIT_BALANCE = 0,
    UPD.LIMIT_BALANCE_REF = 0
WHERE EXISTS (SELECT AGREEMENT_ID FROM TMP_F_LOAN_PORTFOLIO 
              WHERE REPORT_DATE = UPD.REPORT_DATE AND AGREEMENT_ID=UPD.AGREEMENT_ID
              --AND UPD.ISO_CRCY_ID=ISO_CRCY_ID –≈ÿ»À» ”¡–¿“‹ œ–Œ¬≈– ” Õ¿ ¬¿Àﬁ“” (œ»—‹ÃŒ Œ“ ∆≈À¿ÕŒ¬¿ ¬. FEBRUARY 2, 2022 5:35 PM)
              AND AGREEMENT_ID<>LOAN_FCLY_ID AND MICRO_TRANCHE_IND IS NULL 
              AND (ISNULL(VALUE_REF,0)+ISNULL(DEFAULT_VALUE_REF,0))<>0
              )
AND UPD.AGREEMENT_ID= UPD.LOAN_FCLY_ID 
AND UPD.MICRO_TRANCHE_IND IS NULL;


COMMIT;  

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE  PERCENT_BALANCE,DEFAULT_PERCENT_BALANCE,DEFAULT_PERCENT_OUT_BALANCE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
 -- PERCENT_BALANCE   
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.PERCENT_BALANCE = BAL.BALANCE_OUT
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')  
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID             
    AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
    AND BAL.ACCT_BAL_BASE_CODE = 'INT'
    AND BAL.BALANCE_OUT > 0
    AND UPD.MICRO_TRANCHE_IND IS NULL
    ;

 -- DEFAULT_PERCENT_BALANCE
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET DEFAULT_PERCENT_BALANCE = BAL.BALANCE_OUT
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID             
    AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
    AND BAL.ACCT_BAL_BASE_CODE = 'INT_OVRD'
     AND UPD.MICRO_TRANCHE_IND IS NULL;
    

 -- DEFAULT_PERCENT_OUT_BALANCE
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.DEFAULT_PERCENT_OUT_BALANCE = BAL.BALANCE_OUT
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')   
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID             
    AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
    AND BAL.ACCT_BAL_BASE_CODE = 'INT_OVRD_OFFB'
    AND UPD.MICRO_TRANCHE_IND IS NULL;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE  IDSTY_CLS_ID(»Õ“—–”Ã≈Õ“,√ŒÀŒ¬¿)',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

--/»Õ—“–”Ã≈Õ“

UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.IDSTY_CLS_ID = A_PFL.INDUSTRY_ID
FROM CORE.V_D_AGREEMENT A_PFL 
WHERE UPD.LOAN_FCLY_ID = A_PFL.AGREEMENT_ID
    --  AND UPD.REPORT_DATE >= A_PFL.T_SCD_BEGIN_DATE
    --  AND UPD.REPORT_DATE <= A_PFL.T_SCD_END_DATE
      AND UPD.REPORT_DATE >= @PDATESTART
      AND A_PFL.INDUSTRY_ID <> 0
      AND UPD.MICRO_TRANCHE_IND IS NULL;

--√ŒÀŒ¬¿
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.IDSTY_CLS_ID = A_PFL.INDUSTRY_ID
FROM CORE.V_D_AGREEMENT A_PFL
WHERE UPD.AGREEMENT_ID = A_PFL.AGREEMENT_ID
      AND UPD.IDSTY_CLS_ID IS NULL
   --   AND UPD.REPORT_DATE >= A_PFL.T_SCD_BEGIN_DATE
    --  AND UPD.REPORT_DATE <= A_PFL.T_SCD_END_DATE
      AND UPD.REPORT_DATE >= @PDATESTART
      AND A_PFL.INDUSTRY_ID <> 0
      AND UPD.MICRO_TRANCHE_IND IS NULL;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT TMP_CNTRIND',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
INSERT INTO TMP_CNTRIND 
SELECT DISTINCT E.ENTITY_ID,
       E.INDUSTRY_ID,     
       AGMT_CNT.AGREEMENT_ID,  
       AGMT_CNT.ENTITY_ASN_ROLE_CD,
       AGMT_CNT.BEGIN_DATE,
       ISNULL(LEAD(AGMT_CNT.BEGIN_DATE) OVER (PARTITION BY AGMT_CNT.AGREEMENT_ID,AGMT_CNT.ENTITY_ASN_ROLE_CD ORDER BY AGMT_CNT.BEGIN_DATE) - 1,'2050-01-01') AS END_DATE 
FROM CORE.V_D_ENTITY E 
JOIN CORE.V_F_AGMT_ENTITY_ASN AGMT_CNT  ON E.ENTITY_ID = AGMT_CNT.ENTITY_ID AND AGMT_CNT.ENTITY_ASN_ROLE_CD IN ('¡≈Õ≈‘»÷»¿–_”œ–Œ“◊','¡≈Õ≈‘»÷»¿–',' ŒÕ“–¿√≈Õ“','œ–» ¿«Œƒ¿“≈À‹','œ–»Õ÷»œ¿À')
 AND AGMT_CNT.T_RAW_STATUS NOT IN ('X','W','D')
WHERE E.INDUSTRY_ID <>0
AND E.T_RAW_STATUS NOT IN ('X','W','D');

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE IDSTY_CLS_ID IN TMP_CNTRIND',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;


UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.IDSTY_CLS_ID = IND.INDUSTRY_ID
FROM TMP_CNTRIND IND
WHERE IND.ENTITY_ASN_ROLE_CD = '¡≈Õ≈‘»÷»¿–'
  AND UPD.REPORT_DATE >= IND.BEGIN_DATE 
  AND UPD.REPORT_DATE <= IND.END_DATE
  AND UPD.COUNTERPARTY_ID = IND.ENTITY_ID
  AND UPD.IDSTY_CLS_ID IS NULL
  AND UPD.LOAN_TYPE NOT IN ('√¿–¿Õ“»ﬂ', '¿  –≈ƒ»“»¬')
  AND IND.AGREEMENT_ID = UPD.LOAN_FCLY_ID
  AND UPD.MICRO_TRANCHE_IND IS NULL;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.IDSTY_CLS_ID = IND.INDUSTRY_ID
FROM TMP_CNTRIND IND
WHERE IND.ENTITY_ASN_ROLE_CD = '¡≈Õ≈‘»÷»¿–_”œ–Œ“◊'
  AND UPD.REPORT_DATE >= IND.BEGIN_DATE 
  AND UPD.REPORT_DATE <= IND.END_DATE
  AND UPD.COUNTERPARTY_ID = IND.ENTITY_ID
  AND UPD.IDSTY_CLS_ID IS NULL
  AND UPD.LOAN_TYPE NOT IN ('√¿–¿Õ“»ﬂ', '¿  –≈ƒ»“»¬')
  AND IND.AGREEMENT_ID = UPD.LOAN_FCLY_ID
  AND UPD.MICRO_TRANCHE_IND IS NULL;
  
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.IDSTY_CLS_ID = IND.INDUSTRY_ID
FROM TMP_CNTRIND IND
WHERE IND.ENTITY_ASN_ROLE_CD IN( ' ŒÕ“–¿√≈Õ“','œ–»Õ÷»œ¿À')
  AND UPD.REPORT_DATE >= IND.BEGIN_DATE 
  AND UPD.REPORT_DATE <= IND.END_DATE
  AND UPD.COUNTERPARTY_ID = IND.ENTITY_ID
  AND UPD.IDSTY_CLS_ID IS NULL
  AND IND.AGREEMENT_ID = UPD.LOAN_FCLY_ID
  AND UPD.MICRO_TRANCHE_IND IS NULL;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.IDSTY_CLS_ID = IND.INDUSTRY_ID
FROM TMP_CNTRIND IND
WHERE IND.ENTITY_ASN_ROLE_CD = 'œ–» ¿«Œƒ¿“≈À‹'
  AND UPD.REPORT_DATE >= IND.BEGIN_DATE 
  AND UPD.REPORT_DATE <= IND.END_DATE
  AND UPD.COUNTERPARTY_ID = IND.ENTITY_ID
  AND UPD.IDSTY_CLS_ID IS NULL
  AND IND.AGREEMENT_ID = UPD.LOAN_FCLY_ID
  AND UPD.MICRO_TRANCHE_IND IS NULL;
COMMIT;  


UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;


SET @CNT3 = (SELECT COUNT(*) FROM DAK.V_LOAN_CLASSIFIER  );

IF (@CNT3 > 0 ) THEN

 BEGIN
 
 INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
 SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE MANAGEMENT_PORTFOLIO_FLAG',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
 ;
COMMIT
 ;

     SELECT A.AGREEMENT_ID AS LOAN_FCLY_ID,
           CASE 
            WHEN A_A.AGREEMENT_2_ID IS NULL 
              THEN 0 
              ELSE 1 
           END TRANCHE_IND,
           A.PRODUCT_CD AS FO_CODE_5NT INTO #TMP_LOAN_FACILITY
    FROM CORE.D_AGREEMENT A
    JOIN CORE.D_CURRENCY AS C ON A.CURRENCY_ID= C.CURRENCY_ID 
      AND C.T_RAW_STATUS NOT IN ('X','W','D')
    LEFT JOIN CORE.F_AGMT_ASN A_A ON A.AGREEMENT_ID = A_A.AGREEMENT_2_ID AND A_A.AGMT_1_ROLE_CD =  'MAIN_INSTRUMENT' AND A_A.AGMT_2_ROLE_CD = 'TRANCHE_INSTRUMENT'
      AND A_A.T_RAW_STATUS NOT IN ('X','W','D')
    WHERE A.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')   
    AND A.T_RAW_STATUS NOT IN ('X','W','D')
    AND (A.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (A.OWNER_SRS_CD  = '—¿ƒ Œ' AND A.PRDCT_KIND_CD =' –≈ƒ»“'))
    AND  A.PRODUCT_CD NOT IN ('CSA_¡“–','CSA_¡',' –≈ƒ√ ','ÃÕŒ','œŒÀ√¿–¿Õ','‘_ –≈ƒ√ ','ƒ≈œŒ«»“€','Ã¡ _–”¡','Ã¡ ƒ_–_À√','Ã¡ _‘»À','Ã¡ _‘_ÃÕŒ','Ã¡ _¬¿À','¿” ÷»ŒÕ')
     AND A.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
    ;
    
    UPDATE TMP_F_LOAN_PORTFOLIO P 
    SET P.MANAGEMENT_PORTFOLIO_FLAG = 1
    FROM DAK.V_LOAN_CLASSIFIER  
    RIGHT OUTER JOIN TMP_F_LOAN_PORTFOLIO  P ON (DAK.V_LOAN_CLASSIFIER.LOAN_CLASSIFIER_ID=P.LOAN_CLASSIFIER_ID)
    INNER JOIN #TMP_LOAN_FACILITY TMP ON (TMP.LOAN_FCLY_ID=P.LOAN_FCLY_ID)
    WHERE ( 
            ( P.LOAN_TYPE ) IN (' –≈ƒ»“','√¿–¿Õ“»ﬂ','¿  –≈ƒ»“»¬','ƒŒ√Œ¬Œ–_¡¿Õ ')
            AND ISNULL(( TMP.FO_CODE_5NT ), '') NOT IN ('¿” ÷»ŒÕ', 'Ã¡ _¬¿À','Ã¡ _–”¡','–≈≈—“–“–≈¡')
            AND ISNULL(( DAK.V_LOAN_CLASSIFIER.C0038 ), '') IN (' –≈ƒ»“ 5', ' –≈ƒ»“ 2', ' –≈ƒ»“ 0','')
            AND ISNULL(( DAK.V_LOAN_CLASSIFIER.C0037 ), '') <> '—¿À‹ƒ»–”Ã¿ﬂ'
          )
     AND P.REPORT_DATE >= @PDATESTART;
     ;
    COMMIT;  
    
 UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
 SET END_DATETIME = NOW()
 WHERE RUN_ID = V_LOG_ID
 AND END_DATETIME IS NULL
 ;
COMMIT
;
 END;
ENDIF;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE TRANSFERT_RATE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;


UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.TRANSFERT_RATE = TMP.TRANSFERT_RATE
FROM ( SELECT T.LOAN_FCLY_ID,
              T.REPORT_DATE,
              ROUND(BR.RATE_VALUE + BR.K * (DATEDIFF(DD,/*T.APPEAR_DATE*/AGR.OPEN_DT,T.MATURITY_DATE) - BR.PERIOD_DD_FROM + 1),2) AS TRANSFERT_RATE
        FROM TMP_F_LOAN_PORTFOLIO T
        JOIN CORE.V_D_AGREEMENT AGR ON T.LOAN_FCLY_ID = AGR.AGREEMENT_ID
         AND AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')   
         AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'))
         AND AGR.T_RAW_STATUS  NOT IN ('X','W','D')
        JOIN CORE.V_F_BASE_RATE BR ON BR.RATE_CD = 'TRANSFER' AND BR.RATE_DT = /*T.APPEAR_DATE*/AGR.OPEN_DT AND BR.CURRENCY_ID = T.ISO_CRCY_ID  
          AND DATEDIFF(DD,T.APPEAR_DATE,T.MATURITY_DATE) BETWEEN BR.PERIOD_DD_FROM AND BR.PERIOD_DD_TO
        WHERE AGR.PRODUCT_CD NOT IN ('CSA_¡“–','CSA_¡',' –≈ƒ√ ','ÃÕŒ','œŒÀ√¿–¿Õ','‘_ –≈ƒ√ ','ƒ≈œŒ«»“€','Ã¡ _–”¡','Ã¡ ƒ_–_À√','Ã¡ _‘»À','Ã¡ _‘_ÃÕŒ','Ã¡ _¬¿À')
         AND T.MICRO_TRANCHE_IND IS NULL
          AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
          
        
      ) TMP
WHERE UPD.REPORT_DATE = TMP.REPORT_DATE
  AND UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
  AND UPD.MICRO_TRANCHE_IND IS NULL;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT/UPDATE INTEREST_RATE,SUBSIDY_RATE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
INSERT INTO TMP_INTEREST_RATE
SELECT  AGR.AGREEMENT_ID AS LOAN_FCLY_ID,
        R.BEGIN_DATE,
        COALESCE(LEAD (R.BEGIN_DATE,1,'2050-01-01') OVER(PARTITION BY AGR.AGREEMENT_ID, R.RATE_TYPE_ID ORDER BY R.BEGIN_DATE) - 1, AGR.FACT_CLOSE_DT) AS END_DATE,
        R.RATE,
        R.FLOAT_BASE
FROM CORE.D_AGREEMENT AGR
JOIN CORE.F_AGMT_RATE R ON  R.AGREEMENT_ID = AGR.AGREEMENT_ID AND R.RATE_TYPE_ID  IN (40,7,18,57,24,12,69,116)
 AND R.T_RAW_STATUS NOT IN ('X','W','D')
WHERE ( (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ' ) 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'))
 AND AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
 ;
 
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.INTEREST_RATE = TMP.RATE
FROM TMP_INTEREST_RATE TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
AND UPD.REPORT_DATE <= TMP.END_DATE
;


-- Œ√ƒ¿ Õ≈ —œ¿—À¿ ÀŒ√» ¿ ¬ CORE:

SELECT  AGR.AGREEMENT_ID AS LOAN_FCLY_ID,
        R.BEGIN_DATE, 
        COALESCE(LEAD (R.BEGIN_DATE) OVER(PARTITION BY AGR.AGREEMENT_ID ORDER BY R.BEGIN_DATE), AGR.FACT_CLOSE_DT) AS END_DATE,
        R.RATE AS SUBSIDY_RATE
        INTO #TMP_SUBSIDY_RATE
FROM CORE.D_AGREEMENT AGR
JOIN CORE.F_AGMT_RATE R ON  R.AGREEMENT_ID = AGR.AGREEMENT_ID AND R.RATE_TYPE_ID = 111
 AND R.T_RAW_STATUS NOT IN ('X','W','D')
WHERE ((AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ') 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'))
 AND AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
 ;
 
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.SUBSIDY_RATE = TMP.SUBSIDY_RATE
FROM #TMP_SUBSIDY_RATE TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID 
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE 
 AND UPD.REPORT_DATE <= TMP.END_DATE
 ;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT/UPDATE MANAGEMENT_RATE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

/*
”œ–¿¬À≈Õ◊≈— ¿ﬂ —“¿¬ ¿
≈—À» ŒÕ¿ ≈—“‹ ¬ ﬂ¬ÕŒÃ ¬»ƒ≈ œŒ ƒŒ√Œ¬Œ–”, Õ”∆ÕŒ ¡–¿“‹ ≈≈. 
≈—À» Õ≈“, “Œ –¿——◊»“€¬¿“‹  ¿  —“¿¬ ” —”¡—»ƒ»–Œ¬¿Õ»ﬂ + œ–Œ÷≈Õ“Õ¿ﬂ —“¿¬ ¿
*/
--1     
 SELECT  AGR.AGREEMENT_ID AS LOAN_FCLY_ID,
        R.BEGIN_DATE, 
        COALESCE(LEAD (R.BEGIN_DATE,1,'2050-01-01') OVER(PARTITION BY AGR.AGREEMENT_ID ORDER BY R.BEGIN_DATE)-1, AGR.FACT_CLOSE_DT) AS END_DATE,
        R.RATE AS MANAGEMENT_RATE
        INTO #TMP_MANAGEMENT_RATE
FROM CORE.D_AGREEMENT AGR
JOIN CORE.F_AGMT_RATE R ON  R.AGREEMENT_ID = AGR.AGREEMENT_ID AND R.RATE_TYPE_KIND_CD = '”œ–¿¬À≈Õ◊≈— ¿ﬂ' 
 AND R.T_SRS_ID  <> 300 --Œ“—≈ ¿≈Ã —¿ƒ Œ œŒ ¿Õ¿ÀŒ√»» ¬ DAK.LOAN_MAN_RATE_DATE
 AND R.T_RAW_STATUS NOT IN ('X','W','D')
WHERE ((AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ') 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'))
 AND AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
 ;       
 

--≈—À» ≈—“‹ «Õ¿◊≈Õ»≈ ¬ œ≈–≈Ã≈ÕÕŒ… ´—”¡—»ƒ»ﬂ_—ÃŒ—«ª, “Œ œ≈–≈Ã≈ÕÕ¿ﬂ ´”œ–¿¬À≈Õ◊≈— ¿ﬂ % —“¿¬ ¿ª –¿¬Õ¿ œ≈–≈Ã≈ÕÕ¿ﬂ ´œ–Œ÷≈Õ“Õ¿ﬂ —“¿¬ ¿ œŒ ƒŒ√Œ¬Œ–”ª + œ≈–≈Ã≈ÕÕ¿ﬂ ´—”¡—»ƒ»ﬂ_—ÃŒ—«ª,
SELECT DISTINCT L_C.LOAN_FCLY_ID,
                TMP.REPORT_DATE,
                ISNULL(C_S_R.PERCENT_RATE, P_S_R.PERCENT_RATE) AS MANAGEMENT_RATE 
                INTO #TMP_SUBSIDY_SMOSZ
FROM DM_CREDPRFL.V_LOAN_FACILITY  L_C 
JOIN TMP_F_LOAN_PORTFOLIO TMP ON L_C.LOAN_FCLY_ID=TMP.LOAN_FCLY_ID
LEFT JOIN DM_CREDPRFL.V_PARENT_LOAN_SUBSIDY_RATE P_S_R ON P_S_R.PARENT_INSTRUMENT_CORE_ID=TMP.AGREEMENT_ID 
 AND P_S_R.START_DATE <= TMP.REPORT_DATE 
 AND P_S_R.FINAL_DATE>=  TMP.REPORT_DATE
LEFT JOIN DM_CREDPRFL.V_CHILD_LOAN_SUBSIDY_RATE C_S_R ON C_S_R.CHILD_INSTRUMENT_CORE_ID=TMP.LOAN_FCLY_ID 
 AND C_S_R.START_DATE <= TMP.REPORT_DATE 
 AND C_S_R.FINAL_DATE >= TMP.REPORT_DATE
WHERE ISNULL(ISNULL(C_S_R.PERCENT_RATE, P_S_R.PERCENT_RATE) ,0) <>  0
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MANAGEMENT_RATE = ISNULL(UPD.INTEREST_RATE,0)+ ISNULL(R.MANAGEMENT_RATE,0)
FROM #TMP_SUBSIDY_SMOSZ R 
WHERE R.LOAN_FCLY_ID = UPD.LOAN_FCLY_ID
 AND UPD.REPORT_DATE = R.REPORT_DATE
 AND ISNULL(UPD.MANAGEMENT_RATE,0) = 0
 AND ISNULL(R.MANAGEMENT_RATE,0)> 0
;
--2 ≈—À» ≈—“‹ «Õ¿◊≈Õ»≈ ¬ œ≈–≈Ã≈ÕÕŒ… ´—“¿¬ ¿ —”¡—»ƒ»»ª, “Œ œ≈–≈Ã≈ÕÕ¿ﬂ ´”œ–¿¬À≈Õ◊≈— ¿ﬂ % —“¿¬ ¿ª –¿¬Õ¿ œ≈–≈Ã≈ÕÕ¿ﬂ ´œ–Œ÷≈Õ“Õ¿ﬂ —“¿¬ ¿ œŒ ƒŒ√Œ¬Œ–”ª + œ≈–≈Ã≈ÕÕ¿ﬂ ´—“¿¬ ¿ —”¡—»ƒ»»ª
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MANAGEMENT_RATE = ISNULL(UPD.INTEREST_RATE,0) + ISNULL(UPD.SUBSIDY_RATE,0)
WHERE ISNULL(UPD.INTEREST_RATE,0) + ISNULL(UPD.SUBSIDY_RATE,0) <> 0
  AND ISNULL(MANAGEMENT_RATE,0) = 0
  AND ISNULL(UPD.SUBSIDY_RATE,0)> 0 
  
  ;
 
--3 ≈—À» œŒ “»œ” —“¿¬ » —“¿¬ ¿”œ–¿¬À ≈—“‹ «Õ¿◊≈Õ»≈ ¬ »—“Œ◊Õ» ≈ (ƒ»¿—Œ‘“ 5NT), “Œ œ≈–≈Ã≈ÕÕ¿ﬂ ´”œ–¿¬À≈Õ◊≈— ¿ﬂ % —“¿¬ ¿ª –¿¬Õ¿ «Õ¿◊≈Õ»ﬁ —“¿¬ ¿”œ–¿¬À
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MANAGEMENT_RATE = R.MANAGEMENT_RATE
FROM #TMP_MANAGEMENT_RATE R 
WHERE R.LOAN_FCLY_ID = UPD.LOAN_FCLY_ID 
 AND UPD.REPORT_DATE >= R.BEGIN_DATE 
 AND UPD.REPORT_DATE<= R.END_DATE
 AND ISNULL(UPD.MANAGEMENT_RATE,0) = 0
 ;
 
-- 4 ¬ Œ—“¿À‹Õ€’ —À”◊¿ﬂ’ œ≈–≈Ã≈ÕÕ¿ﬂ ´”œ–¿¬À≈Õ◊≈— ¿ﬂ % —“¿¬ ¿ª –¿¬Õ¿ œ≈–≈Ã≈ÕÕŒ… ´œ–Œ÷≈Õ“Õ¿ﬂ —“¿¬ ¿ œŒ ƒŒ√Œ¬Œ–”ª
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MANAGEMENT_RATE = UPD.INTEREST_RATE
WHERE ISNULL(UPD.INTEREST_RATE,0) <> 0
 AND ISNULL(UPD.MANAGEMENT_RATE,0) = 0
 
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
; 

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'›¡√',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

SELECT CORE.REPORT_DATE, 
       L.NUMBER,
       L.LOAN_FCLY_ID,
       DATEDIFF(DD,L.ISSUE_DATE,L.PLANNED_FINAL_DATE)+1 AS TERM,
       CAST(NULL AS NUMERIC(28,6)) AS COMISS,
       CAST(NULL AS NUMERIC(28,6)) AS ISSUE
 INTO #TMP_S
FROM DM_CB.F_LOAN_PORTFOLIO CORE
JOIN DM_CREDPRFL.V_LOAN_FACILITY L  ON CORE.LOAN_FCLY_ID = L.LOAN_FCLY_ID
JOIN CORE.V_D_AGREEMENT AGR ON L.LOAN_FCLY_ID = AGR.AGREEMENT_ID AND AGR.OWNER_SRS_CD = 'RKOF1' AND AGR.AGREEMENT_TYPE_CD = '√¿–¿Õ“»ﬂ'
JOIN CORE.V_D_PRODUCT P ON AGR.PRODUCT_ID = P.PRODUCT_ID AND P.PRDCT_SUBTYPE_NM <> '√¿–¿Õ“»»  ŒÃÃ≈–◊≈— »≈'
WHERE 1 = 1--FO_CODE_5NT='GUAR_NCVR'
AND CORE.MICRO_TRANCHE_IND IS NULL
;
COMMIT
;
--—Œ¡»–¿≈Ã  ŒÃ»——»»:
SELECT TMP.LOAN_FCLY_ID,
       TMP.REPORT_DATE,
       ABS(SUM(LC.AMOUNT)) AS COMISS INTO #TMP_COMISS
FROM  #TMP_S TMP 
JOIN DM_CREDPRFL.V_LOAN_COMMIS_TRANS LC ON LC.INSTRUMENT_CORE_ID = TMP.LOAN_FCLY_ID AND  LC.TRANSACTION_DATE<=TMP.REPORT_DATE      
WHERE 1 = 1
GROUP BY  TMP.LOAN_FCLY_ID,TMP.REPORT_DATE
;
COMMIT
;
--›Ã»——»ﬂ:
SELECT TMP.LOAN_FCLY_ID,
       TMP.REPORT_DATE,
       SUM(LT.AMOUNT) AS ISSUE INTO #TMP_ISSUE
FROM  #TMP_S TMP 
JOIN DM_CREDPRFL.V_LOAN_ACC_TRANSACTION LT  ON LT.INSTRUMENT_CORE_ID = TMP.LOAN_FCLY_ID AND  LT.TRANSACTION_DATE<=TMP.REPORT_DATE    
WHERE LT.TRAN_NAME IN ('¬Õ≈¡¿À¿Õ—Œ¬€… ”◊≈“ √¿–¿Õ“»»','—œ»—¿Õ»≈ √¿–¿Õ“»» — ¬Õ≈¡¿À¿Õ—Œ¬Œ√Œ ”◊≈“¿','¬€ƒ¿◊¿ √¿–¿Õ“»»') 
AND LEFT(LT.ACCOUNT_NUMBER,3)='913' 
GROUP BY  TMP.LOAN_FCLY_ID,TMP.REPORT_DATE
;
COMMIT
;

UPDATE #TMP_S UPD
SET UPD.COMISS = TMP.COMISS
FROM #TMP_COMISS TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE = TMP.REPORT_DATE ;
COMMIT;

UPDATE #TMP_S UPD
SET UPD.ISSUE = TMP.ISSUE
FROM #TMP_ISSUE TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE = TMP.REPORT_DATE 
 ;
COMMIT
;

SELECT  REPORT_DATE,
        NUMBER,
        LOAN_FCLY_ID,
        TERM,COMISS,ISSUE,
        ROUND(100*(COMISS*365)/NULLIF((ISSUE*TERM),0),3) AS RATE,
        CASE 
        WHEN ISSUE <  30000000  THEN 0.43 
        WHEN ISSUE >= 30000000  AND ISSUE <= 50000000 THEN 0.4 
        WHEN ISSUE >  50000000  AND ISSUE <= 100000000 THEN 0.37
        WHEN ISSUE >  100000000 THEN 0.35
        END AS AGENT_RATE,
        AGENT_RATE * COMISS AS AGENT
    INTO #TMP_COM_RATE
FROM #TMP_S 
WHERE ISSUE IS NOT NULL
ORDER BY 3,1
;
COMMIT
;


UPDATE TMP_F_LOAN_PORTFOLIO P
SET P.INTEREST_RATE      = 0, 
    P.MANAGEMENT_RATE    = 0,--∆≈À¿ÕŒ¬ 16.03.22
    P.AGENT_COMMISSION_RATE    = 0,
    P.TOT_LOAN_VALUE     = 0, 
    P.REF_TOT_LOAN_VALUE = 0
WHERE LOAN_FCLY_ID IN (SELECT LOAN_FCLY_ID FROM #TMP_COM_RATE)
;
COMMIT
;

UPDATE TMP_F_LOAN_PORTFOLIO P 
SET P.INTEREST_RATE      = R.RATE, 
    P.MANAGEMENT_RATE    = R.RATE, --∆≈À¿ÕŒ¬ 16.03.22
    P.AGENT_COMMISSION_RATE    = R.AGENT_RATE*100, 
    P.TOT_LOAN_VALUE     = R.AGENT, 
    P.REF_TOT_LOAN_VALUE = R.COMISS
FROM #TMP_COM_RATE R 
WHERE P.LOAN_FCLY_ID = R.LOAN_FCLY_ID 
 AND P.REPORT_DATE >= R.REPORT_DATE
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE UCLOANRATE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
/*
–¿Õ‹ÿ≈ «¿√–”∆¿À—ﬂ › —≈À‹ —Œ —“¿¬ ¿Ã», œŒ“ŒÃ √–”«»“‹ ≈√Œ œ≈–≈—“¿À», ŒƒÕ¿ Œ »—“Œ–»ﬂ Œ—“¿À¿—‹ 
» “¿¡À»÷¿ — «¿√–”∆≈ÕÕ€Ã» ƒ¿ÕÕ€Ã»"

*/
 /*”œ–¿¬À≈Õ◊≈— ¿ﬂ —“¿¬ ¿*/
UPDATE TMP_F_LOAN_PORTFOLIO  P
SET UCLOANRATE = ISNULL(UR.RATE, P.MANAGEMENT_RATE)
FROM DAK.TMP_UCLOANRATE UR
JOIN STAGE.INSTRUMENT I ON UR.LOAN_FCLY_ID = I.INSTRUMENT_IWS_ID AND I.SOURCE_SYSTEM_ID = 9
WHERE I.INSTRUMENT_CORE_ID = P.LOAN_FCLY_ID
  AND P.REPORT_DATE >= UR.START_DATE
  AND P.REPORT_DATE <= UR.FINAL_DATE
 ;
   

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.UCLOANRATE = UPD.MANAGEMENT_RATE
WHERE  1 = 1
AND ISNULL(UPD.UCLOANRATE,0) = 0;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT/UPDATE BASE_RATE,BASIS_RATE,BASIS_RATE_MARGIN',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
SELECT  AGR.AGREEMENT_ID AS LOAN_FCLY_ID,
        R.BEGIN_DATE, 
        R.END_DATE, /*COALESCE(LEAD (R.BEGIN_DATE) OVER(PARTITION BY AGR.AGREEMENT_ID ORDER BY R.BEGIN_DATE), AGR.FACT_CLOSE_DT) AS END_DATE*/
        COALESCE(LEAD (R.BEGIN_DATE,1,'2050-01-01') OVER(PARTITION BY AGR.AGREEMENT_ID, R.RATE_TYPE_ID ORDER BY R.BEGIN_DATE) - 1, AGR.FACT_CLOSE_DT) AS END_DATE2,
        R.FLOAT_BASE,
        R.MARGIN,
        CASE WHEN R.BASE_RATE_ORIG_CD = 'œ–Œ÷≈Õ“€'
         THEN NULL
         WHEN R.T_SRS_ID = 201 AND R.FLOAT_RATE_NM = ' Àﬁ◊≈¬¿ﬂ —“¿¬ ¿ ¡¿Õ ¿ –Œ——»»'
          THEN ' À—“¿¬ ¿÷¡'
         WHEN AGR.OWNER_SRS_CD  = 'RKOF1' AND R.BASE_RATE_ORIG_CD = 'Õ≈”◊“≈Õ_œ–Œ÷≈Õ“€'
          THEN R.AGMT_RATE_NM 
        ELSE R.BASE_RATE_ORIG_CD END AS BASE_RATE_ORIG_CD
          INTO #TMP_BASE_RATE
FROM CORE.V_D_AGREEMENT AGR
JOIN CORE.V_F_AGMT_RATE R ON  R.AGREEMENT_ID = AGR.AGREEMENT_ID AND RATE_TYPE_KIND_CD = '%% œŒ Œ—Õ. —◊≈“”'
WHERE ((AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ') 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'))
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
 ;
 
 
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.BASIS_RATE = TMP.FLOAT_BASE
FROM #TMP_BASE_RATE TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
AND UPD.REPORT_DATE <= TMP.END_DATE2;


UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.BASE_RATE = TMP.BASE_RATE_ORIG_CD,
    UPD.BASIS_RATE_MARGIN = TMP.MARGIN
FROM #TMP_BASE_RATE TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
AND UPD.REPORT_DATE <= TMP.END_DATE2
AND ISNULL(TMP.BASE_RATE_ORIG_CD,'') <> 'œ–Œ÷≈Õ“€'
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,' –≈ƒ»“Õ€… »Õ—œ≈ “Œ–',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
/*
01.02.2021 ƒŒ¡¿¬»À —“–Œ√Œ «¿∆»Ã ” Õ¿ —¿ƒ Œ »«-«¿ – Œ-‘1
 */
SELECT AGR.AGREEMENT_ID,
       CASE WHEN E.FULL_NAME = 'N/A'
        THEN NULL
        ELSE  E.FULL_NAME END AS FULL_NAME,
       E.ENTITY_ID,
       AGMT_CNT.BEGIN_DATE,
       ISNULL(LEAD(AGMT_CNT.BEGIN_DATE) OVER (PARTITION BY AGMT_CNT.AGREEMENT_ID,AGMT_CNT.ENTITY_ASN_ROLE_CD ORDER BY AGMT_CNT.BEGIN_DATE) - 1,'2050-01-01') AS END_DATE
       --AGMT_CNT.END_DATE
 INTO #TMP_OFFICER
FROM CORE.V_D_AGREEMENT AGR 
JOIN CORE.V_F_AGMT_ENTITY_ASN AGMT_CNT ON AGR.AGREEMENT_ID = AGMT_CNT.AGREEMENT_ID AND AGMT_CNT.ENTITY_ASN_ROLE_CD =' –≈ƒ»“Õ€… »Õ—œ≈ “Œ–' /*AND AGMT_CNT.ENTITY_ID >0 */
    AND AGMT_CNT.T_RAW_STATUS NOT IN ('X','W','D')
    AND AGMT_CNT.T_SRS_ID = 300
JOIN CORE.V_D_ENTITY E ON  AGMT_CNT.ENTITY_ID = E.ENTITY_ID
WHERE AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND AGR.FACT_CLOSE_DT  >= @PDATESTART 
 AND AGR.OPEN_DT/*AGR.VALUE_DT */      <= @PDATEEND  
 AND ((AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ') 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'))
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
 
 ;
            
-- –≈ƒ»“Õ€… »Õ—œ≈ “Œ– œŒ √ŒÀŒ¬≈
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.OFFICER = TMP.FULL_NAME,
    UPD.OFFICERID = TMP.ENTITY_ID
FROM #TMP_OFFICER TMP
WHERE UPD.AGREEMENT_ID = TMP.AGREEMENT_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND UPD.MICRO_TRANCHE_IND IS NULL
 ;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.OFFICER = TMP.FULL_NAME,
    UPD.OFFICERID = TMP.ENTITY_ID
FROM #TMP_OFFICER TMP
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
;

--ƒŒ¡¿¬À≈ÕŒ œŒ œ»—‹Ã” Œ“ —“¿—≈Õ ¿  »–»ÀÀ¿  17.05.2021 15:43
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.COUNTERPARTY_ID = 54740063
WHERE UPD.AGREEMENT_ID = 182882747
 AND REPORT_DATE >=@PDATESTART 
 AND REPORT_DATE <= @PDATEEND;
 
 --ƒŒ¡¿¬À≈ÕŒ œŒ —ŒŒ¡Ÿ≈Õ»ﬁ Œ“ ∆≈À¿ÕŒ¬¿ ¬. 15.03.2022 
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.COUNTERPARTY_ID = 5349400
WHERE UPD.AGREEMENT_ID = 151729258
 AND REPORT_DATE >=@PDATESTART 
 AND REPORT_DATE <= @PDATEEND;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT/UPDATE DEPARTMENT_OFFICER/DATE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

SELECT AE.AGREEMENT_ID,AE.ENTITY_ID,AE.BEGIN_DATE,AE.END_DATE,ISNULL(DS.DEPT_SHORT_NAME,DS.DEPT_HIER_PATH) AS DEPT_SHORT_NAME
INTO #TMP_DEPARTMENT_OFFICER
FROM  CORE.V_F_AGMT_ENTITY_ASN AE 
JOIN CORE.V_F_DEPT_STRUCTURE DS ON  AE.ENTITY_ID = DS.DEPT_ENTITY_ID
WHERE AE.ENTITY_ASN_ROLE_CD = 'œŒƒ–¿«ƒ≈À≈Õ»≈  –≈ƒ»“ÕŒ√Œ Ã≈Õ≈ƒ∆≈–¿'
;
    
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.DEPARTMENT_OFFICER = TMP.DEPT_SHORT_NAME,
    UPD.DEPARTMENT_OFFICER_DATE = TMP.BEGIN_DATE
FROM #TMP_DEPARTMENT_OFFICER TMP  
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID
 AND UPD.REPORT_DATE>= TMP.BEGIN_DATE 
 AND UPD.REPORT_DATE <= TMP.END_DATE 
;
COMMIT;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE IDSTY_GRP_CSL_ID ',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

--Õ”∆Õ€ “¿¡À»÷€ CONTRACTOR_GROUP » GROUP_CONTRACTOR

UPDATE TMP_F_LOAN_PORTFOLIO TMP
SET TMP.IDSTY_GRP_CSL_ID = IND.INDUSTRY_IWS_ID
FROM CORE.V_D_ENTITY E
JOIN STAGE.CONTRACTOR C ON C.CONTRACTOR_CORE_ID = E.ENTITY_ID 
 AND C.SOURCE_SYSTEM_ID = 300
JOIN STAGE.GROUP_CONTRACTOR GC ON GC.CONTRACTOR_ID = C.CONTRACTOR_ID 
 AND GC.SOURCE_SYSTEM_ID = C.SOURCE_SYSTEM_ID 
 AND GC.CHANGED < 3
JOIN STAGE.CONTRACTOR_GROUP CG ON GC.CONTRACTOR_GROUP_ID = CG.CONTRACTOR_GROUP_ID 
 AND CG.SOURCE_SYSTEM_ID = GC.SOURCE_SYSTEM_ID 
 AND CG.CHANGED < 3
JOIN STAGE.CONTRACTOR_INDUSTRY CI ON CI.CONTRACTOR_ID = CG.CONTRACTOR_ID 
 AND CI.SOURCE_SYSTEM_ID = CG.SOURCE_SYSTEM_ID 
 AND CI.CHANGED < 3
JOIN STAGE.INDUSTRY IND ON CI.INDUSTRY_ID = IND.INDUSTRY_ID 
 AND IND.SOURCE_SYSTEM_ID = CI.SOURCE_SYSTEM_ID --AND IND.CHANGED < 3
WHERE E.ENTITY_ID= TMP.COUNTERPARTY_ID
  AND TMP.REPORT_DATE >= '20200101'
  AND CG.SOURCE_SYSTEM_ID = 300
  AND TMP.MICRO_TRANCHE_IND IS NULL
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT/UPDATE INITIATOR_ID',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;  
 
 SELECT AGR.AGREEMENT_ID,
        AGMT_CNT.ENTITY_ID,
        AGMT_CNT.BEGIN_DATE,
        AGMT_CNT.END_DATE
 INTO #TMP_INITIATOR
FROM CORE.V_D_AGREEMENT AGR 
JOIN CORE.V_F_AGMT_ENTITY_ASN AGMT_CNT ON AGR.AGREEMENT_ID = AGMT_CNT.AGREEMENT_ID AND AGMT_CNT.ENTITY_ASN_ROLE_CD ='»Õ»÷»¿“Œ– —ƒ≈À »' AND AGMT_CNT.ENTITY_ID >0 AND AGMT_CNT.T_RAW_STATUS NOT IN ('X','W','D')
WHERE AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND AGR.FACT_CLOSE_DT  >= @PDATESTART 
 AND AGR.OPEN_DT <= @PDATEEND  
 AND ((AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ') 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'))
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
 ;
            
/*‘»À»¿À-»Õ»÷»¿“Œ– œŒ “–¿Õÿ”*/
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET  UPD.INITIATOR_ID = ISNULL(TMP.ENTITY_ID,0)
FROM #TMP_INITIATOR TMP
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND UPD.MICRO_TRANCHE_IND IS NULL;
 
/*‘»À»¿À-»Õ»÷»¿“Œ– œŒ √ŒÀŒ¬≈*/
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET  UPD.INITIATOR_ID = ISNULL(TMP.ENTITY_ID,0)
FROM #TMP_INITIATOR TMP
WHERE UPD.AGREEMENT_ID = TMP.AGREEMENT_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE    
 AND ISNULL(UPD.INITIATOR_ID,0) = 0
 AND UPD.MICRO_TRANCHE_IND IS NULL;
COMMIT;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--»—“Œ◊Õ»  P_GET_GROUP_LOAN_LIMITS

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'–≈«≈–¬€',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
UPDATE TMP_F_LOAN_PORTFOLIO P
SET P.RESERVE_LIM_BALANCE       = ISNULL(ABS(G.TOTAL_GK),0),
    P.RESEVE_DEF_INT_BALANCE    = ISNULL(ABS(G.TOTAL_GK_REF),0)
FROM TMP_F_LOAN_PORTFOLIO P 
JOIN DM_CB.LOAN_GROUP_LIMIT_VAL G ON P.AGREEMENT_ID=G.AGREEMENT_ID 
 AND P.REPORT_DATE=G.REPORT_DATE 
 AND P.ISO_CRCY_ID=G.ISO_CRCY_ID
 AND G.REPORT_DATE >= @PDATESTART
WHERE P.MICRO_TRANCHE_IND IS NULL ;
COMMIT;
--
UPDATE TMP_F_LOAN_PORTFOLIO P
SET P.RESERVE_LIM_BALANCE = 0,
    P.RESEVE_DEF_INT_BALANCE = 0
WHERE EXISTS ( SELECT AGREEMENT_ID 
               FROM DM_CB.F_LOAN_PORTFOLIO 
               WHERE REPORT_DATE = P.REPORT_DATE 
                AND AGREEMENT_ID=P.AGREEMENT_ID
                AND P.ISO_CRCY_ID=ISO_CRCY_ID
                AND AGREEMENT_ID<>LOAN_FCLY_ID 
                AND MICRO_TRANCHE_IND IS NULL
                AND REPORT_DATE>=@PDATESTART
                AND (ISNULL(VALUE_REF,0)+ISNULL(DEFAULT_VALUE_REF,0)) <> 0)
 AND P.AGREEMENT_ID=P.LOAN_FCLY_ID 
 AND P.MICRO_TRANCHE_IND IS NULL;
COMMIT;

SELECT REPORT_DATE,
       AGREEMENT_ID,
       SUM(ISNULL(VALUE_REF,0)) AS VALUE_REF, 
       SUM(ISNULL(DEFAULT_VALUE_REF,0)) AS DEFAULT_VALUE_REF 
        INTO  #TMP_F_LOAN_RESERVE
FROM DM_CB.F_LOAN_PORTFOLIO 
WHERE MICRO_TRANCHE_IND IS NULL 
GROUP BY REPORT_DATE,AGREEMENT_ID;

UPDATE TMP_F_LOAN_PORTFOLIO P
SET P.RESERVE_LIM_BALANCE        = ABS(ISNULL(P.RESERVE_LIM_BALANCE*(ISNULL(P.VALUE_REF,0)+ISNULL(P.DEFAULT_VALUE_REF,0))/NULLIF((ISNULL(T.VALUE_REF,0)+ISNULL(T.DEFAULT_VALUE_REF,0)),0),0)),
    P.RESEVE_DEF_INT_BALANCE     = ABS(ISNULL(P.RESEVE_DEF_INT_BALANCE*(ISNULL(P.VALUE_REF,0)+ISNULL(P.DEFAULT_VALUE_REF,0))/NULLIF((ISNULL(T.VALUE_REF,0)+ISNULL(T.DEFAULT_VALUE_REF,0)),0),0))
FROM TMP_F_LOAN_PORTFOLIO P 
JOIN #TMP_F_LOAN_RESERVE T ON P.REPORT_DATE = T.REPORT_DATE 
 AND P.AGREEMENT_ID=T.AGREEMENT_ID 
 AND P.AGREEMENT_ID<>P.LOAN_FCLY_ID
WHERE P.MICRO_TRANCHE_IND IS NULL ;

UPDATE TMP_F_LOAN_PORTFOLIO P
SET P.RESERVE_LIM_BALANCE        = ABS(ISNULL(NULLIF(P.RESERVE_LIM_BALANCE,0),P.LIMIT_BALANCE)),
    P.RESEVE_DEF_INT_BALANCE     = ABS(ISNULL(NULLIF(P.RESEVE_DEF_INT_BALANCE,0),P.LIMIT_BALANCE_REF))
FROM TMP_F_LOAN_PORTFOLIO P 
WHERE P.MICRO_TRANCHE_IND IS NULL 
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'INSERT/UPDATE MSFO_LOAN_PERCENT',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

SELECT DISTINCT 
        I.INSTRUMENT_CORE_ID AS LOAN_FCLY_ID,
        IRG.ASSIGN_DATE AS BEGIN_DATE,
        COALESCE(LEAD(IRG.ASSIGN_DATE,1,'2050-01-01') OVER(PARTITION BY AGR.AGREEMENT_ID, IRG.ACCOUNT_ROLE_ID ORDER BY IRG.ASSIGN_DATE) - 1, AGR.FACT_CLOSE_DT) AS END_DATE,
        IRG.RESERVE_RATE,IRG.ACCOUNT_ROLE_ID
       INTO #TMP_MSFO_LOAN_PERCENT
FROM STAGE.INSTRUMENT I
JOIN CORE.V_D_AGREEMENT    AGR ON AGR.AGREEMENT_ID = I.INSTRUMENT_CORE_ID
JOIN STAGE.INSTRUMENT_RISK_GROUP AS IRG ON I.INSTRUMENT_ID = IRG.INSTRUMENT_ID
 AND IRG.CHANGED < 3 
JOIN STAGE.RISK_GROUP  RG ON RG.RISK_GROUP_ID = IRG.RISK_GROUP_ID
 AND RG.CHANGED < 3 
JOIN STAGE.RISK_GROUP_COLLAPSE  RGC ON RGC.RISK_GROUP_IWS_ID = RG.RISK_GROUP_IWS_ID
JOIN STAGE.RISK_TYPE_COLLAPSE  RTC ON RTC.RISK_TYPE_IWS_ID = RGC.RISK_TYPE_IWS_ID
LEFT JOIN STAGE.ACCOUNT_ROLE AR ON AR.ACCOUNT_ROLE_ID = IRG.ACCOUNT_ROLE_ID 
 AND AR.NAME <> '0'
 AND AR.CHANGED < 3 
WHERE I.SOURCE_SYSTEM_ID = 201
 AND I.CHANGED < 3
 AND RG.RISK_TYPE_ID = 353
 AND ( 
       ( AGR.PRDCT_KIND_CD IN (' –≈ƒ»“','√¿–¿Õ“»ﬂ') AND IRG.ACCOUNT_ROLE_ID IN (0,222643) )
     OR
       ( AGR.PRDCT_KIND_CD = '√¿–¿Õ“»ﬂ' AND IRG.ACCOUNT_ROLE_ID = 247471)
	 OR
	   ( AGR.PRDCT_KIND_CD = ' –≈ƒ»“' AND IRG.ACCOUNT_ROLE_ID = 257444)
     )
;
 
COMMIT;

--1.	–≈«≈–¬ Ã—‘Œ ——”ƒÕ€… (%) ñ »«Ã≈–≈Õ»≈
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MSFO_LOAN_PERCENT = TMP.RESERVE_RATE
FROM #TMP_MSFO_LOAN_PERCENT TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND UPD.MICRO_TRANCHE_IND IS NULL
 AND TMP.ACCOUNT_ROLE_ID = 222643
 ;
COMMIT;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MSFO_LOAN_PERCENT = TMP.RESERVE_RATE
FROM #TMP_MSFO_LOAN_PERCENT TMP
WHERE UPD.AGREEMENT_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND UPD.MICRO_TRANCHE_IND IS NULL
 AND UPD.MSFO_LOAN_PERCENT IS NULL
 AND TMP.ACCOUNT_ROLE_ID = 222643
 ;
COMMIT;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MSFO_LOAN_PERCENT = TMP.RESERVE_RATE
FROM #TMP_MSFO_LOAN_PERCENT TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND UPD.MICRO_TRANCHE_IND IS NULL
 AND UPD.MSFO_LOAN_PERCENT IS NULL
 AND TMP.ACCOUNT_ROLE_ID = 0
 ;
COMMIT;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MSFO_LOAN_PERCENT = TMP.RESERVE_RATE
FROM #TMP_MSFO_LOAN_PERCENT TMP
WHERE UPD.AGREEMENT_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND UPD.MICRO_TRANCHE_IND IS NULL
 AND UPD.MSFO_LOAN_PERCENT IS NULL
 AND TMP.ACCOUNT_ROLE_ID = 0
 ;
COMMIT;

--–≈«≈–¬ Ã—‘Œ œ–Œ—–Œ◊ ¿ % 
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MSFO_LOAN_PERCENT_OVERDUE = TMP.RESERVE_RATE
FROM #TMP_MSFO_LOAN_PERCENT TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND UPD.MICRO_TRANCHE_IND IS NULL
 AND TMP.ACCOUNT_ROLE_ID = 247471
 ;
COMMIT;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MSFO_LOAN_PERCENT_OVERDUE = TMP.RESERVE_RATE
FROM #TMP_MSFO_LOAN_PERCENT TMP
WHERE UPD.AGREEMENT_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND UPD.MICRO_TRANCHE_IND IS NULL
 AND UPD.MSFO_LOAN_PERCENT IS NULL
 AND TMP.ACCOUNT_ROLE_ID = 247471
 AND UPD.MSFO_LOAN_PERCENT_OVERDUE IS NULL
 ;
COMMIT;

--3.	–≈«≈–¬ Ã—‘Œ Õ≈»—œ. Œ—“-  (%) ñ »«Ã≈–≈Õ»≈
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MSFO_UNUSED_PERCENT = TMP.RESERVE_RATE 
FROM #TMP_MSFO_LOAN_PERCENT TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND UPD.MICRO_TRANCHE_IND IS NULL
 AND TMP.ACCOUNT_ROLE_ID = 257444
 ;
 
COMMIT;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MSFO_UNUSED_PERCENT = TMP.RESERVE_RATE 
FROM #TMP_MSFO_LOAN_PERCENT TMP
WHERE UPD.AGREEMENT_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND UPD.MICRO_TRANCHE_IND IS NULL
 AND UPD.MSFO_UNUSED_PERCENT IS NULL
 AND TMP.ACCOUNT_ROLE_ID = 257444
 ;
COMMIT;
--5.	–≈«≈–¬ Ã—‘Œ œ–Œ÷≈Õ“€ (RUR) - »«Ã≈–≈Õ»≈
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET UPD.MSFO_PERCENT_RUR = BAL.BALANCE_OUT_EQV
FROM TMP_BALANCE AS BAL
WHERE   UPD.LOAN_TYPE IN (' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')
    AND BAL.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
    AND BAL.REPORT_DATE = UPD.REPORT_DATE
    AND BAL.ACCT_BAL_BASE_TYPE = 'ASSET' 
    AND BAL.ACCT_BAL_BASE_CODE = 'INT'
    AND UPD.MICRO_TRANCHE_IND IS NULL;    
    
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE TRANCHE_MATURITY_DATE,TRANCHE_VALUE,TRANCHE_VALUE_REF,CLIMRWADEALID,CLIMRWAPORT',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;   

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.TRANCHE_MATURITY_DATE = TMP.MATURITY_DATE,
    UPD.TRANCHE_VALUE         = ISNULL(TMP.DEFAULT_VALUE,0) + ISNULL(TMP.VALUE,0),
    UPD.TRANCHE_VALUE_REF     = ISNULL(TMP.DEFAULT_VALUE_REF,0) + ISNULL(TMP.VALUE_REF,0) 
FROM TMP_F_LOAN_PORTFOLIO TMP
WHERE UPD.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
 AND UPD.REPORT_DATE = TMP.REPORT_DATE
 AND TMP.MICRO_TRANCHE_IND IS NULL
 AND UPD.MICRO_TRANCHE_IND = 1
 AND UPD.EXCEPTION_MICROTRANCHE_FLAG = 1
 ; 
 
COMMIT;   

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET CLIMRWADEALID = TMP.VALUE
FROM (
        SELECT ASN.AGREEMENT_ID, ASN.VALUE
        FROM CORE.V_F_AGMT_CLFR_ASN ASN
        JOIN CORE.V_D_CLASSIFIER CLS ON CLS.CLASSIFIER_ID = ASN.CLASSIFIER_ID 
         AND CLS.CLASSIFIER_CD = ('LIMRWADEALID')
        JOIN CORE.V_D_AGREEMENT AGR ON ASN.AGREEMENT_ID = AGR.AGREEMENT_ID 
         AND AGR.OWNER_SRS_CD = 'CUSTODY'
     ) TMP
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID
          
;

COMMIT;   

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET CLIMRWAPORT = TMP.VALUE
FROM (
        SELECT ASN.AGREEMENT_ID, ASN.VALUE
        FROM CORE.V_F_AGMT_CLFR_ASN ASN
        JOIN CORE.V_D_CLASSIFIER CLS ON CLS.CLASSIFIER_ID = ASN.CLASSIFIER_ID 
         AND ASN.CLASSIFIER_ID = 32123993--œ–»Œ–»“»«¿÷»ﬂ
        JOIN CORE.V_D_AGREEMENT AGR ON ASN.AGREEMENT_ID = AGR.AGREEMENT_ID 
         AND AGR.OWNER_SRS_CD = 'CUSTODY'
     ) TMP
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID   
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET CLIMRWAPORT = TMP.VALUE
FROM (
        SELECT ASN.AGREEMENT_ID, ASN.VALUE
        FROM CORE.V_F_AGMT_CLFR_ASN ASN
        JOIN CORE.V_D_CLASSIFIER CLS ON CLS.CLASSIFIER_ID = ASN.CLASSIFIER_ID 
         AND ASN.CLASSIFIER_ID = 32123993--œ–»Œ–»“»«¿÷»ﬂ
        JOIN CORE.V_D_AGREEMENT AGR ON ASN.AGREEMENT_ID = AGR.AGREEMENT_ID 
         AND AGR.OWNER_SRS_CD = 'CUSTODY'
     ) TMP
WHERE UPD.AGREEMENT_ID = TMP.AGREEMENT_ID   
AND UPD.CLIMRWAPORT IS NULL
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'C0017_VALUE',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET C0017_VALUE = TMP.VALUE
FROM (
        SELECT ASN.AGREEMENT_ID, ASN.VALUE,ASN.START_DATE,ASN.FINAL_DATE
        FROM CORE.V_F_AGMT_CLFR_ASN ASN
        JOIN CORE.V_D_CLASSIFIER CLS ON CLS.CLASSIFIER_ID = ASN.CLASSIFIER_ID 
         AND CLS.PRNT_CLASSIFIER_ID = 716--À»Ã»“ —¿ÃŒ—“Œﬂ“≈À‹ÕŒ√Œ œ–»Õﬂ“»ﬂ  –≈ƒ»“ÕŒ√Œ –»— ¿
        JOIN CORE.V_D_AGREEMENT AGR ON ASN.AGREEMENT_ID = AGR.AGREEMENT_ID 
         AND AGR.OWNER_SRS_CD = 'CUSTODY'
     ) TMP
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID   
 AND UPD.REPORT_DATE>= TMP.START_DATE
 AND UPD.REPORT_DATE<=TMP.FINAL_DATE
 ;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET C0017_VALUE = TMP.VALUE
FROM (
        SELECT ASN.AGREEMENT_ID, ASN.VALUE,ASN.START_DATE,ASN.FINAL_DATE
        FROM CORE.V_F_AGMT_CLFR_ASN ASN
        JOIN CORE.V_D_CLASSIFIER CLS ON CLS.CLASSIFIER_ID = ASN.CLASSIFIER_ID 
         AND CLS.PRNT_CLASSIFIER_ID = 716--À»Ã»“ —¿ÃŒ—“Œﬂ“≈À‹ÕŒ√Œ œ–»Õﬂ“»ﬂ  –≈ƒ»“ÕŒ√Œ –»— ¿
        JOIN CORE.V_D_AGREEMENT AGR ON ASN.AGREEMENT_ID = AGR.AGREEMENT_ID 
         AND AGR.OWNER_SRS_CD = 'CUSTODY'
     ) TMP
WHERE UPD.AGREEMENT_ID = TMP.AGREEMENT_ID   
 AND UPD.REPORT_DATE>= TMP.START_DATE
 AND UPD.REPORT_DATE<= TMP.FINAL_DATE
 AND UPD.C0017_VALUE IS NULL
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'UPDATE MAIN_*',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.MAIN_AGMT_NUMBER = TMP.MAIN_AGMT_NUMBER,
    UPD.MAIN_OPEN_DT = TMP.MAIN_OPEN_DT,
    UPD.MAIN_FACT_CLOSE_DT = TMP.MAIN_FACT_CLOSE_DT,
    UPD.MAIN_PLAN_CLOSE_DT = TMP.MAIN_PLAN_CLOSE_DT
FROM (
       SELECT AGR.AGREEMENT_ID,
              AGR_M.AGMT_NUMBER AS MAIN_AGMT_NUMBER,
              AGR_M.OPEN_DT AS MAIN_OPEN_DT,
              AGR_M.FACT_CLOSE_DT AS MAIN_FACT_CLOSE_DT,
              AGR_M.PLAN_CLOSE_DT AS MAIN_PLAN_CLOSE_DT
       FROM CORE.V_D_AGREEMENT AGR
       JOIN CORE.V_F_AGMT_ASN AA_M ON AGR.AGREEMENT_ID  = AA_M.AGREEMENT_2_ID
        AND AA_M.AGMT_1_ROLE_CD = 'MAIN_AGREEMENT'
        AND AA_M.AGMT_2_ROLE_CD = 'CREDIT_CONTRACT'
       JOIN CORE.V_D_AGREEMENT AGR_M ON AGR_M.AGREEMENT_ID = AA_M.AGREEMENT_1_ID
       WHERE 1 = 1
        AND AGR_M.PRDCT_SUBTYPE_CD  ='√≈Õ—Œ√ –≈ƒ'  
        AND AGR.T_RAW_STATUS  NOT IN ('X','W','D')
        AND ( 
             (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
              OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
             ) 
        AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) --ƒŒ¡¿¬À≈ÕŒ »— Àﬁ◊≈Õ»≈ œŒ —¿ƒ Œ
        AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
        AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
        UNION
        SELECT AGR.AGREEMENT_ID,
               AGR_M.AGMT_NUMBER AS MAIN_AGMT_NUMBER,
               AGR_M.OPEN_DT AS MAIN_OPEN_DT,
               AGR_M.FACT_CLOSE_DT AS MAIN_FACT_CLOSE_DT,
               AGR_M.PLAN_CLOSE_DT AS MAIN_PLAN_CLOSE_DT
        FROM CORE.V_D_AGREEMENT AGR
        JOIN CORE.V_F_AGMT_ASN AA_M ON AGR.AGREEMENT_ID  = AA_M.AGREEMENT_2_ID 
         AND AA_M.AGMT_1_ROLE_CD = 'MAIN_AGREEMENT' 
         AND AA_M.AGMT_2_ROLE_CD = 'SUPPLEMENTARY'
         AND AA_M.T_SRS_ID = (CASE 
                               WHEN AGR.OWNER_SRS_CD = 'RKOF1' 
                                THEN 201 
                               WHEN AGR.OWNER_SRS_CD = 'CUSTODY' 
                                THEN 9 
                               ELSE NULL 
                              END) 
        JOIN CORE.V_D_AGREEMENT AGR_M ON AGR_M.AGREEMENT_ID = AA_M.AGREEMENT_1_ID
        WHERE 1 = 1
         AND (AGR_M.PRDCT_SUBTYPE_CD  ='¿  –-√¿–¿Õ' AND AGR_M.PRODUCT_NM LIKE '%–¿ÃŒ◊Õ€… ƒŒ√Œ¬Œ–%')
          OR
             (AGR_M.PRDCT_SUBTYPE_CD  ='GPS_GUARANTIES' AND AGR_M.PRODUCT_NM = '–¿ÃŒ◊Õ€≈ √¿–¿Õ“»»')
         AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
        ) TMP
WHERE UPD.AGREEMENT_ID = TMP.AGREEMENT_ID   
;

INSERT INTO TMP_AGMT_LIM
SELECT AA_M.AGREEMENT_2_ID AS LOAN_FCLY_ID,
        AA_M.AGREEMENT_1_ID
FROM CORE.V_D_AGREEMENT AGR
JOIN CORE.V_F_AGMT_ASN AA_M ON AGR.AGREEMENT_ID  = AA_M.AGREEMENT_2_ID
 AND AA_M.AGMT_1_ROLE_CD = 'MAIN_AGREEMENT'
 AND AA_M.AGMT_2_ROLE_CD = 'CREDIT_CONTRACT'
JOIN CORE.V_D_AGREEMENT AGR_M ON AGR_M.AGREEMENT_ID = AA_M.AGREEMENT_1_ID
WHERE 1 = 1
 AND AGR_M.PRDCT_SUBTYPE_CD  ='√≈Õ—Œ√ –≈ƒ'  
 AND AGR.T_RAW_STATUS  NOT IN ('X','W','D')
 AND ( 
       (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
         OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
      ) 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) --ƒŒ¡¿¬À≈ÕŒ »— Àﬁ◊≈Õ»≈ œŒ —¿ƒ Œ
 AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
UNION
SELECT AA_M.AGREEMENT_2_ID AS LOAN_FCLY_ID,
       AA_M.AGREEMENT_1_ID
FROM CORE.V_D_AGREEMENT AGR
JOIN CORE.V_F_AGMT_ASN AA_M ON AGR.AGREEMENT_ID  = AA_M.AGREEMENT_2_ID 
 AND AA_M.AGMT_1_ROLE_CD = 'MAIN_AGREEMENT' 
 AND AA_M.AGMT_2_ROLE_CD = 'SUPPLEMENTARY'
JOIN CORE.V_D_AGREEMENT AGR_M ON AGR_M.AGREEMENT_ID = AA_M.AGREEMENT_1_ID
WHERE 1 = 1
 AND AGR_M.PRDCT_SUBTYPE_CD  ='¿  –-√¿–¿Õ'
 AND AGR_M.PRODUCT_NM LIKE '%–¿ÃŒ◊Õ€… ƒŒ√Œ¬Œ–%'
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.F_AGMT_LIM_AMT = TMP.LIMIT_AMT,
    UPD.F_AGMT_CURRENCY = TMP.ISO_ALPHA_CD
    --UPD.LIMIT_TYPE_NM = TMP.LIMIT_TYPE_NM
FROM (
        SELECT DISTINCT TMP.LOAN_FCLY_ID,
               C.DT AS REPORT_DATE,
               AL.LIMIT_AMT,
               CR.ISO_ALPHA_CD,
               AL.LIMIT_TYPE_NM
        FROM TMP_AGMT_LIM TMP
        JOIN CORE.V_D_AGREEMENT AGR ON TMP.AGREEMENT_1_ID = AGR.AGREEMENT_ID
        JOIN CORE.V_D_CALENDAR C ON AGR.OPEN_DT<=C.DT 
         AND AGR.FACT_CLOSE_DT>=C.DT
          AND C.DT <> '2050-01-01'
        JOIN CORE.V_F_AGMT_LIMIT AL ON AGR.AGREEMENT_ID = AL.AGREEMENT_ID 
         AND AL.LIMIT_TYPE_NM = 'À»Ã»“ –¿ÃŒ◊ÕŒ√Œ ƒŒ√Œ¬Œ–¿'
         AND C.DT>= AL.BEGIN_DATE 
         AND C.DT<= AL.END_DATE
        JOIN CORE.V_D_CURRENCY CR ON CR.CURRENCY_ID = (CASE WHEN ISNULL(AL.CURRENCY_ID,0) = 0 THEN AGR.CURRENCY_ID ELSE AL.CURRENCY_ID END )
        WHERE AGR.PRDCT_TYPE_CD = 'ƒŒœ_—Œ√À¿ÿ≈Õ»≈' 
        AND  AGR.PRDCT_SUBTYPE_CD = '¿  –-√¿–¿Õ'
        AND C.DT >=@PDATESTART
        AND C.DT <= @PDATEEND
      ) TMP
WHERE TMP.LOAN_FCLY_ID = UPD.AGREEMENT_ID 
 AND  TMP.REPORT_DATE = UPD.REPORT_DATE;
 
--√≈Õ —Œ√À¿ÿ≈Õ»ﬂ
UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.M_AGMT_LIM_AMT = TMP.LIMIT_AMT,
    UPD.M_AGMT_CURRENCY = TMP.ISO_ALPHA_CD
    --UPD.LIMIT_TYPE_NM = TMP.LIMIT_TYPE_NM
FROM (

        SELECT DISTINCT TMP.LOAN_FCLY_ID,
               C.DT AS REPORT_DATE,
               AL.LIMIT_AMT,
               CR.ISO_ALPHA_CD,
               AL.LIMIT_TYPE_NM
        FROM TMP_AGMT_LIM TMP
        JOIN CORE.V_D_AGREEMENT AGR ON TMP.AGREEMENT_1_ID = AGR.AGREEMENT_ID
        JOIN CORE.V_D_CALENDAR C ON AGR.OPEN_DT<=C.DT 
         AND AGR.FACT_CLOSE_DT>=C.DT
          AND C.DT <> '2050-01-01'
        JOIN CORE.V_F_AGMT_LIMIT AL ON AGR.AGREEMENT_ID = AL.AGREEMENT_ID 
         AND AL.LIMIT_TYPE_NM IN ('≈ƒ»ÕŒ¬–≈Ã≈ÕÕ¿ﬂ «¿ƒŒÀ∆≈ÕÕŒ—“‹ œŒ  –≈ƒ»“Õ€Ã —ƒ≈À ¿Ã','À»Ã»“ –¿ÃŒ◊ÕŒ√Œ ƒŒ√Œ¬Œ–¿')
         AND C.DT>= AL.BEGIN_DATE 
         AND C.DT<= AL.END_DATE
        JOIN CORE.V_D_CURRENCY CR ON CR.CURRENCY_ID = (CASE WHEN ISNULL(AL.CURRENCY_ID,0) = 0 THEN AGR.CURRENCY_ID ELSE AL.CURRENCY_ID END )
        WHERE AGR.PRDCT_TYPE_CD = 'œ–Œ◊≈≈' AND  AGR.PRDCT_SUBTYPE_CD = '√≈Õ—Œ√ –≈ƒ'
        AND C.DT >=@PDATESTART
        AND C.DT <= @PDATEEND
      ) TMP
WHERE TMP.LOAN_FCLY_ID = UPD.AGREEMENT_ID 
 AND  TMP.REPORT_DATE = UPD.REPORT_DATE;


UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET F_AGMT_REST = TMP.BALANCE_OUT
FROM (
        SELECT DISTINCT TMP.LOAN_FCLY_ID,
               C.DT AS REPORT_DATE,
               AR.BALANCE_OUT
        FROM TMP_AGMT_LIM TMP
        JOIN CORE.V_D_AGREEMENT AGR ON TMP.AGREEMENT_1_ID = AGR.AGREEMENT_ID
         AND AGR.PRDCT_TYPE_CD = 'ƒŒœ_—Œ√À¿ÿ≈Õ»≈' 
         AND  AGR.PRDCT_SUBTYPE_CD = '¿  –-√¿–¿Õ'
        JOIN CORE.V_D_CALENDAR C ON AGR.OPEN_DT<=C.DT 
         AND C.DT <> '2050-01-01'
        JOIN CORE.V_F_AGMT_REST AR ON AGR.AGREEMENT_ID = AR.AGREEMENT_ID
         AND AR.ACCT_BAL_BASE_TYPE = 'LIABILITY' 
         AND AR.ACCT_BAL_BASE_CODE = 'LIM'
         AND C.DT>= AR.START_DATE 
         AND C.DT <= AR.FINAL_DATE
        JOIN CORE.V_D_ACCOUNT A ON AR.ACCOUNT_ID = A.ACCOUNT_ID
        WHERE C.DT >=@PDATESTART
         AND C.DT <= @PDATEEND
      )TMP
WHERE TMP.LOAN_FCLY_ID = UPD.AGREEMENT_ID 
 AND  TMP.REPORT_DATE = UPD.REPORT_DATE;
 
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'TMP_BANK_PRINCIPAL',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

SELECT AGR.AGREEMENT_ID, 
       ISNULL(E.FULL_NAME,SHORT_NAME) AS FULL_NAME,
       E.TAX_NUMBER,
       AE.BEGIN_DATE,
       AE.END_DATE,
       AE.ENTITY_ASN_ROLE_CD,
       AE.ENTITY_ID AS BANK_PRINCIPAL_ENTITY_ID
INTO #TMP_BANK_PRINCIPAL
FROM CORE.V_D_AGREEMENT AGR
JOIN CORE.V_F_AGMT_ENTITY_ASN  AE ON AGR.AGREEMENT_ID = AE.AGREEMENT_ID
 AND AE.ENTITY_ASN_ROLE_CD IN ('¡¿Õ  œ–»Õ÷»œ¿À¿','¡¿Õ   ŒÕ“–¿√≈Õ“')
JOIN CORE.V_D_ENTITY E ON AE.ENTITY_ID = E.ENTITY_ID
WHERE 1 = 1
 AND ( 
      (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
       OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
      ) 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) --ƒŒ¡¿¬À≈ÕŒ »— Àﬁ◊≈Õ»≈ œŒ —¿ƒ Œ
 AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.BANK_PRINCIPAL = TMP.FULL_NAME, 
    UPD.BANK_PRINCIPAL_INN = TMP.TAX_NUMBER, 
    UPD.BANK_PRINCIPAL_ENTITY_ID = TMP.BANK_PRINCIPAL_ENTITY_ID
FROM #TMP_BANK_PRINCIPAL TMP
WHERE TMP.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE 
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND TMP.ENTITY_ASN_ROLE_CD = '¡¿Õ  œ–»Õ÷»œ¿À¿'
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.BANK_PRINCIPAL = TMP.FULL_NAME, 
    UPD.BANK_PRINCIPAL_INN = TMP.TAX_NUMBER, 
    UPD.BANK_PRINCIPAL_ENTITY_ID = TMP.BANK_PRINCIPAL_ENTITY_ID
FROM #TMP_BANK_PRINCIPAL TMP
WHERE TMP.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
 AND UPD.REPORT_DATE >= TMP.BEGIN_DATE 
 AND UPD.REPORT_DATE <= TMP.END_DATE
 AND TMP.ENTITY_ASN_ROLE_CD = '¡¿Õ   ŒÕ“–¿√≈Õ“'
 AND (UPD.BANK_PRINCIPAL IS NULL OR UPD.BANK_PRINCIPAL_INN IS NULL)
;

--DWHPLN-20624
UPDATE TMP_F_LOAN_PORTFOLIO
SET COUNTERPARTY_ID = BANK_PRINCIPAL_ENTITY_ID
WHERE  ISNULL(BANK_PRINCIPAL_INN,'') <> '7744001497'
AND BANK_PRINCIPAL_INN IS NOT NULL
;

UPDATE TMP_F_LOAN_PORTFOLIO
SET COUNTERPARTY_ID = BANK_PRINCIPAL_ENTITY_ID
WHERE BANK_PRINCIPAL_INN IS  NULL
AND BANK_PRINCIPAL_ENTITY_ID IS NOT NULL
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'LIMIT_TYPE_NM',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.LIMIT_TYPE_NM = T.LIMIT_TYPE_NM
FROM (
        SELECT AL.AGREEMENT_ID,AL.BEGIN_DATE,AL.END_DATE,AL.LIMIT_TYPE_NM FROM CORE.V_D_AGREEMENT A
        JOIN CORE.V_F_AGMT_LIMIT AL ON AL.AGREEMENT_ID = A.AGREEMENT_ID
        WHERE A.PRDCT_KIND_CD =' –≈ƒ»“'
         AND A.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
         AND A.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%' 
         AND (A.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (A.OWNER_SRS_CD  = '—¿ƒ Œ' AND A.PRDCT_KIND_CD =' –≈ƒ»“'))
     ) T
WHERE UPD.LOAN_FCLY_ID  = T.AGREEMENT_ID
 AND UPD.REPORT_DATE >= T.BEGIN_DATE
 AND UPD.REPORT_DATE <= T.END_DATE
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.LIMIT_TYPE_NM = T.LIMIT_TYPE_NM
FROM (
        SELECT AL.AGREEMENT_ID,AL.BEGIN_DATE,AL.END_DATE,AL.LIMIT_TYPE_NM FROM CORE.V_D_AGREEMENT A
        JOIN CORE.V_F_AGMT_LIMIT AL ON AL.AGREEMENT_ID = A.AGREEMENT_ID
        WHERE A.PRDCT_KIND_CD =' –≈ƒ»“'
         AND A.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
         AND A.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%' 
         AND (A.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (A.OWNER_SRS_CD  = '—¿ƒ Œ' AND A.PRDCT_KIND_CD =' –≈ƒ»“'))
     ) T
WHERE UPD.AGREEMENT_ID  = T.AGREEMENT_ID
 AND UPD.REPORT_DATE >= T.BEGIN_DATE
 AND UPD.REPORT_DATE <= T.END_DATE
 AND UPD.LIMIT_TYPE_NM IS NULL
;
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;


INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'POS,POT',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
--DWHPLN-20921
SELECT AR.AGREEMENT_ID,AR.START_DATE,AR.FINAL_DATE,PL.START_DATE AS PORTFOLIO_LIAB_START_DATE,PL.PORTFOLIO_LIAB_CD
INTO #TMP_PORTFOLIO_LIAB_POS
FROM CORE.V_F_AGMT_RESERVE AR 
JOIN CORE.V_D_PORTFOLIO_LIAB PL ON AR.POS_PORTFOLIO_LIAB_ID = PL.PORTFOLIO_LIAB_ID
 AND PL.PORTFOLIO_LIAB_TYPE_CD = 'POS'
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.PORTFOLIO_LIAB_POS = TMP.PORTFOLIO_LIAB_CD
FROM #TMP_PORTFOLIO_LIAB_POS TMP
WHERE TMP.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
 AND UPD.REPORT_DATE >= TMP.START_DATE 
 AND UPD.REPORT_DATE <= TMP.FINAL_DATE
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.PORTFOLIO_LIAB_POS = TMP.PORTFOLIO_LIAB_CD
FROM #TMP_PORTFOLIO_LIAB_POS TMP
WHERE TMP.AGREEMENT_ID = UPD.AGREEMENT_ID   
 AND UPD.REPORT_DATE >= TMP.START_DATE 
 AND UPD.REPORT_DATE <= TMP.FINAL_DATE
 AND UPD.PORTFOLIO_LIAB_POS IS NULL
;
COMMIT;

SELECT AR.AGREEMENT_ID,AR.START_DATE,AR.FINAL_DATE,AR.RESERVE_RATE
INTO #TMP_PORTFOLIO_POT
FROM CORE.V_D_AGREEMENT AGR 
JOIN CORE.V_F_AGMT_RESERVE AR ON AGR.AGREEMENT_ID = AR.AGREEMENT_ID
WHERE AR.RESERVE_TYPE_CD = 'POT'
AND AGR.PRDCT_KIND_CD = '√¿–¿Õ“»ﬂ'
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.RESERVE_RATE_POT = TMP.RESERVE_RATE
FROM #TMP_PORTFOLIO_POT TMP
WHERE TMP.AGREEMENT_ID = UPD.LOAN_FCLY_ID   
 AND UPD.REPORT_DATE >= TMP.START_DATE 
 AND UPD.REPORT_DATE <= TMP.FINAL_DATE
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET UPD.RESERVE_RATE_POT = TMP.RESERVE_RATE
FROM #TMP_PORTFOLIO_POT TMP
WHERE TMP.AGREEMENT_ID = UPD.AGREEMENT_ID   
 AND UPD.REPORT_DATE >= TMP.START_DATE 
 AND UPD.REPORT_DATE <= TMP.FINAL_DATE
 AND UPD.RESERVE_RATE_POT IS NULL
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'PODR_TYPE,PODR_NAME..',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET UPD.PODR_TYPE = TMP.PODR_TYPE,
     UPD.PODR_NAME = TMP.PODR_NAME
FROM (
        SELECT ASN.AGREEMENT_ID, 
               ASN.[VALUE] AS PODR_TYPE,
               CLS.CLASSIFIER_NM AS PODR_NAME
        FROM CORE.V_F_AGMT_CLFR_ASN ASN
        JOIN CORE.V_D_CLASSIFIER CLS ON CLS.CLASSIFIER_ID = ASN.CLASSIFIER_ID 
         AND CLS.T_SRS_ID = 300
     ) TMP
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID   
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET UPD.PODR_TYPE = TMP.PODR_TYPE,
     UPD.PODR_NAME = TMP.PODR_NAME
FROM (
        SELECT ASN.AGREEMENT_ID, 
               ASN.[VALUE] AS PODR_TYPE,
               CLS.CLASSIFIER_NM AS PODR_NAME
        FROM CORE.V_F_AGMT_CLFR_ASN ASN
        JOIN CORE.V_D_CLASSIFIER CLS ON CLS.CLASSIFIER_ID = ASN.CLASSIFIER_ID 
         AND CLS.T_SRS_ID = 300
     ) TMP
WHERE UPD.AGREEMENT_ID = TMP.AGREEMENT_ID 
 AND UPD.PODR_TYPE IS NULL
 AND UPD.PODR_NAME IS NULL
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
SET   UPD.PAYM_LAST_DT      = AGR.PAYM_LAST_DT,
      UPD.AMOUNT            = AGR.AMOUNT,
      UPD.PRINC_PERIOD_TERM = AGR.PRINC_PERIOD_TERM ,
      UPD.TRANCHE_MAX_TERM  = AGR.TRANCHE_MAX_TERM
FROM CORE.V_D_AGREEMENT AGR 
WHERE AGR.AGREEMENT_ID = UPD.AGREEMENT_ID
 AND AGR.PRDCT_SUBTYPE_CD IN (' –≈ƒ»“Õ¿ﬂ À»Õ»ﬂ - “–¿Õÿ','GPS_OVER_UL','GPS_CRED_UL_MSB')
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'TMP_CLASSIFIER',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;
INSERT INTO TMP_CLASSIFIER
SELECT ACA.AGREEMENT_ID,
	   ACA.VALUE, 
	   P.CLASSIFIER_NM,
	   ACA.START_DATE, 
	   ISNULL( LEAD(ACA.START_DATE) OVER (PARTITION BY ACA.AGREEMENT_ID,P.CLASSIFIER_NM  ORDER BY ACA.START_DATE ) - 1, '20500101' ) AS FINAL_DATE
FROM CORE.V_D_AGREEMENT AGR 
JOIN CORE.V_F_AGMT_CLFR_ASN ACA ON AGR.AGREEMENT_ID = ACA.AGREEMENT_ID
JOIN CORE.V_D_CLASSIFIER C ON ACA.CLASSIFIER_ID = C.CLASSIFIER_ID
JOIN CORE.V_D_CLASSIFIER P ON C.PRNT_CLASSIFIER_ID = P.CLASSIFIER_ID AND P.CLASSIFIER_NM IN ('–≈—“–” “”–»«¿÷»ﬂ  –≈ƒ»“¿','Œ“ÀŒ∆≈ÕÕ€≈ œ–Œ÷≈Õ“€','Ã—œ ÷¡ 9,5 œ–≈ƒŒ—“¿¬À≈Õ»≈ À» ¬»ƒÕŒ—“»','Ã—œ ÷¡ 9.5 œ–≈ƒŒ—“¿¬À≈Õ»≈ À» ¬»ƒÕŒ—“»')
WHERE 1 = 1
 AND ( 
	  (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
	   OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
	  ) 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) --ƒŒ¡¿¬À≈ÕŒ »— Àﬁ◊≈Õ»≈ œŒ —¿ƒ Œ
 AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET UPD.C0016_VALUE      = TMP.VALUE,
     UPD.C0016_BEGIN_DATE = TMP.START_DATE
FROM TMP_CLASSIFIER TMP
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID   
  AND UPD.REPORT_DATE >= TMP.START_DATE 
  AND UPD.REPORT_DATE <= TMP.FINAL_DATE
  AND TMP.CLASSIFIER_NM = '–≈—“–” “”–»«¿÷»ﬂ  –≈ƒ»“¿'
;  
  
UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET UPD.C0016_VALUE = TMP.VALUE,
     UPD.C0016_BEGIN_DATE = TMP.START_DATE
FROM TMP_CLASSIFIER TMP
WHERE UPD.AGREEMENT_ID = TMP.AGREEMENT_ID 
 AND ( UPD.C0016_VALUE IS NULL OR UPD.C0016_BEGIN_DATE IS NULL)
  AND UPD.REPORT_DATE >= TMP.START_DATE 
  AND UPD.REPORT_DATE <= TMP.FINAL_DATE
  AND TMP.CLASSIFIER_NM = '–≈—“–” “”–»«¿÷»ﬂ  –≈ƒ»“¿'
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET  UPD.C0137_VALUE     = TMP.VALUE,
      UPD.C0137_BEGIN_DATE = TMP.START_DATE
FROM TMP_CLASSIFIER TMP
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID   
  AND UPD.REPORT_DATE >= TMP.START_DATE 
  AND UPD.REPORT_DATE <= TMP.FINAL_DATE
  AND TMP.CLASSIFIER_NM = 'Œ“ÀŒ∆≈ÕÕ€≈ œ–Œ÷≈Õ“€'
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET UPD.C0137_VALUE = TMP.VALUE,
     UPD.C0137_BEGIN_DATE = TMP.START_DATE
FROM TMP_CLASSIFIER TMP
WHERE UPD.AGREEMENT_ID = TMP.AGREEMENT_ID 
 AND ( UPD.C0137_VALUE IS NULL OR UPD.C0137_BEGIN_DATE IS NULL)
 AND UPD.REPORT_DATE >= TMP.START_DATE 
 AND UPD.REPORT_DATE <= TMP.FINAL_DATE
 AND TMP.CLASSIFIER_NM = 'Œ“ÀŒ∆≈ÕÕ€≈ œ–Œ÷≈Õ“€'
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET  UPD.CLS_MSP_BEGIN_DATE = TMP.START_DATE
FROM TMP_CLASSIFIER TMP
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID   
  AND UPD.REPORT_DATE >= TMP.START_DATE 
  AND UPD.REPORT_DATE <= TMP.FINAL_DATE
  AND TMP.CLASSIFIER_NM IN ('Ã—œ ÷¡ 9,5 œ–≈ƒŒ—“¿¬À≈Õ»≈ À» ¬»ƒÕŒ—“»','Ã—œ ÷¡ 9.5 œ–≈ƒŒ—“¿¬À≈Õ»≈ À» ¬»ƒÕŒ—“»')
;

UPDATE TMP_F_LOAN_PORTFOLIO UPD
 SET UPD.CLS_MSP_BEGIN_DATE = TMP.START_DATE
FROM TMP_CLASSIFIER TMP
WHERE UPD.AGREEMENT_ID = TMP.AGREEMENT_ID 
 AND UPD.CLS_MSP_BEGIN_DATE IS NULL
 AND UPD.REPORT_DATE >= TMP.START_DATE 
 AND UPD.REPORT_DATE <= TMP.FINAL_DATE
 AND TMP.CLASSIFIER_NM IN ('Ã—œ ÷¡ 9,5 œ–≈ƒŒ—“¿¬À≈Õ»≈ À» ¬»ƒÕŒ—“»','Ã—œ ÷¡ 9.5 œ–≈ƒŒ—“¿¬À≈Õ»≈ À» ¬»ƒÕŒ—“»')
;
UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'TMP_RISK_GROUP',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;


INSERT INTO TMP_RISK_GROUP
SELECT AGR.AGREEMENT_ID,
       CASE
        WHEN ARG.RISK_GROUP_NM = '√–”œœ¿–»— ¿'
         THEN NULL
         ELSE ARG.RISK_GROUP_NM
       END RISK_GROUP_NM,
       RESERVE_RATE,
       ARG.START_DATE,
       ISNULL(LEAD(ARG.START_DATE) OVER (PARTITION BY ARG.AGREEMENT_ID ORDER BY ARG.START_DATE) - 1,'2050-01-01') AS FINAL_DATE
FROM CORE.V_D_AGREEMENT AGR
JOIN CORE.V_F_AGMT_RISK_GROUP ARG ON AGR.AGREEMENT_ID = ARG.AGREEMENT_ID 
 AND ARG.RISK_GROUP_TYPE_CD IN ('–¬œ—','√–”œœ¿–»— ¿') AND ARG.RISK_GROUP_CD IN ('1','2','3','4','5') 
WHERE 1= 1
 AND ( 
      (AGR.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“') AND AGR.PRODUCT_CD <> 'œŒÀ√¿–¿Õ') 
       OR AGR.PRDCT_KIND_CD = 'ƒŒ√Œ¬Œ–_¡¿Õ '  AND AGR.PRODUCT_CD = 'œ≈–≈”—“”œ'
      ) 
 AND (AGR.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (AGR.OWNER_SRS_CD  = '—¿ƒ Œ' AND AGR.PRDCT_KIND_CD =' –≈ƒ»“')) 
 AND AGR.AGREEMENT_CLASS_CD <> '√¿–¿Õ“»ﬂ ¬Œ«¬–¿“¿  –≈ƒ»“¿. —À”∆¿Ÿ»… ¡–'
 AND AGR.AGREEMENT_TYPE_CD NOT LIKE '%œ–ŒÀŒÕ√_“≈’Õ%'      
;
     
UPDATE TMP_F_LOAN_PORTFOLIO UPD
    SET QUALITY_CATEGORY = TMP.RISK_GROUP_NM,
        UPD.RESERVE_RATE = TMP.RESERVE_RATE
FROM TMP_RISK_GROUP AS TMP
WHERE UPD.LOAN_FCLY_ID = TMP.AGREEMENT_ID   
 AND UPD.REPORT_DATE >= TMP.START_DATE
 AND UPD.REPORT_DATE <= TMP.FINAL_DATE
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

INSERT INTO DM_CB.LOG_F_LOAN_PORTFOLIO  (RUN_ID,SPID,USER_NAME,DESCRIPTION,NODE,REPORT_START_DATE,REPORT_END_DATE ,START_DATETIME,END_DATETIME)
SELECT V_LOG_ID,@@SPID,CURRENT USER,'DELETE/INSERT DM_CB.F_LOAN_PORTFOLIO',@@SERVERNAME,@PDATESTART,@PDATEEND , NOW(), NULL
;
COMMIT
;

DELETE FROM DM_CB.F_LOAN_PORTFOLIO
WHERE REPORT_DATE >=@PDATESTART 
 AND REPORT_DATE <= @PDATEEND
;

--“–¿Õÿ» 
INSERT INTO DM_CB.F_LOAN_PORTFOLIO (REPORT_DATE, ACCOUNT_ID, ACCOUNT_DETAIL_ID, ACCOUNT_TYPE_ID, AGREEMENT_ID, LOAN_FCLY_ID, LOAN_CLASSIFIER_ID, INTERNAL_ACCOUNT_ID, CUSTOMER_ID, INTL_PTFLO_ID, CUS_PTFLO_ID, COR_RPT_STRC_ID, DOMC_CHNL_STRC_ID, INITIATOR_ID, COUNTERPARTY_ID, IDSTY_CLS_ID, PRODUCT_ID, GEO_ID, FUND_SOURCE_ID, ISO_CRCY_ID, REF_ISO_CRCY_ID, CUS_PTFLO_MGR_ID, INTL_PTFLO_MGR_ID, SYNDICATE_ID, SYNDICATE_ID2, APPEAR_DATE, CONTINUES_DATE, RENEWAL_DATE, CLOSING_DATE, MATURITY_DATE, DEFAULT_DATE, DEFAULT_COUNT, DEFAULT_VALUE, DEFAULT_VALUE_REF, [VALUE], VALUE_REF, QUALITY_CATEGORY, RESERVE_RATE, RESERVE_VALUE, INTEREST_RATE, INTEREST_RATE_TYPE, BASIS_RATE, BASIS_RATE_MARGIN, MANAGEMENT_RATE, TRANSFERT_RATE, TOT_LOAN_VALUE, REF_TOT_LOAN_VALUE, MULT_CLTRL_IND, TOT_CLTRL_VALUE, TOT_CLTRL_PCT, SYND_SHARE_AMT, SYND_SHARE_PCT, CRCY_EXCH_RATE, FIRST_CLTRL_VALUE, SECOND_CLTRL_VALUE, TOT_CLTRL_FAIR_VALUE, REF_TOT_CLTRL_VALUE, TRANCHE_ISSUE_DATE, TRANCHE_MATURITY_DATE, TRANCHE_VALUE, TRANCHE_VALUE_REF, CHANGE_TIME, MICRO_TRANCHE_IND, INSTRUMENT_ID_NK, ACCOUNT_ID_NK, ACCOUNT_DETAIL_ID_NK, LOAN_TYPE, _DATETIME, BASE_RATE, MANAGEMENT_PORTFOLIO_FLAG, UCLOANRATE, LOAN_CLASS, OFFICER, HEAD_MATURITY_DATE, UNDERWRITER, OFFICERID, UNDERWRITERID, IDSTY_GRP_CSL_ID, PERCENT_BALANCE, INTEREST_ACCRUED, INTEREST_PAID, INTEREST_ARREARS, RESERVE_BALANCE, LIMIT_BALANCE, RESEVE_DEF_BALANCE, RESEVE_INT_BALANCE, RESEVE_DEF_INT_BALANCE, RESERVE_LIM_BALANCE, DEFAULT_PERCENT_BALANCE, DEFAULT_PERCENT_OUT_BALANCE, LIMIT_BALANCE_REF, SUBSIDY_RATE, DEFAULT_PERCENT_DATE, T_SRS_ID, T_DATETIME_INSERT,DEPARTMENT_OFFICER,DEPARTMENT_OFFICER_DATE,MSFO_LOAN_PERCENT,MSFO_LOAN_RUR,MSFO_UNUSED_PERCENT,MSFO_UNUSED_PERCENT_RUR,MSFO_PERCENT_RUR,CLIMRWADEALID,CLIMRWAPORT,MAIN_AGMT_NUMBER,MAIN_OPEN_DT,MAIN_FACT_CLOSE_DT,MAIN_PLAN_CLOSE_DT,C0017_VALUE,F_AGMT_LIM_AMT,F_AGMT_CURRENCY,F_AGMT_REST,M_AGMT_LIM_AMT,M_AGMT_CURRENCY,BANK_PRINCIPAL,BANK_PRINCIPAL_INN,LIMIT_TYPE_NM,AGENT_COMMISSION_RATE,MSFO_LOAN_PERCENT_OVERDUE,PORTFOLIO_LIAB_POS,RESERVE_RATE_POT,PODR_TYPE,PODR_NAME,PAYM_LAST_DT,AMOUNT,PRINC_PERIOD_TERM,TRANCHE_MAX_TERM,BANK_PRINCIPAL_ENTITY_ID,C0016_VALUE,C0016_BEGIN_DATE,C0137_VALUE,C0137_BEGIN_DATE,CLS_MSP_BEGIN_DATE)

SELECT 
    BUF.REPORT_DATE, 
    BUF.ACCOUNT_ID,
    BUF.ACCOUNT_DETAIL_ID, 
    BUF.ACCOUNT_TYPE_ID, 
    BUF.AGREEMENT_ID, 
    BUF.LOAN_FCLY_ID, 
    BUF.LOAN_CLASSIFIER_ID, 
    BUF.INTERNAL_ACCOUNT_ID, 
    BUF.CUSTOMER_ID, 
    BUF.INTL_PTFLO_ID,      
    BUF.CUS_PTFLO_ID, 
    BUF.COR_RPT_STRC_ID, 
    BUF.DOMC_CHNL_STRC_ID, 
    BUF.INITIATOR_ID, 
    BUF.COUNTERPARTY_ID, 
    BUF.IDSTY_CLS_ID, 
    BUF.PRODUCT_ID, 
    BUF.GEO_ID, 
    BUF.FUND_SOURCE_ID, 
    BUF.ISO_CRCY_ID, 
    BUF.REF_ISO_CRCY_ID,
    BUF.CUS_PTFLO_MGR_ID, 
    BUF.INTL_PTFLO_MGR_ID, 
    BUF.SYNDICATE_ID, 
    BUF.SYNDICATE_ID2, 
    BUF.APPEAR_DATE, 
    BUF.CONTINUES_DATE, 
    BUF.RENEWAL_DATE, 
    BUF.CLOSING_DATE, 
    BUF.MATURITY_DATE, 
    BUF.DEFAULT_DATE, 
    BUF.DEFAULT_COUNT, 
    BUF.DEFAULT_VALUE, 
    BUF.DEFAULT_VALUE_REF, 
    BUF.[VALUE], 
    BUF.VALUE_REF, 
    BUF.QUALITY_CATEGORY, 
    BUF.RESERVE_RATE, 
    BUF.RESERVE_VALUE, 
    BUF.INTEREST_RATE, 
    BUF.INTEREST_RATE_TYPE, 
    BUF.BASIS_RATE, 
    BUF.BASIS_RATE_MARGIN, 
    BUF.MANAGEMENT_RATE, 
    BUF.TRANSFERT_RATE, 
    BUF.TOT_LOAN_VALUE, 
    BUF.REF_TOT_LOAN_VALUE, 
    BUF.MULT_CLTRL_IND, 
    BUF.TOT_CLTRL_VALUE, 
    BUF.TOT_CLTRL_PCT, 
    BUF.SYND_SHARE_AMT, 
    BUF.SYND_SHARE_PCT, 
    BUF.CRCY_EXCH_RATE, 
    BUF.FIRST_CLTRL_VALUE, 
    BUF.SECOND_CLTRL_VALUE, 
    BUF.TOT_CLTRL_FAIR_VALUE, 
    BUF.REF_TOT_CLTRL_VALUE, 
    BUF.TRANCHE_ISSUE_DATE, 
    BUF.TRANCHE_MATURITY_DATE, 
    BUF.TRANCHE_VALUE, 
    BUF.TRANCHE_VALUE_REF, 
    BUF.CHANGE_TIME,
    BUF.MICRO_TRANCHE_IND, 
    BUF.INSTRUMENT_ID_NK, 
    BUF.ACCOUNT_ID_NK, 
    BUF.ACCOUNT_DETAIL_ID_NK, 
    BUF.LOAN_TYPE, 
    BUF.T_DATETIME, 
    BUF.BASE_RATE, 
    BUF.MANAGEMENT_PORTFOLIO_FLAG, 
    BUF.UCLOANRATE, 
    BUF.LOAN_CLASS, 
    BUF.OFFICER, 
    BUF.HEAD_MATURITY_DATE,                                                     
    BUF.UNDERWRITER,
    BUF.OFFICERID, 
    BUF.UNDERWRITERID, 
    BUF.IDSTY_GRP_CSL_ID, 
    BUF.PERCENT_BALANCE, 
    BUF.INTEREST_ACCRUED, 
    BUF.INTEREST_PAID, 
    BUF.INTEREST_ARREARS, 
    BUF.RESERVE_BALANCE, 
    BUF.LIMIT_BALANCE, 
    BUF.RESEVE_DEF_BALANCE, 
    BUF.RESEVE_INT_BALANCE, 
    BUF.RESEVE_DEF_INT_BALANCE, 
    BUF.RESERVE_LIM_BALANCE, 
    BUF.DEFAULT_PERCENT_BALANCE, 
    BUF.DEFAULT_PERCENT_OUT_BALANCE, 
    BUF.LIMIT_BALANCE_REF, 
    BUF.SUBSIDY_RATE, 
    BUF.DEFAULT_PERCENT_DATE,
    0 AS T_SRS_ID,
    NOW() AS T_DATETIME_INSERT,
    BUF.DEPARTMENT_OFFICER,
    BUF.DEPARTMENT_OFFICER_DATE,
    BUF.MSFO_LOAN_PERCENT,
    BUF.MSFO_LOAN_RUR,
    BUF.MSFO_UNUSED_PERCENT,
    BUF.MSFO_UNUSED_PERCENT_RUR,
    BUF.MSFO_PERCENT_RUR,
    BUF.CLIMRWADEALID,
    BUF.CLIMRWAPORT,
    BUF.MAIN_AGMT_NUMBER,
    BUF.MAIN_OPEN_DT,
    BUF.MAIN_FACT_CLOSE_DT,
    BUF.MAIN_PLAN_CLOSE_DT,
    BUF.C0017_VALUE,
    BUF.F_AGMT_LIM_AMT,
    BUF.F_AGMT_CURRENCY,
    BUF.F_AGMT_REST,
    BUF.M_AGMT_LIM_AMT,
    BUF.M_AGMT_CURRENCY,
    BUF.BANK_PRINCIPAL,
    BUF.BANK_PRINCIPAL_INN,
    BUF.LIMIT_TYPE_NM,
    BUF.AGENT_COMMISSION_RATE,
    BUF.MSFO_LOAN_PERCENT_OVERDUE,
    BUF.PORTFOLIO_LIAB_POS,
    BUF.RESERVE_RATE_POT,
    BUF.PODR_TYPE,
    BUF.PODR_NAME,
    BUF.PAYM_LAST_DT,
    BUF.AMOUNT,
    BUF.PRINC_PERIOD_TERM,
    BUF.TRANCHE_MAX_TERM,
    BUF.BANK_PRINCIPAL_ENTITY_ID,
    BUF.C0016_VALUE,
    BUF.C0016_BEGIN_DATE,
    BUF.C0137_VALUE,
    BUF.C0137_BEGIN_DATE,
    BUF.CLS_MSP_BEGIN_DATE
FROM TMP_F_LOAN_PORTFOLIO BUF
WHERE BUF.MICRO_TRANCHE_IND IS NULL
;


--Ã» –Œ “–¿Õÿ» 

INSERT INTO DM_CB.F_LOAN_PORTFOLIO (REPORT_DATE, ACCOUNT_ID, ACCOUNT_DETAIL_ID, ACCOUNT_TYPE_ID, AGREEMENT_ID, LOAN_FCLY_ID, LOAN_CLASSIFIER_ID, INTERNAL_ACCOUNT_ID, CUSTOMER_ID, INTL_PTFLO_ID, CUS_PTFLO_ID, COR_RPT_STRC_ID, DOMC_CHNL_STRC_ID, INITIATOR_ID, COUNTERPARTY_ID, IDSTY_CLS_ID, PRODUCT_ID, GEO_ID, FUND_SOURCE_ID, ISO_CRCY_ID, REF_ISO_CRCY_ID, CUS_PTFLO_MGR_ID, INTL_PTFLO_MGR_ID, SYNDICATE_ID, SYNDICATE_ID2, APPEAR_DATE, CONTINUES_DATE, RENEWAL_DATE, CLOSING_DATE, MATURITY_DATE, DEFAULT_DATE, DEFAULT_COUNT, DEFAULT_VALUE, DEFAULT_VALUE_REF, [VALUE], VALUE_REF, QUALITY_CATEGORY, RESERVE_RATE, RESERVE_VALUE, INTEREST_RATE, INTEREST_RATE_TYPE, BASIS_RATE, BASIS_RATE_MARGIN, MANAGEMENT_RATE, TRANSFERT_RATE, TOT_LOAN_VALUE, REF_TOT_LOAN_VALUE, MULT_CLTRL_IND, TOT_CLTRL_VALUE, TOT_CLTRL_PCT, SYND_SHARE_AMT, SYND_SHARE_PCT, CRCY_EXCH_RATE, FIRST_CLTRL_VALUE, SECOND_CLTRL_VALUE, TOT_CLTRL_FAIR_VALUE, REF_TOT_CLTRL_VALUE, TRANCHE_ISSUE_DATE, TRANCHE_MATURITY_DATE, TRANCHE_VALUE, TRANCHE_VALUE_REF, CHANGE_TIME, MICRO_TRANCHE_IND, INSTRUMENT_ID_NK, ACCOUNT_ID_NK, ACCOUNT_DETAIL_ID_NK, LOAN_TYPE, _DATETIME, BASE_RATE, MANAGEMENT_PORTFOLIO_FLAG, UCLOANRATE, LOAN_CLASS, OFFICER, HEAD_MATURITY_DATE, UNDERWRITER, OFFICERID, UNDERWRITERID, IDSTY_GRP_CSL_ID, PERCENT_BALANCE, INTEREST_ACCRUED, INTEREST_PAID, INTEREST_ARREARS, RESERVE_BALANCE, LIMIT_BALANCE, RESEVE_DEF_BALANCE, RESEVE_INT_BALANCE, RESEVE_DEF_INT_BALANCE, RESERVE_LIM_BALANCE, DEFAULT_PERCENT_BALANCE, DEFAULT_PERCENT_OUT_BALANCE, LIMIT_BALANCE_REF, SUBSIDY_RATE, DEFAULT_PERCENT_DATE, T_SRS_ID, T_DATETIME_INSERT,DEPARTMENT_OFFICER,DEPARTMENT_OFFICER_DATE,MSFO_LOAN_PERCENT,MSFO_LOAN_RUR,MSFO_UNUSED_PERCENT,MSFO_UNUSED_PERCENT_RUR,MSFO_PERCENT_RUR,CLIMRWADEALID,CLIMRWAPORT,MAIN_AGMT_NUMBER,MAIN_OPEN_DT,MAIN_FACT_CLOSE_DT,MAIN_PLAN_CLOSE_DT,C0017_VALUE,F_AGMT_LIM_AMT,F_AGMT_CURRENCY,F_AGMT_REST,M_AGMT_LIM_AMT,M_AGMT_CURRENCY,BANK_PRINCIPAL,BANK_PRINCIPAL_INN,LIMIT_TYPE_NM,AGENT_COMMISSION_RATE,MSFO_LOAN_PERCENT_OVERDUE,PORTFOLIO_LIAB_POS,RESERVE_RATE_POT,PODR_TYPE,PODR_NAME,PAYM_LAST_DT,AMOUNT,PRINC_PERIOD_TERM,TRANCHE_MAX_TERM,BANK_PRINCIPAL_ENTITY_ID,C0016_VALUE,C0016_BEGIN_DATE,C0137_VALUE,C0137_BEGIN_DATE,CLS_MSP_BEGIN_DATE)

SELECT 
    BUF.REPORT_DATE, 
    BUF.ACCOUNT_ID,
    BUF.ACCOUNT_DETAIL_ID, 
    BUF.ACCOUNT_TYPE_ID, 
    BUF.AGREEMENT_ID, 
    BUF.LOAN_FCLY_ID, 
    BUF.LOAN_CLASSIFIER_ID, 
    BUF.INTERNAL_ACCOUNT_ID, 
    BUF.CUSTOMER_ID, 
    BUF.INTL_PTFLO_ID,      
    BUF.CUS_PTFLO_ID, 
    BUF.COR_RPT_STRC_ID, 
    BUF.DOMC_CHNL_STRC_ID, 
    BUF.INITIATOR_ID, 
    BUF.COUNTERPARTY_ID, 
    BUF.IDSTY_CLS_ID, 
    BUF.PRODUCT_ID, 
    BUF.GEO_ID, 
    BUF.FUND_SOURCE_ID, 
    BUF.ISO_CRCY_ID, 
    BUF.REF_ISO_CRCY_ID,
    BUF.CUS_PTFLO_MGR_ID, 
    BUF.INTL_PTFLO_MGR_ID, 
    BUF.SYNDICATE_ID, 
    BUF.SYNDICATE_ID2, 
    BUF.APPEAR_DATE, 
    BUF.CONTINUES_DATE, 
    BUF.RENEWAL_DATE, 
    BUF.CLOSING_DATE, 
    BUF.MATURITY_DATE, 
    BUF.DEFAULT_DATE, 
    BUF.DEFAULT_COUNT, 
    BUF.DEFAULT_VALUE, 
    BUF.DEFAULT_VALUE_REF, 
    BUF.[VALUE], 
    BUF.VALUE_REF, 
    BUF.QUALITY_CATEGORY, 
    BUF.RESERVE_RATE, 
    BUF.RESERVE_VALUE, 
    BUF.INTEREST_RATE, 
    BUF.INTEREST_RATE_TYPE, 
    BUF.BASIS_RATE, 
    BUF.BASIS_RATE_MARGIN, 
    BUF.MANAGEMENT_RATE, 
    BUF.TRANSFERT_RATE, 
    BUF.TOT_LOAN_VALUE, 
    BUF.REF_TOT_LOAN_VALUE, 
    BUF.MULT_CLTRL_IND, 
    BUF.TOT_CLTRL_VALUE, 
    BUF.TOT_CLTRL_PCT, 
    BUF.SYND_SHARE_AMT, 
    BUF.SYND_SHARE_PCT, 
    BUF.CRCY_EXCH_RATE, 
    BUF.FIRST_CLTRL_VALUE, 
    BUF.SECOND_CLTRL_VALUE, 
    BUF.TOT_CLTRL_FAIR_VALUE, 
    BUF.REF_TOT_CLTRL_VALUE, 
    BUF.TRANCHE_ISSUE_DATE, 
    BUF.TRANCHE_MATURITY_DATE, 
    BUF.TRANCHE_VALUE, 
    BUF.TRANCHE_VALUE_REF, 
    BUF.CHANGE_TIME,
    BUF.MICRO_TRANCHE_IND, 
    BUF.INSTRUMENT_ID_NK, 
    BUF.ACCOUNT_ID_NK, 
    BUF.ACCOUNT_DETAIL_ID_NK, 
    BUF.LOAN_TYPE, 
    BUF.T_DATETIME, 
    BUF.BASE_RATE, 
    BUF.MANAGEMENT_PORTFOLIO_FLAG, 
    BUF.UCLOANRATE, 
    BUF.LOAN_CLASS, 
    BUF.OFFICER, 
    BUF.HEAD_MATURITY_DATE,                                                     
    BUF.UNDERWRITER,
    BUF.OFFICERID, 
    BUF.UNDERWRITERID, 
    BUF.IDSTY_GRP_CSL_ID, 
    BUF.PERCENT_BALANCE, 
    BUF.INTEREST_ACCRUED, 
    BUF.INTEREST_PAID, 
    BUF.INTEREST_ARREARS, 
    BUF.RESERVE_BALANCE, 
    BUF.LIMIT_BALANCE, 
    BUF.RESEVE_DEF_BALANCE, 
    BUF.RESEVE_INT_BALANCE, 
    BUF.RESEVE_DEF_INT_BALANCE, 
    BUF.RESERVE_LIM_BALANCE, 
    BUF.DEFAULT_PERCENT_BALANCE, 
    BUF.DEFAULT_PERCENT_OUT_BALANCE, 
    BUF.LIMIT_BALANCE_REF, 
    BUF.SUBSIDY_RATE, 
    BUF.DEFAULT_PERCENT_DATE,
    0 AS T_SRS_ID,
    NOW() AS T_DATETIME_INSERT,
    BUF.DEPARTMENT_OFFICER,
    BUF.DEPARTMENT_OFFICER_DATE,
    BUF.MSFO_LOAN_PERCENT,
    BUF.MSFO_LOAN_RUR,
    BUF.MSFO_UNUSED_PERCENT,
    BUF.MSFO_UNUSED_PERCENT_RUR,
    BUF.MSFO_PERCENT_RUR,
    BUF.CLIMRWADEALID,
    BUF.CLIMRWAPORT,
    BUF.MAIN_AGMT_NUMBER,
    BUF.MAIN_OPEN_DT,
    BUF.MAIN_FACT_CLOSE_DT,
    BUF.MAIN_PLAN_CLOSE_DT,
    BUF.C0017_VALUE,
    BUF.F_AGMT_LIM_AMT,
    BUF.F_AGMT_CURRENCY,
    BUF.F_AGMT_REST,
    BUF.M_AGMT_LIM_AMT,
    BUF.M_AGMT_CURRENCY,
    BUF.BANK_PRINCIPAL,
    BUF.BANK_PRINCIPAL_INN,
    BUF.LIMIT_TYPE_NM,
    BUF.AGENT_COMMISSION_RATE,
    BUF.MSFO_LOAN_PERCENT_OVERDUE,
    BUF.PORTFOLIO_LIAB_POS,
    BUF.RESERVE_RATE_POT,
    BUF.PODR_TYPE,
    BUF.PODR_NAME,
    BUF.PAYM_LAST_DT,
    BUF.AMOUNT,
    BUF.PRINC_PERIOD_TERM,
    BUF.TRANCHE_MAX_TERM,
    BUF.BANK_PRINCIPAL_ENTITY_ID,
    BUF.C0016_VALUE,
    BUF.C0016_BEGIN_DATE,
    BUF.C0137_VALUE,
    BUF.C0137_BEGIN_DATE,
    BUF.CLS_MSP_BEGIN_DATE
FROM TMP_F_LOAN_PORTFOLIO BUF
WHERE BUF.MICRO_TRANCHE_IND = 1
;
---

UPDATE  DM_CB.F_LOAN_PORTFOLIO P 
SET P.LOAN_CLASSIFIER_ID = 0,MANAGEMENT_PORTFOLIO_FLAG = 0,INTL_PTFLO_ID = 0
WHERE P.REPORT_DATE >= CAST(NOW() AS DATE)-5
;

SELECT A.AGREEMENT_ID AS LOAN_FCLY_ID,
       CASE 
        WHEN A_A.AGREEMENT_2_ID IS NULL 
          THEN 0 
          ELSE 1 
       END TRANCHE_IND,
       A.PRODUCT_CD AS FO_CODE_5NT INTO #TMP_LOAN_FACILITY_N
FROM CORE.D_AGREEMENT A
JOIN CORE.D_CURRENCY AS C ON A.CURRENCY_ID= C.CURRENCY_ID 
  AND C.T_RAW_STATUS NOT IN ('X','W','D')
LEFT JOIN CORE.F_AGMT_ASN A_A ON A.AGREEMENT_ID = A_A.AGREEMENT_2_ID AND A_A.AGMT_1_ROLE_CD =  'MAIN_INSTRUMENT' AND A_A.AGMT_2_ROLE_CD = 'TRANCHE_INSTRUMENT'
  AND A_A.T_RAW_STATUS NOT IN ('X','W','D')
WHERE A.PRDCT_KIND_CD IN ('¿  –≈ƒ»“»¬', '√¿–¿Õ“»ﬂ',' –≈ƒ»“','ƒŒ√Œ¬Œ–_¡¿Õ ')   
AND A.T_RAW_STATUS NOT IN ('X','W','D')
AND (A.PRDCT_ENTITY_TYPE_CD IN ('ORG','IE') OR (A.OWNER_SRS_CD  = '—¿ƒ Œ' AND A.PRDCT_KIND_CD =' –≈ƒ»“'))
AND  A.PRODUCT_CD NOT IN ('CSA_¡“–','CSA_¡',' –≈ƒ√ ','ÃÕŒ','œŒÀ√¿–¿Õ','‘_ –≈ƒ√ ','ƒ≈œŒ«»“€','Ã¡ _–”¡','Ã¡ ƒ_–_À√','Ã¡ _‘»À','Ã¡ _‘_ÃÕŒ','Ã¡ _¬¿À','¿” ÷»ŒÕ')
;

UPDATE  DM_CB.F_LOAN_PORTFOLIO
SET P.LOAN_CLASSIFIER_ID = CLS.LOAN_CLASSIFIER_ID
FROM 
    DM_CB.F_LOAN_PORTFOLIO P
    JOIN STAGE.INSTRUMENT I ON ( I.INSTRUMENT_CORE_ID = P.LOAN_FCLY_ID )
    JOIN DAK.TMP_PORTFOLIO_CLS_MD5 CLS ON ( CLS.INSTRUMENT_ID = I.INSTRUMENT_ID AND P.REPORT_DATE >= CLS.START_DATE AND P.REPORT_DATE <= CLS.END_DATE AND CLS.LOAN_CLASSIFIER_ID IS NOT NULL AND ISNULL(P.LOAN_CLASSIFIER_ID,0) <> ISNULL(CLS.LOAN_CLASSIFIER_ID,0))
    WHERE I.SOURCE_SYSTEM_ID = 201
    AND P.REPORT_DATE >= CAST(NOW() AS DATE)-5
;

UPDATE  DM_CB.F_LOAN_PORTFOLIO
SET P.LOAN_CLASSIFIER_ID = CLS.LOAN_CLASSIFIER_ID
FROM 
    DM_CB.F_LOAN_PORTFOLIO P
    JOIN STAGE.INSTRUMENT I ON ( I.INSTRUMENT_CORE_ID = P.LOAN_FCLY_ID )
    JOIN DAK.TMP_PORTFOLIO_CLS_MD5 CLS ON ( CLS.INSTRUMENT_ID = I.INSTRUMENT_ID AND P.REPORT_DATE >= CLS.START_DATE AND P.REPORT_DATE <= CLS.END_DATE AND CLS.LOAN_CLASSIFIER_ID IS NOT NULL AND ISNULL(P.LOAN_CLASSIFIER_ID,0) <> ISNULL(CLS.LOAN_CLASSIFIER_ID,0))
WHERE I.SOURCE_SYSTEM_ID = 9 
 AND  ISNULL(P.LOAN_CLASSIFIER_ID,0) = 0
 AND P.REPORT_DATE >= CAST(NOW() AS DATE)-5
;

UPDATE DM_CB.F_LOAN_PORTFOLIO P 
SET P.MANAGEMENT_PORTFOLIO_FLAG = 1
FROM DAK.V_LOAN_CLASSIFIER  
RIGHT OUTER JOIN DM_CB.F_LOAN_PORTFOLIO  P ON (DAK.V_LOAN_CLASSIFIER.LOAN_CLASSIFIER_ID=P.LOAN_CLASSIFIER_ID)
INNER JOIN #TMP_LOAN_FACILITY_N TMP ON (TMP.LOAN_FCLY_ID=P.LOAN_FCLY_ID)
WHERE ( 
        ( P.LOAN_TYPE ) IN (' –≈ƒ»“','√¿–¿Õ“»ﬂ','¿  –≈ƒ»“»¬','ƒŒ√Œ¬Œ–_¡¿Õ ')
        AND ISNULL(( TMP.FO_CODE_5NT ), '') NOT IN ('¿” ÷»ŒÕ', 'Ã¡ _¬¿À','Ã¡ _–”¡','–≈≈—“–“–≈¡')
        AND ISNULL(( DAK.V_LOAN_CLASSIFIER.C0038 ), '') IN (' –≈ƒ»“ 5', ' –≈ƒ»“ 2', ' –≈ƒ»“ 0','')
        AND ISNULL(( DAK.V_LOAN_CLASSIFIER.C0037 ), '') <> '—¿À‹ƒ»–”Ã¿ﬂ'
      )
 AND P.REPORT_DATE >= CAST(NOW() AS DATE)-5
;


  UPDATE  dm_cb.F_LOAN_PORTFOLIO P
    SET P.INTL_PTFLO_ID = DP.PORTFOLIO_ID
    FROM dm_cb.F_LOAN_PORTFOLIO P
    JOIN CORE.V_D_AGREEMENT AGR ON P.LOAN_FCLY_ID = AGR.AGREEMENT_ID
    JOIN STAGE.INSTRUMENT I ON ( I.INSTRUMENT_CORE_ID = AGR.AGREEMENT_ID ) 
     AND I.CHANGED < 3 
     AND I.SOURCE_SYSTEM_ID IN (9,201)
     AND I.SOURCE_SYSTEM_ID = (CASE WHEN AGR.OWNER_SRS_CD = 'RKOF1' THEN 201 WHEN AGR.OWNER_SRS_CD = 'CUSTODY' THEN 9 ELSE NULL END)
    JOIN DAK.TMP_PORTFOLIO_CLS CLS ON ( CLS.INSTRUMENT_ID = I.INSTRUMENT_ID AND P.REPORT_DATE >= CLS.START_DATE AND P.REPORT_DATE <= CLS.END_DATE )
    JOIN IWS.D_PORTFOLIO DP ON ( DP.PORTFOLIO_NAME = CLS.PORTFOLIONAME AND DP.PORTFOLIO_TYPE = '' )
    WHERE  1= 1
     AND ISNULL(P.INTL_PTFLO_ID, 0) <> ISNULL(DP.PORTFOLIO_ID, 0)
     AND P.REPORT_DATE >= CAST(NOW() AS DATE)-5
    ;
    
--»— Àﬁ◊≈Õ»≈: ≈—À» —ƒ≈À ¿ Ã»√–»–Œ¬¿À¿ ¬ – Œ-‘1 » ¬ ¬»“–»Õ≈  À¿——»‘» ¿“Œ–Œ¬ ≈≈ Õ≈“, “Œ “»œ œŒ–“‘≈Àﬂ ¬—≈ –¿¬ÕŒ œ–Œ—“¿¬Àﬂ“‹ ≈—À» —ƒ≈À ¿ –¿Õ≈≈ ¡€À¿ ¬ CUSTODY.     
    UPDATE  dm_cb.F_LOAN_PORTFOLIO P
    SET P.INTL_PTFLO_ID = DP.PORTFOLIO_ID
    FROM dm_cb.F_LOAN_PORTFOLIO P
    JOIN CORE.V_D_AGREEMENT AGR ON P.LOAN_FCLY_ID = AGR.AGREEMENT_ID
    JOIN STAGE.INSTRUMENT I ON ( I.INSTRUMENT_CORE_ID = AGR.AGREEMENT_ID ) 
     AND I.CHANGED < 3 
     AND I.SOURCE_SYSTEM_ID =9
     AND AGR.OWNER_SRS_CD = 'RKOF1'
    JOIN DAK.TMP_PORTFOLIO_CLS CLS ON ( CLS.INSTRUMENT_ID = I.INSTRUMENT_ID AND P.REPORT_DATE >= CLS.START_DATE AND P.REPORT_DATE <= CLS.END_DATE )
    JOIN IWS.D_PORTFOLIO DP ON ( DP.PORTFOLIO_NAME = CLS.PORTFOLIONAME AND DP.PORTFOLIO_TYPE = '' )
    WHERE  1= 1
     AND ISNULL(P.INTL_PTFLO_ID, 0) = 0
     AND ISNULL(DP.PORTFOLIO_ID, 0) <> 0
     AND P.REPORT_DATE >= CAST(NOW() AS DATE)-5  
;
   
--¬Õ≈—»—“ —ƒ≈À » 
UPDATE DM_CB.F_LOAN_PORTFOLIO LP
SET LP.INTL_PTFLO_ID = PD.PORTFOLIO_ID
FROM
(
    SELECT AGR.AGREEMENT_ID AS LOAN_FCLY_ID,
    CASE WHEN D.SHORT_NAME LIKE '%ƒ    %'    THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%ƒ ¡Œ›%'    THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%ƒ  %'      THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%ƒ ¡Œ›%'    THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%ƒ—¡%'      THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%”‘%'       THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%ƒƒŒ“‘%'    THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%ƒƒŒ»“‘%'   THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%ƒ¿»” œ  %' THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%ƒÃ—¡%'     THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%ƒƒŒ»“‘%'   THEN ' –≈ƒ»“Õ€… ¡ÀŒ '
         WHEN D.SHORT_NAME LIKE '%ƒ—Ã‘%'     THEN '—»Õƒ» ¿÷»» » —“–. ‘»Õ.'
         WHEN D.SHORT_NAME LIKE '%ƒŒ—‘»œ%'   THEN 'ƒŒ—»‘»œ'
         WHEN D.SHORT_NAME LIKE '%ƒœ—‘%'     THEN '»Õ¬≈—“»÷»ŒÕÕ€…'
         WHEN D.SHORT_NAME LIKE '%LUXEMBOURG%'     THEN NULL
         WHEN D.SHORT_NAME LIKE '%SWITZERLAND%'    THEN NULL
         ELSE ' –≈ƒ»“Õ€… ¡ÀŒ ' END AS PORTFOLIONAME 

    FROM CORE.V_D_AGREEMENT AGR
    JOIN CORE.V_D_DEPT D ON AGR.DEPT_ENTITY_ID = D.ENTITY_ID
    WHERE AGR.OWNER_SRS_CD  = '—¿ƒ Œ' 
    AND AGR.PRDCT_KIND_CD =' –≈ƒ»“'
) TMP
JOIN DM_CREDPRFL.V_PORTFOLIO_DAKO PD ON (PD.PORTFOLIO_NAME = TMP.PORTFOLIONAME )
WHERE LP.LOAN_FCLY_ID = TMP.LOAN_FCLY_ID
  AND ISNULL(LP.INTL_PTFLO_ID,0) <> ISNULL(PD.PORTFOLIO_ID, 0)
  AND LP.REPORT_DATE >= CAST(NOW() AS DATE)-5
;
--»— Àﬁ◊≈Õ»ﬂ (œ–≈ƒ—“¿¬»“≈À‹—“¬¿ œŒ ¿ Õ≈“ ¬ CORE, Õ≈ «¿¡€“‹ «¿√–”«»“‹!!!)   
SELECT AGR.AGREEMENT_ID INTO #TMP_NOT_DEPT_N FROM CORE.V_D_AGREEMENT AGR
JOIN STAGE.INSTRUMENT I ON AGR.AGREEMENT_ID = I.INSTRUMENT_CORE_ID
 AND I.SOURCE_SYSTEM_ID = 300
JOIN STAGE.INSTRUMENT_CONTRACTOR IC ON  I.INSTRUMENT_ID = IC.INSTRUMENT_ID
 AND IC.CONTRACTOR_ID IN (42384950,42384956)
 AND IC.CHANGED < 3
;
 
UPDATE DM_CB.F_LOAN_PORTFOLIO LP
SET LP.INTL_PTFLO_ID = 0
WHERE LP.LOAN_FCLY_ID IN (SELECT AGREEMENT_ID FROM #TMP_NOT_DEPT_N)
 AND LP.REPORT_DATE >= CAST(NOW() AS DATE)-5
;



---












UPDATE DM_CB.DA_CLASSIFIER 
SET VALUE = NOW()
WHERE CLASSIFIER_ID = 1
;

UPDATE DM_CB.LOG_F_LOAN_PORTFOLIO 
SET END_DATETIME = NOW()
WHERE RUN_ID = V_LOG_ID
AND END_DATETIME IS NULL
;
COMMIT
;

END
GO
